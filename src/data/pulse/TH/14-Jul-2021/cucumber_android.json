[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 198046000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 359817200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 147300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10223341200,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3218400,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17604260900,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22405621500,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002053900,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9953912800,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4785833300,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1540277500,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 82500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 59800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 43900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2295833400,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10333827600,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 248114000,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013657100,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11643843600,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14787614700,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 419775700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11785998100,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2012574900,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14874653600,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22160612300,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010754400,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13128246100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: a3110f2f-2eea-4b2a-8eb2-7eb469f733d4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Sign In\u0027) or contains(@text,\u0027Log Masuk\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.clickSignIns_InSignUp(PulseLoginScreen.java:719)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.clickSignIns_InSignUp(LoginSteps.java:349)\r\n\tat ✽.And I click the Sign in link(features/PulseLoginTest.feature:32)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 418042000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8528700,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 114600,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10230274200,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17133339200,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21804617300,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015038500,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12940237100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b442099d-61f2-41c7-8ea4-b5fa02f7151e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Sign In\u0027) or contains(@text,\u0027Log Masuk\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.clickSignIns_InSignUp(PulseLoginScreen.java:719)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.clickSignIns_InSignUp(LoginSteps.java:349)\r\n\tat ✽.And I click the Sign in link(features/PulseLoginTest.feature:59)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 1180400500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 164000,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12926654300,
              "error_message": "com.prudential.tap.exception.TapException: Not able to find element on screen [By.xpath: //android.widget.EditText[contains(@text,\u0027pulsesgqa\u0027)]]\r\n\tat com.prudential.tap.appium.AppiumCommands.findElementNoWait(AppiumCommands.java:176)\r\n\tat com.prudential.tap.appium.AppiumCommands.cleartext(AppiumCommands.java:406)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.enterEmailForgotPassword(PulseLoginScreen.java:224)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.enterForgotPasswordEmail(LoginSteps.java:61)\r\n\tat ✽.Then enter the email to request the new password(features/PulseLoginTest.feature:77)\r\n",
              "status": "failed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 89600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1776868500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 758600,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 127500,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11405352400,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006234500,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15440067300,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23110472100,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5010605500,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3832994700,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006856100,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7217184900,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 303275000,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5888521600,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31925973200,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42519326100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6f0942a0-9cf6-4598-ba4c-e61bb8dad596\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027DD-MM-YYYY\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1117)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/PulseLoginTest.feature:108)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 22886800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10469672600,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2007543700,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15722000800,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2015686100,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16798996200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 868a457a-f713-4262-9a75-6b22537e6f9c\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat io.appium.java_client.PerformsTouchActions.performTouchAction(PerformsTouchActions.java:41)\r\n\tat io.appium.java_client.TouchAction.perform(TouchAction.java:187)\r\n\tat com.prudential.tap.appium.AppiumCommands.scrollElement(AppiumCommands.java:876)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollUpTillElementDisplayed(TestBasePage.java:394)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1018)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/PulseLoginTest.feature:149)\r\n",
              "status": "failed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 86800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 50000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10023758900,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 190500,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15045946700,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23100533800,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2011933100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10741071600,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4915037500,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1524693100,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 93100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 48100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2242387300,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10359157300,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 389201900,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14774828500,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5001233700,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13692057500,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 67500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 61800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13767820800,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 101000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9215493100,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 64300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6428284200,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 61000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22865446700,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 45000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21450985000,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in OnePulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 61300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 69400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10718748500,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198800,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.idsetting}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.idsetting}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 59
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15319789600,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23508515700,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013509300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12248059700,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4863512900,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9882582800,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Password",
                  "${login.mysettings}"
                ],
                "line": 14
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 282645500,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012389300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 16,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11247241800,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8782833500,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 647400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 336400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 21,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 487500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 240200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5002262500,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2276358100,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3730120200,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4090765600,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2022961900,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 63200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3896210100,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9027351500,
              "status": "passed"
            },
            "line": 34,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10555506700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 9528000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3010263000,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10915618700,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3014544600,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18198967000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5bb3ad9a-7610-4cad-804e-6d6f6d7e78f4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027SAVE\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickSaveButtonPersonalised(CustomerConnectScreen.java:836)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickSavebuttonpersonalized(CustomerConnectSteps.java:245)\r\n\tat ✽.And I click the save button in pulse personalised icons(features/th/PulseMySettings.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 19202900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8081843300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5bb3ad9a-7610-4cad-804e-6d6f6d7e78f4\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageUP(TestBasePage.java:377)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickMarketContent(CustomerConnectScreen.java:884)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMarketContent(CustomerConnectSteps.java:261)\r\n\tat ✽.And I click the Marketing content(features/th/PulseMySettings.feature:47)\r\n",
              "status": "failed"
            },
            "line": 47,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I verify the following text \"${Marketing.Consent.text}\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "${Marketing.Consent.text}",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Marketing.Consent.text}"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/th/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsph"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 50000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8644985900,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170900,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16024157900,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22529916000,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015208600,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10992156200,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4897924600,
              "status": "passed"
            },
            "line": 13,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1525655800,
              "status": "passed"
            },
            "line": 14,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 16,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2284209400,
              "status": "passed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10334962500,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 284662300,
              "status": "passed"
            },
            "line": 21,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006864200,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14786492200,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 3104351500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12158987800,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8699312900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tYou have not connected any wearable text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/th/home/PulseMyChallenges.feature:28)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the user can Connect Wearables via My Challenges",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-the-user-can-connect-wearables-via-my-challenges",
        "after": [
          {
            "result": {
              "duration": 2956072400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8296288900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cbd976b4-82e2-498b-99d2-06319ac41b4d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Connect Wearable\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${myChallenges.connectWearablesButton}\" in app screen(features/th/home/PulseMyChallenges.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I clicks on \"${myChallenges.connectWearablesButton}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${myChallenges.connectWearablesButton}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 38,
            "name": "I click on Back button of My Wearables screen",
            "match": {
              "location": "WearablesActivationSteps.clickBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 80300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 282860000,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8577923800,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 510634500,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 264376700,
              "status": "passed"
            },
            "line": 49,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/home/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challengesTH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 59500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 45100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10767205400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 246500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010110300,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15729315900,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21922699300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999807600,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10075944500,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4788833800,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9818312900,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1853595600,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10001018300,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11288131100,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14092778500,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 20,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 51800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 75300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5001281200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 23,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 771680000,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3616559600,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2470280600,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 31,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 32,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 56600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 31500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2323282400,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13627411900,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2356122900,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2352028000,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 38,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 65000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 9711900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:96)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1405838800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 41,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1703471900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 43,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3393639900,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21120462900,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8002690500,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18091998700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 494962bd-4fa4-4e6c-9110-fa65c0342e09\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickBackIcon(CustomerConnectScreen.java:2025)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.ClickBackBabylons(CustomerConnectSteps.java:209)\r\n\tat ✽.And I click the Back icons in pulse screen(features/th/profile/LegalAndLegacy.feature:52)\r\n",
              "status": "failed"
            },
            "line": 52,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/th/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalth"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  }
]