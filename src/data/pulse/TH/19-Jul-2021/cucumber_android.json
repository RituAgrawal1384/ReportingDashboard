[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 273721400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 117648800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 151900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9972319300,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2271900,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17751248900,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23018894600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2011210600,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10790043400,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4950248000,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1491801500,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 79100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2224699700,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9876256200,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 195475100,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005589900,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11236497000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14913369900,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 59600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 13945400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10388483600,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2007318600,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14347159100,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6012712600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 18996071-fd13-440a-97af-12ea99cd04ef\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Spinner[1]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1015)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/PulseLoginTest.feature:29)\r\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 370738000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6344700,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88900,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7991741200,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16300582700,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23282007700,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007460100,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13113891900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d81a5c2a-483c-4d7e-8586-b719f7250258\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Sign In\u0027) or contains(@text,\u0027Log Masuk\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.clickSignIns_InSignUp(PulseLoginScreen.java:720)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.clickSignIns_InSignUp(LoginSteps.java:349)\r\n\tat ✽.And I click the Sign in link(features/PulseLoginTest.feature:59)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 1101759900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 134100,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12773783500,
              "error_message": "com.prudential.tap.exception.TapException: Not able to find element on screen [By.xpath: //android.widget.EditText[contains(@text,\u0027pulsesgqa\u0027)]]\r\n\tat com.prudential.tap.appium.AppiumCommands.findElementNoWait(AppiumCommands.java:176)\r\n\tat com.prudential.tap.appium.AppiumCommands.cleartext(AppiumCommands.java:406)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.enterEmailForgotPassword(PulseLoginScreen.java:225)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.enterForgotPasswordEmail(LoginSteps.java:61)\r\n\tat ✽.Then enter the email to request the new password(features/PulseLoginTest.feature:77)\r\n",
              "status": "failed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1713722900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 404800,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45300,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9220525900,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001539300,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13394185900,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23774699200,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5016527200,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4403549800,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003023900,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7080761700,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 230312500,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4738958900,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30950837200,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41927912200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1b77a7a5-14e9-4cb0-aa4d-4a6521ff1af1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027DD-MM-YYYY\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1116)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/PulseLoginTest.feature:108)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 84500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 388068300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9803675600,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2010417100,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13791618300,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007940200,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21992225000,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1993619800,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10217442700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6af847d7-4180-43d1-96ee-bb765aeeba1f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"EN\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectTheLanguageToggle(PulseRegistrationScreen.java:1066)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle(RegistrationSteps.java:429)\r\n\tat ✽.Then I navigate to pulse registration page and select the lang on toggle bar(features/PulseLoginTest.feature:151)\r\n",
              "status": "failed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 60100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 57500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9476461300,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15897291000,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23219019100,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2027902500,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11133711600,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4891908600,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1567736200,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 86500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2263171000,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9522756500,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 265917200,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15544371400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4997589300,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14025787400,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 70000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 76300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13834024600,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 95800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 33100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9199823900,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 69400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 51900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6489282200,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 61700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 74200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22437267900,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 110000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22173490100,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in OnePulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 72500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 66900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9303099800,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5004271100,
              "status": "passed"
            },
            "line": 6,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 229900,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.idsetting}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.idsetting}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 59
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12097547800,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23949042900,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4014204100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10010066200,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4845447300,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10023322800,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${login.mysettings}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 902067700,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003991100,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10755069200,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9018946700,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 629000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 286000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 21,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 357800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 238000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5008995500,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 924591700,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3733422500,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4451628000,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1953281800,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 78500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3969732500,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8823680700,
              "status": "passed"
            },
            "line": 34,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4909923900,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001782500,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4827647800,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3013903700,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3641234800,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8444327500,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8629629300,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 46,
            "value": "# Marketing conset is not there in th"
          },
          {
            "line": 47,
            "value": "#  Scenario: Verify the Marketing Consent in Account tab"
          },
          {
            "line": 48,
            "value": "#    And I click the Marketing content"
          },
          {
            "line": 49,
            "value": "#    Then I wait for 3 sec"
          },
          {
            "line": 50,
            "value": "#    Then I verify the following text \"${Marketing.Consent.text}\" Screens"
          },
          {
            "line": 51,
            "value": "#      | ${Marketing.Consent.text} |"
          },
          {
            "line": 52,
            "value": "#    And I click the save button in pulse personalised icons"
          },
          {
            "line": 53,
            "value": "#    And I click the Ok button in pulse personlised screen"
          },
          {
            "line": 54,
            "value": "#    And I click the Back icon in pulse Marketing Consent"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 73400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "Verify my setting screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-my-setting-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 35100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2753987700,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 329486800,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on \"${icon.mySettings}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${icon.mySettings}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012041400,
              "status": "passed"
            },
            "line": 59,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1706701600,
              "status": "passed"
            },
            "line": 60,
            "name": "User verify following list texts are displayed in My Setting screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnListMySettingScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Country"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Thailand"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Language"
                ],
                "line": 63
              },
              {
                "cells": [
                  "English (UK)"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Change Password"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Enable Face Auth"
                ],
                "line": 66
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/th/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsth"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# fitness tab is not available in ios device"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 88700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 66800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9614310300,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 191300,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003554800,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13462498900,
              "status": "passed"
            },
            "line": 12,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23131735900,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007294000,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11358885700,
              "status": "passed"
            },
            "line": 15,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4856563500,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9934324500,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 266319300,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012388700,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10243903600,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14548915300,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 81600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Verify the user can access Exercise Buddy via Fitness",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-exercise-buddy-via-fitness",
        "after": [
          {
            "result": {
              "duration": 42000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14133248800,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5496885700,
              "status": "passed"
            },
            "line": 28,
            "name": "User clicks on Exercise Buddy button on Fitness screen",
            "match": {
              "location": "ExerciseBuddySteps.clickOnExerciseBuddy()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419100,
              "status": "passed"
            },
            "line": 29,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${exeBuddy.description}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${beginner.title}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 884631600,
              "status": "passed"
            },
            "line": 33,
            "name": "User clicks on \"${exeBuddy.intermediate}\" button on Exercise Buddy",
            "match": {
              "arguments": [
                {
                  "val": "${exeBuddy.intermediate}",
                  "offset": 16
                }
              ],
              "location": "ExerciseBuddySteps.clickButton(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#    No visible change to be validated in each difficulty level"
          },
          {
            "line": 35,
            "value": "#    And User clicks on \"${exeBuddy.beginner}\" button on Exercise Buddy"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 62300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify the Take Challenge via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-take-challenge-via-squats",
        "after": [
          {
            "result": {
              "duration": 81300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4127514000,
              "status": "passed"
            },
            "line": 39,
            "name": "User clicks on Take Challenge button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 41
                }
              ],
              "location": "ExerciseBuddySteps.clickTakeChallenge(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 252900,
              "status": "passed"
            },
            "line": 40,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.takeChallenge.title}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.description}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.subTitle}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.noPartner}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14846851600,
              "status": "passed"
            },
            "line": 45,
            "name": "User searches for \"Test\" and adds \"Test Test\" as a partner",
            "match": {
              "arguments": [
                {
                  "val": "Test",
                  "offset": 19
                },
                {
                  "val": "Test Test",
                  "offset": 35
                }
              ],
              "location": "ExerciseBuddySteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 131200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 48,
        "name": "Verify the Start via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-start-via-squats",
        "after": [
          {
            "result": {
              "duration": 2333654000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11768395900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 20205f5d-6c07-465d-9773-ad8e8c261fee\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Button[@text\u003d\"Allow\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnStart(ExerciseBuddyScreen.java:90)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickStart(ExerciseBuddySteps.java:59)\r\n\tat ✽.When User clicks on Start button on \"${beginner.squat}\"(features/th/fitness/ExerciseBuddy.feature:49)\r\n",
              "status": "failed"
            },
            "line": 49,
            "name": "User clicks on Start button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 32
                }
              ],
              "location": "ExerciseBuddySteps.clickStart(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${squat.results.description}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${squat.score.stat}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${squat.score.stands}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${squat.score.precision}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${squat.startAgain}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "User clicks on Start Now button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 36
                }
              ],
              "location": "ExerciseBuddySteps.clickStartNow(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "User clicks on Done button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickDone(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 63,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 64
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 129000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Preview via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-preview-via-squats",
        "after": [
          {
            "result": {
              "duration": 2130201700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8128687300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 20205f5d-6c07-465d-9773-ad8e8c261fee\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Squats\"]/following::android.widget.TextView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnPreview(ExerciseBuddyScreen.java:81)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickPreview(ExerciseBuddySteps.java:54)\r\n\tat ✽.When User clicks on Preview button on \"${beginner.squat}\"(features/th/fitness/ExerciseBuddy.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "User clicks on Preview button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 34
                }
              ],
              "location": "ExerciseBuddySteps.clickPreview(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${beginner.squat}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${squat.preview.titleDescription}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${squat.preview.about}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${squat.preview.description}"
                ],
                "line": 73
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 74,
                "value": "#  PCAONEPULSE-22731"
              },
              {
                "line": 75,
                "value": "#      |${squat.preview.withFriend}|"
              }
            ],
            "line": 76,
            "name": "User clicks on Take Challenge on \"Squats Preview\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Preview",
                  "offset": 34
                }
              ],
              "location": "ExerciseBuddySteps.clickChallengeonPreview(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "User clicks on Back button",
            "match": {
              "location": "ExerciseBuddySteps.clickBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "User clicks on Start Now button on \"Squats Preview\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Preview",
                  "offset": 36
                }
              ],
              "location": "ExerciseBuddySteps.clickStartNow(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "User clicks on Done button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickDone(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 86,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.preview.workout}"
                ],
                "line": 87
              },
              {
                "cells": [
                  "${squat.preview.instructions}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "${squat.preview.instruction1}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "${squat.preview.instruction2}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${squat.preview.instruction3}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${squat.preview.instruction4}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${squat.preview.instruction5}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${squat.preview.instruction6}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${squat.preview.instruction7}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${squat.preview.instruction8}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "${squat.preview.instruction9}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "${squat.preview.instruction10"
                ],
                "line": 98
              },
              {
                "cells": [
                  "${squat.preview.warmup}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${squat.preview.warmupDescription}"
                ],
                "line": 100
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Exercise Buddy functionality via Fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/th/fitness/ExerciseBuddy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@exerciseBuddy_th"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 62900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 23121300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9029900500,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 114000,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008356300,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7028578800,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94738400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d71516ca-83e9-4858-8a84-9e1916889416\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Spinner[1]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1015)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/th/fitness/MyWearable.feature:9)\r\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 70000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 17770600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 35056300,
              "status": "passed"
            },
            "line": 23,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63095100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: My Wearables expected [true] but found [false],\n\tthe expected text is: Track all your activities at the click of a button expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(OptionsInFooterSteps.java:40)\r\n\tat ✽.Then I verify My Wearables tile on Fitness screen(features/th/fitness/MyWearable.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "I verify My Wearables tile on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${fitness.myWearables}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "${fitness.myWearables.description}"
                ],
                "line": 26
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I click on Connect Now button on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${wearables.fitbitText}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${wearables.garminText}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/th/fitness/MyWearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@myWearables_th"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "comments": [
          {
            "line": 6,
            "value": "#  Better to proceed with a new registration"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 101800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 7,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 36200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8986454100,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 162200,
              "status": "passed"
            },
            "line": 9,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7607110400,
              "status": "passed"
            },
            "line": 10,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1617700,
              "status": "passed"
            },
            "line": 11,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10159448100,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 14
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 306985600,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10011894300,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30262869900,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14588004600,
              "status": "passed"
            },
            "line": 18,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 74000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 20,
        "name": "Verify User should be able to navigate to Food page",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-food-page",
        "after": [
          {
            "result": {
              "duration": 42900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2453311500,
              "status": "passed"
            },
            "line": 21,
            "name": "I navigate to food screen from home page",
            "match": {
              "location": "FoodSteps.iNavigateToWealthScreen()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5013749700,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4561884700,
              "status": "passed"
            },
            "line": 23,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5015245800,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 577925300,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to my food journal from food",
            "match": {
              "location": "FoodSteps.iNavigateToMyFoodJournal()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to see the list of food schedule time",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-list-of-food-schedule-time",
        "after": [
          {
            "result": {
              "duration": 72600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3229422800,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.LogyourFood}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${food.myfoodjournal.Consumed}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${food.myfoodjournal.foodjournal}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 32,
            "value": "#      |${food.myfoodjournal.log}                    |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 46300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to time of the meal, add to cart and scan",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-time-of-the-meal,-add-to-cart-and-scan",
        "after": [
          {
            "result": {
              "duration": 64100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2787680800,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Scan}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${food.myfoodjournal.addfood}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${food.myfoodjournal.breakfast}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${food.myfoodjournal.lunch}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${food.myfoodjournal.dinner}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 73300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to see the details after moving to \"Breakfast\"",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;2",
        "after": [
          {
            "result": {
              "duration": 43500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5006064200,
              "status": "passed"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 535235500,
              "status": "passed"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5013821000,
              "status": "passed"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1038607900,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.selectfood}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8722400800,
              "status": "passed"
            },
            "line": 50,
            "name": "User search for the food \"Seafood Gumbo\" index",
            "match": {
              "arguments": [
                {
                  "val": "Seafood Gumbo",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 171015600,
              "status": "passed"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4470692900,
              "status": "passed"
            },
            "line": 52,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@foodJournalTH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionTH"
          },
          {
            "line": 1,
            "name": "@foodTest"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 58700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "Verify User should be able to see the details after moving to \"Lunch\"",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;3",
        "after": [
          {
            "result": {
              "duration": 80500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 90400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5007992800,
              "status": "passed"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 401677700,
              "status": "passed"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5003614300,
              "status": "passed"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 831679800,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.selectfood}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8515157500,
              "status": "passed"
            },
            "line": 50,
            "name": "User search for the food \"Bites\" index",
            "match": {
              "arguments": [
                {
                  "val": "Bites",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 206113900,
              "status": "passed"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4317728500,
              "status": "passed"
            },
            "line": 52,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@foodJournalTH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionTH"
          },
          {
            "line": 1,
            "name": "@foodTest"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 123400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to see the details after moving to \"Dinner\"",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;4",
        "after": [
          {
            "result": {
              "duration": 880774400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5006336300,
              "status": "passed"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7741808600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 33e3f54d-132d-496f-9599-e10c4b66cab5\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.TextView[contains(@text,\"Add Food\")])[3]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.FoodScreen.clickToAddFoodBreakFast(FoodScreen.java:68)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.FoodSteps.clickAddBreakfast(FoodSteps.java:66)\r\n\tat ✽.When User clicks on add food button for breakfast index \"3\"(features/th/food/MyFoodJournal.feature:44)\r\n",
              "status": "failed"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.selectfood}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User search for the food \"Cake\" index",
            "match": {
              "arguments": [
                {
                  "val": "Cake",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@foodJournalTH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionTH"
          },
          {
            "line": 1,
            "name": "@foodTest"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see log after add food is done",
        "description": "",
        "id": "verify-food-journal--functionality-on-one-pulse-app;verify-user-should-be-able-to-see-log-after-add-food-is-done",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3781842200,
              "status": "passed"
            },
            "line": 60,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5015725100,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 463910000,
              "status": "passed"
            },
            "line": 62,
            "name": "click on the \"${food.myfoodjournal.Log}\" button",
            "match": {
              "arguments": [
                {
                  "val": "${food.myfoodjournal.Log}",
                  "offset": 14
                }
              ],
              "location": "FoodSteps.clickButton(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1273253000,
              "status": "passed"
            },
            "line": 63,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.logtime.Log}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${food.myfoodjournal.logtime.save}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${food.myfoodjournal.logtime.cancel}"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 213694600,
              "status": "passed"
            },
            "line": 67,
            "name": "click on the cancel button in logtime in food",
            "match": {
              "location": "FoodSteps.clickoncancelButtonLogtime()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Food Journal  functionality on one pulse App",
    "description": "",
    "id": "verify-food-journal--functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/food/MyFoodJournal.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      },
      {
        "line": 1,
        "name": "@foodJournalTH"
      },
      {
        "line": 1,
        "name": "@foodTest"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# This feature will fail due to the defect PCAONEPULSE-21990"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 60500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9342353400,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 171900,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011270500,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13547054200,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23322166300,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007870100,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11007871500,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4945663500,
              "status": "passed"
            },
            "line": 14,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006427800,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 297867500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002044600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10272328100,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13874051000,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 2495735500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14407835000,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40394598000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20662282300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b58bc481-0663-481f-bd44-7c462a05ba21\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Search here\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.LocationScreen.clickSearchTextFieldInMaps(LocationScreen.java:68)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnSearchHereTextField(LocationSteps.java:35)\r\n\tat ✽.When I clicks on Search here text field(features/th/health/Hospital_Clinic_Locator.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 2269007100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8576029800,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26073179400,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalInformationScreen(LocationScreen.java:151)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(LocationSteps.java:81)\r\n\tat ✽.Then I can see the \"Hospital\" Information screen with Navigate and Call Now buttons(features/th/health/Hospital_Clinic_Locator.feature:35)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 35,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 37,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 2171123900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8700375100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b58bc481-0663-481f-bd44-7c462a05ba21\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Speciality\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\r\n\tat ✽.When I clicks on \"Speciality\" tab(features/th/health/Hospital_Clinic_Locator.feature:38)\r\n",
              "status": "failed"
            },
            "line": 38,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 39,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 41,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 2197685800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8487535200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b58bc481-0663-481f-bd44-7c462a05ba21\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Doctors\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\r\n\tat ✽.When I clicks on \"Doctors\" tab(features/th/health/Hospital_Clinic_Locator.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 43,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 45,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 2253444100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8796165100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b58bc481-0663-481f-bd44-7c462a05ba21\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Rooms\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\r\n\tat ✽.When I clicks on \"Rooms\" tab(features/th/health/Hospital_Clinic_Locator.feature:46)\r\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 47,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 60100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 49,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 289343900,
              "status": "passed"
            },
            "line": 50,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 53,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 2876412800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1300232500,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20116639500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b58bc481-0663-481f-bd44-7c462a05ba21\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Search here\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.LocationScreen.clickSearchTextFieldInMaps(LocationScreen.java:68)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnSearchHereTextField(LocationSteps.java:35)\r\n\tat ✽.When I clicks on Search here text field(features/th/health/Hospital_Clinic_Locator.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 57,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 59,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 2795398300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 166794489300,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.LocationScreen.verifySearchResults(LocationScreen.java:102)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(LocationSteps.java:51)\r\n\tat ✽.And User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results(features/th/health/Hospital_Clinic_Locator.feature:60)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 62,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 44300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8561650200,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 65,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 3066170200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25527340900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [1] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [2] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [3] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [4] under Clinics Search Results screen expected [true] but found [false],\n\tCall button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tNavigate button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tSeeDetails button is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tTimings text is not displayed for Clinics tile [5] under Clinics Search Results screen expected [true] but found [false],\n\tCall Now button is not displayed for the firstClinic tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstClinic tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Clinic tile See Details screen expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalInformationScreen(LocationScreen.java:151)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(LocationSteps.java:81)\r\n\tat ✽.Then I can see the \"Clinic\" Information screen with Navigate and Call Now buttons(features/th/health/Hospital_Clinic_Locator.feature:66)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 66,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 552133700,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 40600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7191356600,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-location-feature",
    "keyword": "Feature",
    "uri": "features/th/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocatorTH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 87200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 38700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9632115100,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 102800,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2022109700,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14160712200,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21889245100,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002054600,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10409048400,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4860801200,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10626065800,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 305426500,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002374800,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11296031800,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14380044900,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 37000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21511689400,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006929300,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6794327300,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 77400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 39200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 25800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8610358600,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8026776800,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 7690300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8588629100,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126457977500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tOpen events displayed expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.verifyOpenEvents(CustomerConnectScreen.java:2051)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.verifyOpenEventsOnScreen(CustomerConnectSteps.java:672)\r\n\tat ✽.And I verify either static text or available open events are displayed on screen(features/th/home/MyEvents.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEventTH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegressio"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 48700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9418617400,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 211600,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007500200,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14350188200,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22801283500,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000291700,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10520990400,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4824001000,
              "status": "passed"
            },
            "line": 13,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10955876800,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 362038700,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000659900,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11429041900,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14474799300,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 60400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000223500,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24588023400,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8001832100,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1073286600,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18354709900,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 36,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 37,
            "value": "#    And I Like the post"
          },
          {
            "line": 38,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 39,
            "value": "#    And I Like the post"
          },
          {
            "line": 41,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 42,
            "value": "#    And I share the post"
          },
          {
            "line": 43,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 45,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 46,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 47,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 48,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 51,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 52,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 42000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 54,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 61400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7942574500,
              "status": "passed"
            },
            "line": 55,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10010006400,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 85100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 40200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13311388400,
              "status": "passed"
            },
            "line": 59,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 60
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 74500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 64,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 79300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5592263500,
              "status": "passed"
            },
            "line": 65,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5636912700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 66,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 67,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 103800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 69,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 42600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5598942300,
              "status": "passed"
            },
            "line": 70,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11027752000,
              "status": "passed"
            },
            "line": 71,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 73,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 47800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4816676600,
              "status": "passed"
            },
            "line": 74,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannelTH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 52300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 16565600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9338397300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 141400,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009772400,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13634791800,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6867190200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 231de0dc-c204-4b71-94cb-14a9eb5c6ca2\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Spinner[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1015)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/th/home/PulseMyChallenges.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 21022600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28430800,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53732700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMy Challenges text is displayed on page  expected [true] but found [false],\n\tYou have not connected any wearable text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/th/home/PulseMyChallenges.feature:26)\r\n",
              "status": "failed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 82400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Verify the user can Connect Wearables via My Challenges",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-the-user-can-connect-wearables-via-my-challenges",
        "after": [
          {
            "result": {
              "duration": 11007200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26414100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 231de0dc-c204-4b71-94cb-14a9eb5c6ca2\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Connect Wearable\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${myChallenges.connectWearablesButton}\" in app screen(features/th/home/PulseMyChallenges.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "I clicks on \"${myChallenges.connectWearablesButton}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${myChallenges.connectWearablesButton}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I click on Back button of My Wearables screen",
            "match": {
              "location": "WearablesActivationSteps.clickBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 39,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 13864700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor27.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24160800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 231de0dc-c204-4b71-94cb-14a9eb5c6ca2\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"All Challenges\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${all.challenges.text}\" in app screen(features/th/home/PulseMyChallenges.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/home/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challengesTH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 90000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8349796400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 170000,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002779100,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14752701300,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23441324600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002415100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10623078200,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4900014300,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10461164300,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 266837400,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005552000,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10885360000,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15296378600,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 42500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6005786100,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2902515700,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6003543400,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 334559800,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9275018800,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 49700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 321251100,
              "status": "passed"
            },
            "line": 33,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999324700,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6742750700,
              "status": "passed"
            },
            "line": 35,
            "name": "I leave all joined communities by clicking on three dots menu icon on my My communities screen",
            "match": {
              "location": "MyCommunitiesSteps.leaveAllJoinedCommunities()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#    When I click on joined community three dots menu icon"
          },
          {
            "line": 37,
            "value": "#    And I click on leave button for joined community"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 39400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5014249700,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 960315600,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3683977200,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4676431800,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16149625200,
              "status": "passed"
            },
            "line": 45,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2367916600,
              "status": "passed"
            },
            "line": 46,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3101755800,
              "status": "passed"
            },
            "line": 48,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 870898900,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2958148700,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 52
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 55,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9008930400,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000678300,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8782131300,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9249769600,
              "status": "passed"
            },
            "line": 59,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3804242700,
              "status": "passed"
            },
            "line": 60,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2235493900,
              "status": "passed"
            },
            "line": 61,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1017781800,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7671348700,
              "status": "passed"
            },
            "line": 64,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 3400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 66,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4937688100,
              "status": "passed"
            },
            "line": 67,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4113614700,
              "status": "passed"
            },
            "line": 68,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4264506700,
              "status": "passed"
            },
            "line": 69,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8954574000,
              "status": "passed"
            },
            "line": 70,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 73,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 43300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 688860500,
              "status": "passed"
            },
            "line": 74,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010286300,
              "status": "passed"
            },
            "line": 75,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1245994300,
              "status": "passed"
            },
            "line": 76,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3012802000,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16532428600,
              "status": "passed"
            },
            "line": 78,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4438062000,
              "status": "passed"
            },
            "line": 79,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4295162000,
              "status": "passed"
            },
            "line": 80,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11378028600,
              "status": "passed"
            },
            "line": 81,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10059431700,
              "status": "passed"
            },
            "line": 82,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3817257100,
              "status": "passed"
            },
            "line": 83,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3266484800,
              "status": "passed"
            },
            "line": 85,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1518437600,
              "status": "passed"
            },
            "line": 87,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15012771500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 90,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 91,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 467092200,
              "status": "passed"
            },
            "line": 92,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17051040900,
              "status": "passed"
            },
            "line": 93,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 250223100,
              "status": "passed"
            },
            "line": 98,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 750629800,
              "status": "passed"
            },
            "line": 99,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1636841100,
              "status": "passed"
            },
            "line": 100,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 103,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1406019800,
              "status": "passed"
            },
            "line": 104,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 106,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1881409600,
              "status": "passed"
            },
            "line": 107,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4583882100,
              "status": "passed"
            },
            "line": 108,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 208180400,
              "status": "passed"
            },
            "line": 109,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1412759900,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/th/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communtiesTH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 39600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9530838600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 125900,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012429300,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14167107400,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22458590200,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012367800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9607273100,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4982366200,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10392600500,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 274408600,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9995689800,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11122602900,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14208358200,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Verify the My communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-my-communities-screen",
        "after": [
          {
            "result": {
              "duration": 58700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6017648000,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3006255500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 25,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 26,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 27,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 303234500,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8722861200,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3006327200,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 35,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 36,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 74900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 740697200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4927902600,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2310176500,
              "status": "passed"
            },
            "line": 40,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3541949700,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 277895200,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4250460700,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10669344700,
              "status": "passed"
            },
            "line": 44,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10845957300,
              "status": "passed"
            },
            "line": 45,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3001430900,
              "status": "passed"
            },
            "line": 46,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4145242700,
              "status": "passed"
            },
            "line": 47,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1484423200,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1315853400,
              "status": "passed"
            },
            "line": 49,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8162775000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01e6101b-5d2b-4cdb-81ea-d14055b0f2a2\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"OK\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"OK\" in app screen(features/th/home/mycommunities/PulseMyCommunities_private.feature:50)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 50,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/th/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_privateTH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9527674100,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 641800,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2014110100,
              "status": "passed"
            },
            "line": 7,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15277744100,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22973138300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999721100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11112090500,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4926492100,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9940973700,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 253452300,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10015305900,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11718883300,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13539200600,
              "status": "passed"
            },
            "line": 19,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 20,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010345500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 23,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 787648900,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3711983300,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2425192700,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 31,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 32,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2336639200,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13653118100,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2364938300,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2333719800,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 38,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 157800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 40300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1393111100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 41,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1551383300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 43,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3657773300,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21170847800,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8007022200,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21587665100,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/th/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalth"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 122500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen-and-should-be-able-to-change-the-profile-on-app",
        "after": [
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10776296500,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 702500,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006090700,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14411383700,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22945993300,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009490600,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10777380800,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4913003100,
              "status": "passed"
            },
            "line": 13,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10700685800,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 350273000,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000494100,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11293222200,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15427551000,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11391753800,
              "status": "passed"
            },
            "line": 21,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4846646900,
              "status": "passed"
            },
            "line": 22,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5002415400,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23845338600,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to edit profile screen",
            "match": {
              "location": "ManageProfileSteps.userNavigateToEditProfileScreen()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@dsdsdsd"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 25,
            "value": "#  #For temporary to avoid the pulse mate pop up"
          },
          {
            "line": 26,
            "value": "#    Scenario: Verify Details updated during pulse profile registration should be reflected in edit profile screen"
          },
          {
            "line": 27,
            "value": "#   Then I verify the default values in pulse profile is updated as below"
          },
          {
            "line": 28,
            "value": "#     | FirstName   | My Profile workflow |"
          },
          {
            "line": 29,
            "value": "#     | LastName    | Automation          |"
          },
          {
            "line": 30,
            "value": "#     | Gender      | Select              |"
          },
          {
            "line": 31,
            "value": "#     | PhoneNumber | Phone Number        |"
          },
          {
            "line": 32,
            "value": "#     | Address     | Address             |"
          },
          {
            "line": 34,
            "value": "#    This scenario might fail in some devices due to locator identifying issue- Take photo OK button"
          },
          {
            "line": 35,
            "value": "#"
          },
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to change the profile picture in edit profile screen"
          },
          {
            "line": 37,
            "value": "#    Then I give manage profile camera permission"
          },
          {
            "line": 38,
            "value": "#    Then I take picture from Camera"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28701854300,
              "status": "passed"
            },
            "line": 41,
            "name": "change personal details",
            "match": {
              "location": "EditProfileSteps.changeProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Automation"
                ],
                "line": 42
              },
              {
                "cells": [
                  "LastName",
                  "Testing"
                ],
                "line": 43
              },
              {
                "cells": [
                  "PhoneNumber",
                  "81069586"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Address",
                  "Thailand"
                ],
                "line": 45
              },
              {
                "cells": [
                  "PostalCode",
                  "10170"
                ],
                "line": 46
              },
              {
                "cells": [
                  "DOB",
                  "13-January-2003"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 906283000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 48,
                "value": "#  And I assign date of birth into variable \"DATE_OF_BIRTH\""
              }
            ],
            "line": 49,
            "name": "click on save button",
            "match": {
              "location": "EditProfileSteps.clickSaveButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 51,
        "name": "Verify the email and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 51000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15061604800,
              "status": "passed"
            },
            "line": 52,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326128000,
              "status": "passed"
            },
            "line": 53,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4543396100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 54,
                "value": "#    And verify country of Residence is Singapore"
              }
            ],
            "line": 55,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009758300,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 401077700,
              "status": "passed"
            },
            "line": 57,
            "name": "click on save button",
            "match": {
              "location": "EditProfileSteps.clickSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5009435600,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 604657200,
              "status": "passed"
            },
            "line": 59,
            "name": "I click \"${accounts.back.button}\" button on the app",
            "match": {
              "arguments": [
                {
                  "val": "${accounts.back.button}",
                  "offset": 9
                }
              ],
              "location": "WealthSteps.iClickButtonOnTheApp(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 70200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 61,
        "name": "Verify User should be able to see the registration required pop up if user not completed MyDoc Registration",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-registration-required-pop-up-if-user-not-completed-mydoc-registration",
        "after": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7593491700,
              "status": "passed"
            },
            "line": 62,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1239315200,
              "status": "passed"
            },
            "line": 63,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Registration Required"
                ],
                "line": 64
              },
              {
                "cells": [
                  "You are currently not registered. Please register yourself before continuing."
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 323792700,
              "status": "passed"
            },
            "line": 66,
            "name": "I verify following buttons are displayed",
            "match": {
              "location": "MyDocSteps.iVerifyFollowingButtonsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LATER"
                ],
                "line": 67
              },
              {
                "cells": [
                  "REGISTER NOW"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4353182000,
              "status": "passed"
            },
            "line": 69,
            "name": "I proceed with register now button",
            "match": {
              "location": "MyDocSteps.iProceedWithRegisterNowButton()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should not be able to edit Gender and DOB fields on myDoc registration page once the user submitted their gender and DOB in edit profile",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-not-be-able-to-edit-gender-and-dob-fields-on-mydoc-registration-page-once-the-user-submitted-their-gender-and-dob-in-edit-profile",
        "after": [
          {
            "result": {
              "duration": 26000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010176000,
              "status": "passed"
            },
            "line": 72,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 471601800,
              "status": "passed"
            },
            "line": 73,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Online Consultation"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8711806800,
              "status": "passed"
            },
            "line": 75,
            "name": "verify Gender field should not be editable in mydoc Registration Screen",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableFieldsForGenderInMyDoc()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8256195500,
              "status": "passed"
            },
            "line": 76,
            "name": "verify DOB field should not be editable in mydoc Registration Screen",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableFieldsForDOBInMyDoc()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/th/profile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfilePH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  }
]