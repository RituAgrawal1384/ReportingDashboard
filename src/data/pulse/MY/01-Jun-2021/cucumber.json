[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1609932600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 566876000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 137700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 922600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26613190300,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11931200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12639946300,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12544684000,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5002885800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11933075800,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5421338400,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2599251000,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 248200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 58400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 57900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2393180700,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18425877900,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 561202300,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000723600,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8360231000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8459784000,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 244900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 49600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 56700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 116900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15466293000,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2001523000,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13547578100,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12300651100,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000466000,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10637173100,
              "status": "passed"
            },
            "line": 31,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4942062200,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3746419300,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19161682500,
              "status": "passed"
            },
            "line": 34,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 36
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4108641700,
              "status": "passed"
            },
            "line": 37,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 466190500,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 994436200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 39,
                "value": "## need to check validation message"
              }
            ],
            "line": 40,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 376238000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 41,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 42,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3419931600,
              "status": "passed"
            },
            "line": 43,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 945089900,
              "status": "passed"
            },
            "line": 45,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1135591600,
              "status": "passed"
            },
            "line": 46,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 161400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 43300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 48,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 150700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 352200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 51009300,
              "status": "passed"
            },
            "line": 49,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 282400,
              "status": "passed"
            },
            "line": 50,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 51
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13994902500,
              "status": "passed"
            },
            "line": 53,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13011815500,
              "status": "passed"
            },
            "line": 54,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10615514900,
              "status": "passed"
            },
            "line": 55,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001271300,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 483640500,
              "status": "passed"
            },
            "line": 57,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5381548300,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3853686500,
              "status": "passed"
            },
            "line": 59,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18110498400,
              "status": "passed"
            },
            "line": 60,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 62
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4226855800,
              "status": "passed"
            },
            "line": 63,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 278276700,
              "status": "passed"
            },
            "line": 64,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1238142300,
              "status": "passed"
            },
            "line": 65,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 363955900,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4003660700,
              "status": "passed"
            },
            "line": 67,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 891028700,
              "status": "passed"
            },
            "line": 69,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1350578500,
              "status": "passed"
            },
            "line": 70,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 236400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 46700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 72,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 43100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 60600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 671800,
              "status": "passed"
            },
            "line": 73,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4382746100,
              "status": "passed"
            },
            "line": 74,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 75
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 805601500,
              "status": "passed"
            },
            "line": 76,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000245600,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27764648300,
              "status": "passed"
            },
            "line": 78,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1244825200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 79,
                "value": "#    Then I wait for 30 sec"
              },
              {
                "line": 80,
                "value": "#    Given I create connection for api service"
              },
              {
                "line": 81,
                "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
              },
              {
                "line": 82,
                "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
              }
            ],
            "line": 83,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000681900,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 7 sec",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 250025400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 85,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 86,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 175400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 24500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 70500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 87300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3144800,
              "status": "passed"
            },
            "line": 89,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 146400,
              "status": "passed"
            },
            "line": 90,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13680584800,
              "status": "passed"
            },
            "line": 91,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000672300,
              "status": "passed"
            },
            "line": 92,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13087769000,
              "status": "passed"
            },
            "line": 93,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12018388300,
              "status": "passed"
            },
            "line": 94,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000321700,
              "status": "passed"
            },
            "line": 95,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7586250900,
              "status": "passed"
            },
            "line": 96,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000699100,
              "status": "passed"
            },
            "line": 97,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7994006300,
              "status": "passed"
            },
            "line": 98,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 102
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1200069500,
              "status": "passed"
            },
            "line": 103,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30799922200,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000945800,
              "status": "passed"
            },
            "line": 105,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 68258184300,
              "status": "passed"
            },
            "line": 106,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7220588200,
              "status": "passed"
            },
            "line": 107,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 773617000,
              "status": "passed"
            },
            "line": 108,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9041562300,
              "status": "passed"
            },
            "line": 109,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999761900,
              "status": "passed"
            },
            "line": 110,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38496847100,
              "status": "passed"
            },
            "line": 111,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 238100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 122,
        "name": "Verify the Login Functionality using \"Continue with Google\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-google\"",
        "after": [
          {
            "result": {
              "duration": 58700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 68100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13680601100,
              "status": "passed"
            },
            "line": 123,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7658354400,
              "status": "passed"
            },
            "line": 124,
            "name": "user click on \"CONTINUE WITH GOOGLE\" with Google button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH GOOGLE",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickcontinuewithGoogle_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176100,
              "status": "passed"
            },
            "line": 125,
            "name": "click the continue button in login screen",
            "match": {
              "location": "LoginSteps.clicknewontinuebuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15457526300,
              "status": "passed"
            },
            "line": 126,
            "name": "I click the \"Email\"  in Continue with Gmail",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterEmail_Id(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${facebook.text}"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7129470000,
              "status": "passed"
            },
            "line": 129,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 256900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 45700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 912800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1753642400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:93)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1519100,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 227300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13966516800,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999926900,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12976809100,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000428300,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11555606700,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000712800,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8471954000,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000859300,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8068020700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 16,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 17,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 21
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 368648900,
              "status": "passed"
            },
            "line": 22,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37083975800,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2017885800,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11432830400,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 26
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 792515800,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2300723900,
              "status": "passed"
            },
            "line": 28,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998408900,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7182702700,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3400262000,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1401288800,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5860702000,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1792479200,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3963179100,
              "status": "passed"
            },
            "line": 35,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1685267100,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1286967500,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2799615200,
              "status": "passed"
            },
            "line": 38,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1057979700,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2363471100,
              "status": "passed"
            },
            "line": 40,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1356013900,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3477148200,
              "status": "passed"
            },
            "line": 42,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1002882000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2605961800,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 830759900,
              "status": "passed"
            },
            "line": 45,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2843393900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 46,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 47,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 878499700,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4606818200,
              "status": "passed"
            },
            "line": 49,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 737822200,
              "status": "passed"
            },
            "line": 50,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10365447500,
              "status": "passed"
            },
            "line": 51,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20497919300,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat org.testng.Assert.assertTrue(Assert.java:52)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.landingPageValidation(LoginSteps.java:92)\r\n\tat ✽.Then user should be landed to \"Home\" screen(features/PulseRegistrationTest.feature:52)\r\n",
              "status": "failed"
            },
            "line": 52,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 58
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 276100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 52400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 64,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 282100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 456600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19850290800,
              "status": "passed"
            },
            "line": 65,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2001295200,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13085666700,
              "status": "passed"
            },
            "line": 67,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000389300,
              "status": "passed"
            },
            "line": 68,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11639873200,
              "status": "passed"
            },
            "line": 69,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000775000,
              "status": "passed"
            },
            "line": 70,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7548515400,
              "status": "passed"
            },
            "line": 71,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999306800,
              "status": "passed"
            },
            "line": 72,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1165364900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 73,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 74,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 79,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 80,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 81,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 180200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 84,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 79100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 342567300,
              "status": "passed"
            },
            "line": 85,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1767394000,
              "status": "passed"
            },
            "line": 86,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 87
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 90
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 186200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 101,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 67100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 70700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1458207000,
              "status": "passed"
            },
            "line": 94,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 95
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 579868300,
              "status": "passed"
            },
            "line": 96,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 901653800,
              "status": "passed"
            },
            "line": 97,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 98
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@registration"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 149300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 102,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 67400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 97200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2481929000,
              "status": "passed"
            },
            "line": 94,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 95
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 508370700,
              "status": "passed"
            },
            "line": 96,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 859841100,
              "status": "passed"
            },
            "line": 97,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 98
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@registration"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 103,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 217600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 40100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 105,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 68600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 100500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15366385600,
              "status": "passed"
            },
            "line": 106,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2001173500,
              "status": "passed"
            },
            "line": 107,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13176027100,
              "status": "passed"
            },
            "line": 108,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999916600,
              "status": "passed"
            },
            "line": 109,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11809652900,
              "status": "passed"
            },
            "line": 110,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001135300,
              "status": "passed"
            },
            "line": 111,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7375669000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 112,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 113,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000121700,
              "status": "passed"
            },
            "line": 114,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8031930400,
              "status": "passed"
            },
            "line": 115,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 116
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 119
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 722164300,
              "status": "passed"
            },
            "line": 120,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1173927300,
              "status": "passed"
            },
            "line": 121,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 336900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 57900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 125,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 57500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 116800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17849500,
              "status": "passed"
            },
            "line": 126,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 613300,
              "status": "passed"
            },
            "line": 127,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15342376300,
              "status": "passed"
            },
            "line": 128,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1999788200,
              "status": "passed"
            },
            "line": 129,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12709292700,
              "status": "passed"
            },
            "line": 130,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999795700,
              "status": "passed"
            },
            "line": 131,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11048184400,
              "status": "passed"
            },
            "line": 132,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999893200,
              "status": "passed"
            },
            "line": 133,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7733328700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 134,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 135,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000446600,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8540768600,
              "status": "passed"
            },
            "line": 137,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 138
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 139
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 140
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 141
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 816451600,
              "status": "passed"
            },
            "line": 142,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35748960100,
              "status": "passed"
            },
            "line": 143,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000453900,
              "status": "passed"
            },
            "line": 144,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 189603800,
              "status": "passed"
            },
            "line": 145,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9912899000,
              "status": "passed"
            },
            "line": 146,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 147
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 298459700,
              "status": "passed"
            },
            "line": 148,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10001216200,
              "status": "passed"
            },
            "line": 149,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 195705800,
              "status": "passed"
            },
            "line": 150,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 196800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 61400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 152,
        "name": "Verify the Gender screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-gender-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 113600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 173700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9762511700,
              "status": "passed"
            },
            "line": 153,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 154
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 171926500,
              "status": "passed"
            },
            "line": 155,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000659000,
              "status": "passed"
            },
            "line": 156,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 273947400,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 751685300,
              "status": "passed"
            },
            "line": 158,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 252577200,
              "status": "passed"
            },
            "line": 159,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 795956000,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000687400,
              "status": "passed"
            },
            "line": 161,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 832784900,
              "status": "passed"
            },
            "line": 162,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 611719200,
              "status": "passed"
            },
            "line": 163,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6288652300,
              "status": "passed"
            },
            "line": 164,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3274365500,
              "status": "passed"
            },
            "line": 165,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1755098700,
              "status": "passed"
            },
            "line": 166,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000559200,
              "status": "passed"
            },
            "line": 167,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 831257800,
              "status": "passed"
            },
            "line": 168,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 817218900,
              "status": "passed"
            },
            "line": 169,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5856911900,
              "status": "passed"
            },
            "line": 170,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1348305500,
              "status": "passed"
            },
            "line": 171,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999533800,
              "status": "passed"
            },
            "line": 172,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1461946300,
              "status": "passed"
            },
            "line": 173,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 912796600,
              "status": "passed"
            },
            "line": 174,
            "name": "verify validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 587047300,
              "status": "passed"
            },
            "line": 175,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1210208000,
              "status": "passed"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000338900,
              "status": "passed"
            },
            "line": 177,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1196941800,
              "status": "passed"
            },
            "line": 178,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104033300,
              "status": "passed"
            },
            "line": 179,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 676669800,
              "status": "passed"
            },
            "line": 180,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 960477400,
              "status": "passed"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000442500,
              "status": "passed"
            },
            "line": 182,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1381865300,
              "status": "passed"
            },
            "line": 183,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1163475600,
              "status": "passed"
            },
            "line": 184,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3081800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 1538100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 187,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 3369900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1603800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12244000,
              "status": "passed"
            },
            "line": 188,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198300,
              "status": "passed"
            },
            "line": 189,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15595874400,
              "status": "passed"
            },
            "line": 190,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999968200,
              "status": "passed"
            },
            "line": 191,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12987063000,
              "status": "passed"
            },
            "line": 192,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000758300,
              "status": "passed"
            },
            "line": 193,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11318745300,
              "status": "passed"
            },
            "line": 194,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000572100,
              "status": "passed"
            },
            "line": 195,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7581075900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 196,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 197,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999925600,
              "status": "passed"
            },
            "line": 198,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7373503900,
              "status": "passed"
            },
            "line": 199,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 200
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 201
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 202
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 203
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 447226700,
              "status": "passed"
            },
            "line": 204,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89999719000,
              "status": "passed"
            },
            "line": 205,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4253918600,
              "status": "passed"
            },
            "line": 206,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28933551800,
              "status": "passed"
            },
            "line": 207,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7999845900,
              "status": "passed"
            },
            "line": 208,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7391568900,
              "status": "passed"
            },
            "line": 209,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseRegistration"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 759600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 88500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 82500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 193100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15567520200,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 763600,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12901482600,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11640151400,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000764500,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5336180000,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 205000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 36100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 52000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 148000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3855040300,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19106513600,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 429500600,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000495700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8471499600,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8025319500,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 230900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 46100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 45600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 70900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5155687500,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6288715800,
              "status": "passed"
            },
            "line": 25,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5002929200,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1662900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 51300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 51800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 69200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24586794100,
              "status": "passed"
            },
            "line": 29,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6253872300,
              "status": "passed"
            },
            "line": 30,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 209900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 35600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 45200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2273002700,
              "status": "passed"
            },
            "line": 33,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 626471800,
              "status": "passed"
            },
            "line": 34,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 977125200,
              "status": "passed"
            },
            "line": 35,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 184300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 39900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 37,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 45400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 67100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5715100,
              "status": "passed"
            },
            "line": 38,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 724700,
              "status": "passed"
            },
            "line": 39,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4185392000,
              "status": "passed"
            },
            "line": 42,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12890076100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 45,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 46,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 47,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 48,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 49,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 219900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 33600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 51,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 100100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 82400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16090407200,
              "status": "passed"
            },
            "line": 52,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2900607200,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 196700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 60,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 38200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 65700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4469142700,
              "status": "passed"
            },
            "line": 61,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17313197400,
              "status": "passed"
            },
            "line": 62,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004723900,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1411111100,
              "status": "passed"
            },
            "line": 64,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 327264400,
              "status": "passed"
            },
            "line": 69,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 502950000,
              "status": "passed"
            },
            "line": 70,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 171100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 72,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 43200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 48800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3723129700,
              "status": "passed"
            },
            "line": 73,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000020200,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 237200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should not be able to edit email and country of residence fields on myDoc registration page once the user submitted their gender and DOB in edit profile",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-not-be-able-to-edit-email-and-country-of-residence-fields-on-mydoc-registration-page-once-the-user-submitted-their-gender-and-dob-in-edit-profile",
        "after": [
          {
            "result": {
              "duration": 45700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12208018200,
              "status": "passed"
            },
            "line": 78,
            "name": "I navigate to MyDoc registration screen",
            "match": {
              "location": "MyDocUiSteps.navigateToMyDocRegScreen()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2449456200,
              "status": "passed"
            },
            "line": 79,
            "name": "I verify the default values in myDoc registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnMyDocRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 82
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 211516800,
              "status": "passed"
            },
            "line": 83,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 600473800,
              "status": "passed"
            },
            "line": 84,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 191300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials and the BabyLon call 995 flow must be verified",
        "description": "",
        "id": "verify-the-babylon-emergency-call-flow-on-pulse-health-\u0026-wealth-app;user-should-be-able-to-login-on-app-with-correct-credentials-and-the-babylon-call-995-flow-must-be-verified",
        "after": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 135100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15627682300,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 531600,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${Babylon.call}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.call}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 40
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12873802100,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10465158900,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9999651400,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10176015500,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4885551400,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3764232100,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18506564400,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 632063500,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000354200,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8730510300,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8030111300,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8824198100,
              "status": "passed"
            },
            "line": 22,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25994817400,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter \"${babylon.suicidal.thoughts.text}\" symptoms on Babylon screen And select \"${babylon.suicidalThoughts.description}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.suicidal.thoughts.text}",
                  "offset": 9
                },
                {
                  "val": "${babylon.suicidalThoughts.description}",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000457500,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 562186800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#  PCAONEPULSE-20559 : Below step will fail for SG as \"Call 995\" text is missing"
              }
            ],
            "line": 26,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.call.immediately}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${babylon.call.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 765276300,
              "status": "passed"
            },
            "line": 29,
            "name": "I close the babylon symptoms checker screen",
            "match": {
              "location": "BabylonSteps.closeBabylonSymptomsScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2746778300,
              "status": "passed"
            },
            "line": 30,
            "name": "user views chat history",
            "match": {
              "location": "BabylonSteps.userClickChatHistory()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Emergency call flow on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-the-babylon-emergency-call-flow-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/health/BabyLonEmmergencyCall.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonCall995"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 195300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "User should be able to access Babylon from Pulse app and perform Perianal lump workflow",
        "description": "",
        "id": "verify-the-babylon-perianal-lump-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-perianal-lump-workflow",
        "after": [
          {
            "result": {
              "duration": 39900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 132800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15363631500,
              "status": "passed"
            },
            "line": 10,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 392400,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${Babylon.AnalLump}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.AnalLump}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 44
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999815400,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12778733100,
              "status": "passed"
            },
            "line": 13,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12003633000,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001073000,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4855649700,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4094800300,
              "status": "passed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17718850100,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 661323900,
              "status": "passed"
            },
            "line": 21,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000939500,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7945289400,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8362307300,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9122189700,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27991979300,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter \"${babylon.symptom.anallump}\" symptoms on Babylon screen And select \"${babylon.symptom.anallump.choose}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.anallump}",
                  "offset": 9
                },
                {
                  "val": "${babylon.symptom.anallump.choose}",
                  "offset": 77
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9191392700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 27,
                "value": "#    When I handle questions and answer"
              },
              {
                "line": 28,
                "value": "#      | Is there any other related symptom you’d like to tell me about? | No |"
              }
            ],
            "line": 29,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 277638617400,
              "status": "passed"
            },
            "line": 31,
            "name": "I handle Babylon \"AnalLump\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "AnalLump",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5073959300,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9008953500,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1875899700,
              "status": "passed"
            },
            "line": 36,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.anallump.possiblecause.piles}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 796993000,
              "status": "passed"
            },
            "line": 39,
            "name": "I select on \"${babylon.symptom.anallump.possiblecause.piles}\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.anallump.possiblecause.piles}",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 80
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3565154200,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.anallump.possiblecause.piles}"
                ],
                "line": 41
              },
              {
                "comments": [
                  {
                    "line": 42,
                    "value": "#      | ${babylon.symptom.differential.pharma}            |"
                  }
                ],
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.strainwithpoo}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.bloodystool}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.lumpyanus}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.itchyanus}"
                ],
                "line": 48
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 451242000,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2754222700,
              "status": "passed"
            },
            "line": 52,
            "name": "I select on \"${babylon.symptom.differential.potentiallyserious}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.differential.potentiallyserious}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2966289900,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.changedbowelhabits}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.strainwithpoo}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.bloodystool}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.lumpyanus}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.itchyanus}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Perianal lump workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:48\r\nSex:Male\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-perianal-lump-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonAnalLump.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonAnalLump"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 205400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "User should be able to access Babylon from Pulse app and perform Breast lump workflow",
        "description": "",
        "id": "verify-the-babylon-maligant-neoplasm-breast-lump-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-breast-lump-workflow",
        "after": [
          {
            "result": {
              "duration": 44000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 68400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 386200,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${pulse.babylon.breastlump.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.breastlump.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 61
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15098981700,
              "status": "passed"
            },
            "line": 11,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000941800,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13251412600,
              "status": "passed"
            },
            "line": 13,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11529784800,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000353900,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10809033500,
              "status": "passed"
            },
            "line": 16,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4192297700,
              "status": "passed"
            },
            "line": 17,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3764514100,
              "status": "passed"
            },
            "line": 18,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17908530100,
              "status": "passed"
            },
            "line": 19,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 21
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 410810500,
              "status": "passed"
            },
            "line": 22,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000177000,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8493070600,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7672612500,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8906378300,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26633469300,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter \"${babylon.symptom.breastlump}\" symptoms on Babylon screen And select \"${babylon.symptom.breastlump.choose}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.breastlump}",
                  "offset": 9
                },
                {
                  "val": "${babylon.symptom.breastlump.choose}",
                  "offset": 79
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9319388800,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 29
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 253383602200,
              "status": "passed"
            },
            "line": 30,
            "name": "I handle Babylon \"BreastLump\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "BreastLump",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5997972000,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9243031900,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10990169400,
              "status": "passed"
            },
            "line": 36,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.breasrabcess}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 904197900,
              "status": "passed"
            },
            "line": 39,
            "name": "I select on \"${babylon.symptom.differential.potentiallyserious}\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.differential.potentiallyserious}",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2855210600,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.lumpormass.armpit}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.invrtdnipple}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.bloodynippledischarge}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.breastcancer.famhistory}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.breastlump}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999616300,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2315814800,
              "status": "passed"
            },
            "line": 52,
            "name": "I select on \"${babylon.symptom.possiblecauses.breasrabcess}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.possiblecauses.breasrabcess}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 79
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2415775500,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.breasrabcess}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp.urgent}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.lumpormass.armpit}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.invrtdnipple}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.bloodynippledischarge}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.breastlump}"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Maligant Neoplasm Breast lump workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:54\r\nSex:Female\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-maligant-neoplasm-breast-lump-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonBreastLump.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_breast_lump"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@refactorTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 193500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 35800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "User should be able to access Babylon from Pulse app and perform Human Immune Virus Rash workflow",
        "description": "",
        "id": "verify-the-babylon-human-immune-virus-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-human-immune-virus-rash-workflow",
        "after": [
          {
            "result": {
              "duration": 2591200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3398700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15583200400,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 344200,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${Babylon.virusrash}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.virusrash}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 45
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000962800,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12986615300,
              "status": "passed"
            },
            "line": 12,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10614084100,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000781500,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10787613000,
              "status": "passed"
            },
            "line": 15,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4551492000,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4169068300,
              "status": "passed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18851322600,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 315105900,
              "status": "passed"
            },
            "line": 21,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9999861800,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9032813700,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7965379500,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9057073100,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27132500500,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter \"${babylon.symptom.rash}\" symptoms on Babylon screen And select \"${babylon.symptom.rash.choose}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.rash}",
                  "offset": 9
                },
                {
                  "val": "${babylon.symptom.rash.choose}",
                  "offset": 73
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9881147500,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 29
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 438993594900,
              "status": "passed"
            },
            "line": 30,
            "name": "I handle Babylon \"HumanImmVirusRash\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "HumanImmVirusRash",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7080761000,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11028130200,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13401145100,
              "status": "passed"
            },
            "line": 35,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.rash.possiblecauses1}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "{babylon.symptom.rash.possiblecauses2}"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1561637800,
              "status": "passed"
            },
            "line": 38,
            "name": "I select on \"${babylon.symptom.rash.possiblecauses1}\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.rash.possiblecauses1}",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 72
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3963250500,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.rash.possiblecauses1}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason1}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason2}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason3}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason4}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason5}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason6}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 348685800,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2936672900,
              "status": "passed"
            },
            "line": 52,
            "name": "I select on \"${babylon.symptom.rash.possiblecauses2}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.rash.possiblecauses2}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 72
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2951386600,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.rash.possiblecauses2}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.symptom.differential.er}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason1}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason2}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason3}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason4}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason5}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.fever}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${babylon.symptom.rash.differential.why.reason6}"
                ],
                "line": 63
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Human Immune Virus workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:48\r\nSex:Male\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-human-immune-virus-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonHumanImmVirusRash.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonVirusRash"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 11260600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "User should be able to access Babylon from Pulse app and perform Groin mass workflow",
        "description": "",
        "id": "verify-the-babylon-groin-mass-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-groin-mass-workflow",
        "after": [
          {
            "result": {
              "duration": 1060300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1839000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17666378200,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9721000,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${Babylon.hernia}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.hernia}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999692000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13017840500,
              "status": "passed"
            },
            "line": 12,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13492288300,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001086900,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 742938800,
              "status": "passed"
            },
            "line": 15,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5191461600,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3637081700,
              "status": "passed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18887952300,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 413239000,
              "status": "passed"
            },
            "line": 21,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009863100,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8285299300,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8010309600,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8555049900,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6001092900,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27586175600,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter \"${babylon.symptom.inguinalhernia}\" symptoms on Babylon screen And select \"${babylon.symptom.inguinalhernia.choose}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.inguinalhernia}",
                  "offset": 9
                },
                {
                  "val": "${babylon.symptom.inguinalhernia.choose}",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9141419800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#      | Is there any other related symptom you’d like to tell me about? | No                                                             |"
              }
            ],
            "line": 29,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4096095400,
              "status": "passed"
            },
            "line": 31,
            "name": "verify user is landed to inguinal hernia consultation screen",
            "match": {
              "location": "BabylonSteps.verifyInguinalHerniaLandingScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 288869555600,
              "status": "passed"
            },
            "line": 32,
            "name": "I handle Babylon \"InguinalHernia\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "InguinalHernia",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5966764500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 33,
                "value": "#    And I wait for 5 sec"
              }
            ],
            "line": 34,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008402200,
              "status": "passed"
            },
            "line": 36,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6922803800,
              "status": "passed"
            },
            "line": 37,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 673413200,
              "status": "passed"
            },
            "line": 38,
            "name": "I click on \"inguinal hernia\" cause",
            "match": {
              "arguments": [
                {
                  "val": "inguinal hernia",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1907173000,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.inguinalhernia}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.reduced.groinmass}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.groinmass.lump}"
                ],
                "line": 43
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 314683600,
              "status": "passed"
            },
            "line": 45,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12269729600,
              "status": "passed"
            },
            "line": 46,
            "name": "I click on \"femoral hernia\" cause",
            "match": {
              "arguments": [
                {
                  "val": "femoral hernia",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2292864700,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.femoralhernia}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.reduced.groinmass}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecauses.groinmass.lump}"
                ],
                "line": 51
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Groin Mass workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:55\r\nSex:Male\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-groin-mass-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonInguinalHernia.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonHernia"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 8545900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 263500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "User should be able to access Babylon from Pulse app and perform Postmenopausal Bleed workflow",
        "description": "",
        "id": "verify-the-babylon-maligant-neoplasm-postmenopause-bleed-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-postmenopausal-bleed-workflow",
        "after": [
          {
            "result": {
              "duration": 4291100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 4597400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4282500,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${pulse.babylon.postmenopause.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.postmenopause.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 64
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 518500,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${parity.password}\" to variable \"USER_PASSWORD\"",
            "match": {
              "arguments": [
                {
                  "val": "${parity.password}",
                  "offset": 10
                },
                {
                  "val": "USER_PASSWORD",
                  "offset": 43
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18134610100,
              "status": "passed"
            },
            "line": 12,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000241600,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13149636600,
              "status": "passed"
            },
            "line": 14,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11678748700,
              "status": "passed"
            },
            "line": 15,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000129200,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10002115100,
              "status": "passed"
            },
            "line": 17,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4528921700,
              "status": "passed"
            },
            "line": 18,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3748964600,
              "status": "passed"
            },
            "line": 19,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19808664700,
              "status": "passed"
            },
            "line": 20,
            "name": "I login into pulse app with below details",
            "match": {
              "location": "LoginSteps.loginToPulseApp(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000115200,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8513212700,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7427503000,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9014544800,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26502486500,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter \"${babylon.symptom.postmenopausalbleeding}\" symptoms on Babylon screen And select \"${babylon.symptom.postmenopausalbleeding.choose}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.postmenopausalbleeding}",
                  "offset": 9
                },
                {
                  "val": "${babylon.symptom.postmenopausalbleeding.choose}",
                  "offset": 91
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8699548400,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 29
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 248112658700,
              "status": "passed"
            },
            "line": 30,
            "name": "I handle Babylon \"PostmenopausalBleed\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "PostmenopausalBleed",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5325267900,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9664224900,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38291323100,
              "status": "passed"
            },
            "line": 36,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.possiblecause.endopolyp}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.thinning.vaginalwall}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12590423800,
              "status": "passed"
            },
            "line": 40,
            "name": "I select on \"${babylon.symptom.possiblecause.endopolyp}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.possiblecause.endopolyp}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 75
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2928258400,
              "status": "passed"
            },
            "line": 41,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.possiblecause.endopolyp}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.vaginalbleeding}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 353686600,
              "status": "passed"
            },
            "line": 48,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2735223400,
              "status": "passed"
            },
            "line": 49,
            "name": "I select on \"${babylon.symptom.differential.potentiallyserious}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.differential.potentiallyserious}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2711692000,
              "status": "passed"
            },
            "line": 50,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${babylon.symptom.possiblecause.vaginalbleeding}"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Maligant Neoplasm postmenopause bleed workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:74\r\nSex:Female\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-maligant-neoplasm-postmenopause-bleed-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonPostmenopausalBleed.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_postmenopause_bleed"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 19413300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 58300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 10,
        "name": "User should be able to access Babylon from Pulse app and perform Prostatic Hyperplasia workflow",
        "description": "",
        "id": "verify-the-babylon-prostatic-hyperplasia-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-prostatic-hyperplasia-workflow",
        "after": [
          {
            "result": {
              "duration": 226900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 503400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 106527700,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${pulse.babylon.prostatic.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.prostatic.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 60
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12397400,
              "status": "passed"
            },
            "line": 12,
            "name": "I assign \"${parity.password}\" to variable \"USER_PASSWORD\"",
            "match": {
              "arguments": [
                {
                  "val": "${parity.password}",
                  "offset": 10
                },
                {
                  "val": "USER_PASSWORD",
                  "offset": 43
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17301096800,
              "status": "passed"
            },
            "line": 13,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000651800,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13033258200,
              "status": "passed"
            },
            "line": 15,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11268792400,
              "status": "passed"
            },
            "line": 16,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4999320800,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10739716400,
              "status": "passed"
            },
            "line": 18,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5146150800,
              "status": "passed"
            },
            "line": 19,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3545179900,
              "status": "passed"
            },
            "line": 20,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19264276900,
              "status": "passed"
            },
            "line": 21,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 23
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 550030900,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000467800,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8547405500,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7954149300,
              "status": "passed"
            },
            "line": 27,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8322462200,
              "status": "passed"
            },
            "line": 28,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27085375300,
              "status": "passed"
            },
            "line": 29,
            "name": "I enter \"${babylon.ph.symptom}\" symptoms on Babylon screen And select \"${babylon.ph.symptomDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.ph.symptom}",
                  "offset": 9
                },
                {
                  "val": "${babylon.ph.symptomDescription}",
                  "offset": 71
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8658394900,
              "status": "passed"
            },
            "line": 30,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 400315843900,
              "status": "passed"
            },
            "line": 32,
            "name": "I handle Babylon \"ProstaticHyperplasia\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "ProstaticHyperplasia",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5879165700,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10459413900,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11358511600,
              "status": "passed"
            },
            "line": 36,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.benign.hyperplasia}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 637937600,
              "status": "passed"
            },
            "line": 39,
            "name": "I select on \"${babylon.ph.cause1}\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.ph.cause1}",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 53
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2574470000,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.ph.possiblecause.benign.hyperplasia}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.symptom.differential.gp}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.urination.dfclty}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.increased.urination}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.urgentneed.urination}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.lowflow.urination}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.dribbling.urine}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 476934500,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2230652600,
              "status": "passed"
            },
            "line": 52,
            "name": "I select on \"${babylon.symptom.differential.potentiallyserious}\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.symptom.differential.potentiallyserious}",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 83
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3266421900,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.symptom.differential.potentiallyserious}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.weightloss}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.urination.dfclty}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.increased.urination}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.urgentneed.urination}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.lowflow.urination}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${babylon.ph.possiblecause.dribbling.urine}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Prostatic HyperPlasia workflow is working as expected",
    "description": "Following condition should meet to run this script:\r\nAge:58\r\nSex:Male\r\nCountry:Singapore/Malaysia",
    "id": "verify-the-babylon-prostatic-hyperplasia-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/health/BabylonProstaticHyperplasia.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_prostatic_hyperplasia"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 390700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-rib-fracture-workflow-is-working-as-expected-and-user-can-the-chat-history-after-consultation;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 4422500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 5795500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16039785500,
              "status": "passed"
            },
            "line": 10,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2637500,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${Babylon.rib}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.rib}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 39
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13442854400,
              "status": "passed"
            },
            "line": 12,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10508831900,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000315900,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11079831800,
              "status": "passed"
            },
            "line": 15,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4775936200,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3698049700,
              "status": "passed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 700175600,
              "status": "passed"
            },
            "line": 18,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18800249000,
              "status": "passed"
            },
            "line": 19,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 21
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 489199500,
              "status": "passed"
            },
            "line": 22,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000759300,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8179335900,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8221217300,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4911800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 89000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to access Babylon from Pulse app and perform Rib Fracture workflow",
        "description": "",
        "id": "verify-the-babylon-rib-fracture-workflow-is-working-as-expected-and-user-can-the-chat-history-after-consultation;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-rib-fracture-workflow",
        "after": [
          {
            "result": {
              "duration": 70200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 214000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9520082700,
              "status": "passed"
            },
            "line": 29,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26214647500,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter \"${babylon.rib.symptom}\" symptoms on Babylon screen And select \"${babylon.rib.symptomDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.rib.symptom}",
                  "offset": 9
                },
                {
                  "val": "${babylon.rib.symptomDescription}",
                  "offset": 72
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8748218500,
              "status": "passed"
            },
            "line": 31,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.caseid.txt}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 268056728900,
              "status": "passed"
            },
            "line": 33,
            "name": "I handle Babylon \"RibFracture\" questions and answers",
            "match": {
              "arguments": [
                {
                  "val": "RibFracture",
                  "offset": 18
                }
              ],
              "location": "BabylonSteps.babylonQAndA(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5619173000,
              "status": "passed"
            },
            "line": 34,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "${babylon.symptom.closureSummary}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10171959400,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 961323600,
              "status": "passed"
            },
            "line": 37,
            "name": "I select on \"${babylon.rib.cause.chestStrain}\" cause with offset 0 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.rib.cause.chestStrain}",
                  "offset": 13
                },
                {
                  "val": "0",
                  "offset": 65
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2615226700,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 39,
                    "value": "#      | ${babylon.symptom.differential.pharma} |"
                  },
                  {
                    "line": 40,
                    "value": "#      | ${babylon.symptom.differential.home} |"
                  }
                ],
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.subtitle}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.injuredchestwall}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.painonribmovement}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.rightside.chestpain}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.dull.chestpain}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.painonchestpress}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 344272400,
              "status": "passed"
            },
            "line": 48,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2445395700,
              "status": "passed"
            },
            "line": 51,
            "name": "I select on \"${babylon.rib.cause.costochondritis}\" cause with offset 0 in report",
            "match": {
              "arguments": [
                {
                  "val": "${babylon.rib.cause.costochondritis}",
                  "offset": 13
                },
                {
                  "val": "0",
                  "offset": 69
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3747095200,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.rib.costochondritis.conditionTitle}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${babylon.symptom.differential.why.title}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.injuredchestwall}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.rightside.chestpain}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.painonribmovement}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.dull.chestpain}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.rib.possiblecause.painonchestpress}"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Rib Fracture workflow is working as expected and user can the chat history after consultation",
    "description": "Following condition should meet to run this script:\r\nAge:39\r\nSex:Male\r\nCountry:Singapore",
    "id": "verify-the-babylon-rib-fracture-workflow-is-working-as-expected-and-user-can-the-chat-history-after-consultation",
    "keyword": "Feature",
    "uri": "features/health/BabylonRibFracture.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonRibFacture"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 200800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 58800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1868800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1119700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 75346900,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 462400,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17151218300,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13252176800,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001066200,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11073691900,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000020700,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7614653900,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9467031900,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 722190900,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30666163400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999756300,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69490216900,
              "status": "passed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7097950100,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000235500,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 717500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 63300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 54100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 75500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10830020800,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96164859500,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000178900,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 299200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 31500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 50100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 4074111300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33664207600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNo medicine added! text is displayed on page  expected [true] but found [false],\n\tMedicine Reminder text is displayed on page  expected [true] but found [false],\n\tTrack the medicine and set reminder text is displayed on page  expected [true] but found [false],\n\tbefore for important dose text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 40,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 178100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 42,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2385552500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24896882600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMedicine Info text is displayed on page  expected [true] but found [false],\n\tSchedule text is displayed on page  expected [true] but found [false],\n\tMore Setting text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:44)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 43,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 44,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 45,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 54,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 150700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2412926500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44953372000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tFrequency text is displayed on page  expected [true] but found [false],\n\tDosage Timing text is displayed on page  expected [true] but found [false],\n\tStart Date text is displayed on page  expected [true] but found [false],\n\tEnd Date text is displayed on page  expected [true] but found [false],\n\tDose Intake text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 64
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I clicks on \"Before meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Before meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 67,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 172700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 69,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 57100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2524264300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000846200,
              "status": "passed"
            },
            "line": 70,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20067561000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1252de93-514d-41ab-9e96-4dbf09416e39\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027What are you taking this medication for?\u0027]/following::android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:265)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.enterDetailsInAddMedScreen(PulseHealthScreen.java:289)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MedicineReminderSteps.enterInfoInAddMedicineScreen(MedicineReminderSteps.java:30)\r\n\tat ✽.And I enter following details in add medicine screen(features/health/MedicineReminder.feature:71)\r\n",
              "status": "failed"
            },
            "line": 71,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 72
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 73
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 75,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${add.another.med}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${notNow.text}"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 175000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 80,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2192259300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 96620837500,
              "status": "passed"
            },
            "line": 81,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2549400,
              "status": "passed"
            },
            "line": 82,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17938042900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1252de93-514d-41ab-9e96-4dbf09416e39\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Medicine Info\u0027]/following::android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:265)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.enterDetailsInAddMedScreen(PulseHealthScreen.java:269)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MedicineReminderSteps.enterInfoInAddMedicineScreen(MedicineReminderSteps.java:30)\r\n\tat ✽.And I enter following details in add medicine screen(features/health/MedicineReminder.feature:83)\r\n",
              "status": "failed"
            },
            "line": 83,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 89
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 93,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 95
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 96,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 182600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 43100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 99,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 25282600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3823872700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99858510700,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks on \"${notNow.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${notNow.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8211314700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMedicine Reminder text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:101)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 2030900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 53100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 54400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 70400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18548408800,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5444200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12648941300,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10194079400,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004438200,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4316815100,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 183100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 26200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 53400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 67200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3809795800,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18900231500,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 287342200,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000463400,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8575691100,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8253761800,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 189700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 37800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 50100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1558413800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4822872800,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33123487800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6767728300,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1404282500,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2151867700,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2310490600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear youHospitals are not displayed \r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.LocationScreen.verifySearchResults(LocationScreen.java:98)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(LocationSteps.java:51)\r\n\tat ✽.And User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results(features/health/PruShoppeLocation.feature:31)\r\n",
              "status": "failed"
            },
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 40,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 186100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 43,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 52800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1299328300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1628794100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    Given User has pulse app"
              },
              {
                "line": 45,
                "value": "#    And I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\""
              },
              {
                "line": 46,
                "value": "#    When I navigate to login page"
              },
              {
                "line": 47,
                "value": "#    When user enters credentials"
              },
              {
                "line": 48,
                "value": "#      | UserName | ${PULSE_EMAIL}   |"
              },
              {
                "line": 49,
                "value": "#      | Password | ${Password.text} |"
              },
              {
                "line": 50,
                "value": "#    And User clicks on signin button"
              },
              {
                "line": 51,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 52,
                "value": "#    And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\""
              },
              {
                "line": 53,
                "value": "#    Then user should be landed home screen"
              },
              {
                "line": 54,
                "value": "#    Then I clicks on Health button"
              },
              {
                "line": 55,
                "value": "#    Then I clicks on Location button"
              }
            ],
            "line": 56,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12744410000,
              "status": "passed"
            },
            "line": 57,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1456136900,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2224544100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear youHospitals are not displayed \r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalScreenLaunch(LocationScreen.java:81)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(LocationSteps.java:46)\r\n\tat ✽.Then User can see the list of \"Clinics\" near by to user\u0027s current location(features/health/PruShoppeLocation.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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aI/AX+1ojE49cv4EsQz/S6G/stF8qKak/wTukXnUvlKXevpRKv/8fuzepys4eUoK2nnU/uO6Obqzkrv2WFNllTXt2z/089k+S+3/PLxefrSVOc4v6zH7eXFDQ0MI8HiMP0j8eQcr89AoOejePIZym2MVP87xGAydYwoaKFcEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSnTpk0jaOhYunSpjRw5kqChob293RYuXEjQ0ELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkELQkJIPurOz0+rq6mz37t22detW27Jli23fvt0OHjxouVyu93WAshWCPnz4sK1du9aWLVvW76xcudL27t1rHR0d8esDZWXEp59+WhDwQLNx40ZWa5S1EfFoi82mTZvC6QlQjooG7acby5cv77OtqqoqfhygLBw16FWrVtmuXbusurq6z/aKigpWaZSlAYP2mJPJpDU0NIRz5/j++vr6+LGAIddv0D0xd3V12UBPGisrK+PHAoZcQdClxOzjr1cD5aZP0P4EsJSYfXw/UG76BO1P/jqjJ3t79uwpCDg+tbW18WMBQy4ftL9ycejQofCfvOPxxmfFihXW2toaPxYw5PJBb968ueD15oFmx44d8eMAZaHgSWGxWb16tWWz2fhxgLIwYv369QXRDjT+pNFflwbK1Yj29vbwz0Tj8cZn3bp1lkql4tcHykr+30MnEolwbuxPDv1c2sdXZH+SWFNTw3/qxrDQ72+stLW1hX8m6q9HA8NJv0EDwxVBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQwpBQ8qIpqYmYxiVIWhGagiakRqCZqSGoBmpIWhGagiakZqyDHrDhg3W2NhoiUTC1q9fH7bt3bvXqqqqCi5bzuO3f+nSpfbKK6/YSy+9FGbBggVWXV1dcNnhNP51VVRUFGwvhynLoN944w2rra0NM3fu3LBt3bp1tmnTpoLLlvN4zD719fWWTCZDCDt37rTZs2dbKpUquPxwGP8a3nzzTVuzZk3BvnIYgj6B4yuzxxzf7l/fcFylyz1mH4I+geOnGL4yx7fPnz/f9u/fX7C93GfRokX2/vvvF2wvpyHoEzgetK9q8e2+yg3HoA8cOGCzZs0q6+cyBH0Cx58A+jlz720NDQ324osvhie98csPhyn3qMsy6MWLF9uRI0esrq7OFi5cGLZt3rzZtm/fXnDZch4/T/YngP4A9dMMX5k95o0bNxZcdjiNRz1v3ryC7eUwZRm00virGR62n2L4DNeVebgMQTNSQ9CM1BA0IzUEzUgNQTNSQ9CM1PwfvhrE9nEN6MMAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 64,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/PruShoppeLocation.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@ClinicLocator"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 187200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 33100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 68300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 74300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16157851600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 810700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13065474500,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11338243700,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4999470500,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10601098600,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5445247900,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 12,
            "value": "#    Then I verify below language options on toggle bar as per specified lbu on login page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 176400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 64100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 115000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3985895400,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18172469100,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 346847400,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000301200,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7871236400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7750007300,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 203400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 24,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 47500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 53300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20137543200,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000810900,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 963280700,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 205500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 36100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 44300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3211824900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8847243000,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16852632600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tThere are no events available at the moment text is displayed on page  expected [true] but found [false],\n\tStay tuned for events on health and fitness text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/MyEvents.feature:33)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 187600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 37,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 45600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 109600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9076117100,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1671301400,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to login using email account"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And user click on \"CONTINUE WITH GOOGLE\" with Google button"
          },
          {
            "line": 7,
            "value": "#    And I click the \"Email\"  in Continue with Gmail"
          },
          {
            "line": 8,
            "value": "#      | Emailid  | ${facebook.text} |"
          },
          {
            "line": 9,
            "value": "#      | Password  | pulsesgqa@123 |"
          },
          {
            "line": 10,
            "value": "#    Then user should be landed home screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 164500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 69900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 67600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16733361300,
              "status": "passed"
            },
            "line": 13,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1129800,
              "status": "passed"
            },
            "line": 14,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12795276500,
              "status": "passed"
            },
            "line": 15,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11761225200,
              "status": "passed"
            },
            "line": 16,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3001198900,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10325519300,
              "status": "passed"
            },
            "line": 18,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5025156200,
              "status": "passed"
            },
            "line": 19,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1955776700,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 286900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 47800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 69800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 456700,
              "status": "passed"
            },
            "line": 23,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2375022700,
              "status": "passed"
            },
            "line": 24,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18656562400,
              "status": "passed"
            },
            "line": 25,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 27
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 702429500,
              "status": "passed"
            },
            "line": 28,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9999776300,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8286203500,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7774530000,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 169700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 50900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 66400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19624723100,
              "status": "passed"
            },
            "line": 34,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000043300,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 395493700,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18883842400,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 44,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 45,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 46,
            "value": "#    And I Like the post"
          },
          {
            "line": 47,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 48,
            "value": "#    And I Like the post"
          },
          {
            "line": 50,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 51,
            "value": "#    And I share the post"
          },
          {
            "line": 52,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 54,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 55,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 56,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 57,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 60,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 61,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 189400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 31000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 63,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 59300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 120800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7378772600,
              "status": "passed"
            },
            "line": 64,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10001039900,
              "status": "passed"
            },
            "line": 65,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 240100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 38000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 67,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 73900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15313164600,
              "status": "passed"
            },
            "line": 68,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 187600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 42700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 54300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6404786700,
              "status": "passed"
            },
            "line": 74,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6345927600,
              "status": "passed"
            },
            "line": 75,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 45600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 85400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5713553200,
              "status": "passed"
            },
            "line": 78,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10728735600,
              "status": "passed"
            },
            "line": 79,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 165300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 81,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 58000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 65800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5316038800,
              "status": "passed"
            },
            "line": 82,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on one pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 148600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 48600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 58500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47668500,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 122800,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16822679100,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000201800,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12977938200,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000077000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11895883800,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999931100,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8462089500,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000640500,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8541438700,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 741492800,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30707303000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999684900,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67271872700,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7808795000,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000194900,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 116600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 43700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 52000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1362526600,
              "status": "passed"
            },
            "line": 30,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000569900,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 28,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 100600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 55500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3064621900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17120560100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNotification Center text is displayed on page  expected [true] but found [false],\n\tComplete your Profile. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/NotificationCenter.feature:35)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 35,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${completeprofile.notification}"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 33,
            "name": "@NotificationCenter_my"
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 149100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 55200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 84200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16853754400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 566600,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12949682200,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11557940200,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2999961300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4313554300,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 154800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 94600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 80700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1548500,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3788826600,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18212392600,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 463535500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9999915500,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8611066300,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7361313800,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 67500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3521218400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 726408600,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25941775800,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMy Challenges text is displayed on page  expected [true] but found [false],\n\tYou do not have any challenges yet. Please click below to select a challenge and get started text is displayed on page  expected [true] but found [false],\n\tYou do not have any challenges yet. Please click below to select a challenge and get started text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/mychallenges/PulseMyChallenges.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 150800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 69300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3405857900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8220207900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: ffcd93de-e974-4cf3-9ba0-0c811293af6f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"All Challenges\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1717)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\r\n\tat ✽.And I clicks on \"${all.challenges.text}\" in app screen(features/home/mychallenges/PulseMyChallenges.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 222700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 86600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 51300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 67600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17566378800,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 300500,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13085483600,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10987621600,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2999942600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5263430500,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 64200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 72100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 286600,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3588680900,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19150324100,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 707577900,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000230900,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7877883100,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8594277900,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 500900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 47900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 3429000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 10740200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000047300,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7853605300,
              "status": "passed"
            },
            "line": 25,
            "name": "User should be verify \"${my.communities.text}\" tab in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 23
                }
              ],
              "location": "MyCommunitiesSteps.isMycommunitiesJoin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000547300,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 582501300,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9628567000,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 32,
            "value": "##"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 7102800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 677900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 89200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3019600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 685838800,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4209339300,
              "status": "passed"
            },
            "line": 35,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 319910300,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7843178300,
              "status": "passed"
            },
            "line": 37,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 209400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 48100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 60600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 4190371200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5009833300,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8630531000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"All Communities\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1717)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\r\n\tat ✽.And I clicks on \"${All.Communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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8tsJBe1K1pba6HGvWV3dZy/Gjud4QfsV9K57/xTWvK4t6EWLloTQGxoa7Zaef7AjR45YS0uLJRLJsNzwpYm78+77soJuW3L41/IrfWNjU1iaDIqWOjhznHDQri3qdF1dfFcWX0osK15um6K18YyZs8O2iZPfiK6y28P74yf8xUqjZYabMvVv9tHWrbZz1y67PXpR90l5uc2bv8Aeia7gvpTwq6//BsOvzAMHDQ1r7crKqszXGjnqpaNLjiH252efz1yRH3+yv61atSZzHPSdVNBu1br1VrpxU3xzzvHlh6/ZfT2OM8dJB50vXv3L67YhWsbgzCIbNM5MBA0pBA0pBA0pBA0pBA0pBf6XOP/TNcPk+3jLIWj/y1p8J8Pk03jDIej4JRvIZwQNKQQNKQQNKQQNCf6vKouLiwkaGjzmHj16EDQ0jBs3zrp160bQ0DBmzBiChg6ChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChhSChpSxY8cSNHQUFRVZ9+7dCRoaWlparLCwkKChhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhhaAhJRP04cOH7eDBg7Z161bbsGGDrV+/3srKymzPnj3W1NTU/nOAnBWC3r9/v61YscIWLVrU6XzwwQe2fft2O3ToUPzzgZxSsG3btqyAjzVr167lao2cVhCPtqtZt25dWJ4AuajLoH25sXjx4g7bysvL4+cBcsJxg166dKl99NFHtnv37g7bi4uLuUojJx0zaI85lUpZVVVVWDvH91dWVsbPBZx2nQbdFvORI0fsWC8ad+zYET8XcNplBX0iMfv476uBXNMhaH8BeCIx+/h+INd0CNpf/B2OXux9/PHHWQHHp6KiIn4u4LTLBO2/udi7d2/4k3c83vgsWbLEGhsb4+cCTrtM0KWlpVm/bz7WbN68OX4eICdkvSjsapYtW2YNDQ3x8wA5oWD16tVZ0R5r/EWj/14ayFUFLS0t4Z+JxuONT0lJiVVXV8c/H8gpmX8PnUwmw9rYXxz6WtrHr8j+IvHTTz/lT93IC53+j5Xm5ubwz0T999FAPuk0aCBfETSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkEDSkFNTU1BjDqAxBM1JD0IzUEDQjNQTNSA1BM1JD0IzU5GTQa9assUQiYclk0lavXh22bd++3crLy7OOzeXx219UVGRTp061KVOmhJkzZ47t3r0769h8Gv++iouLs7bnwuRk0DNmzLCKioow06ZNC9tKSkps3bp1Wcfm8njMPpWVlZZKpUIIW7ZsscmTJ1t1dXXW8fkw/j3MmjXLli9fnrUvF4agP8fxK7PHHN/u318+XqVzPWYfgv4cx5cYfmWOb589e7bt3Lkza3uuz9y5c23hwoVZ23NpCPpzHA/ar2rx7X6Vy8egd+3aZZMmTcrp1zIE/TmOvwD0NXP7bVVVVTZx4sTwojd+fD5Mrkedk0HPmzfPDhw4YAcPHrTCwsKwrbS01MrKyrKOzeXxdbK/APQHqC8z/MrsMa9duzbr2Hwaj3rmzJlZ23NhcjJopfHfZnjYvsTwydcrc74MQTNSQ9CM1BA0IzUEzUgNQTNSQ9CM1PwPixfJALQ+mQgAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 51,
            "name": "I verify the following text \"TEST1\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 52
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 138700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 55,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 9498000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 4911683500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23637844200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:495)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickFeeds(MyCommunitiesScreen.java:297)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickIcons(MyCommunitiesSteps.java:106)\r\n\tat ✽.And I click the Post icon in My communities(features/home/mycommunities/PulseMyCommunities.feature:56)\r\n",
              "status": "failed"
            },
            "line": 56,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 61
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 63,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2648700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 63200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 65,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 104200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3127637600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21729421600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:495)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickShareIcon(MyCommunitiesScreen.java:528)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.ClickShareIcon(MyCommunitiesSteps.java:173)\r\n\tat ✽.And I click the share icon in Post screen(features/home/mycommunities/PulseMyCommunities.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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LuCY6zDo1pj3799vh3rTuHnz5vh1AcdcRtCHE7OP/74ayDbtgvY3gIcTs4/vB7JNu6D9zd++6M3eV199lRFwfMrKyuLXBRxz6aD9Nxc7duwIf/KOxxuf+fPnW0NDQ/y6gGMuHXRxcXHG75sPNevWrYtfD5AVMt4UdjYLFy60+vr6+PUAWSFv2bJlGdEeavxNo/9eGshWec3NzeGficbjjU9RUZFVVlbGLw9klfS/h04mk2Ft7G8OfS3t42dkf5P47bff8qdu5IQO/8dKU1NT+Gei/vtoIJd0GDSQqwgaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUvKqqqqMYVSGoBmpIWhGagiakRqCZqSGoBmpIWhGarIy6OXLl1sikbBkMmnLli0L2zZt2mSlpaUZx2bz+O0vKCiwCRMm2Pjx48NMnz7dtm3blnFsLo3/XIWFhRnbs2GyMujJkydbWVlZmIkTJ4ZtRUVFtnLlyoxjs3k8Zp/y8nJLpVIhhPXr19vYsWOtsrIy4/hcGP8Zpk6daosWLcrYlw1D0N/j+JnZY45v958vF8/S2R6zD0F/j+NLDD8zx7dPmzbNtmzZkrE922fGjBk2Z86cjO3ZNAT9PY4H7We1+HY/y+Vi0Fu3brUxY8Zk9XsZgv4ex98A+pq57baKigobPXp0eNMbPz4XJtujzsqgZ86cabt377Y9e/ZYfn5+2FZcXGwlJSUZx2bz+DrZ3wD6E9SXGX5m9phXrFiRcWwujUc9ZcqUjO3ZMFkZtNL4bzM8bF9i+OTqmTlXhqAZqSFoRmoImpEagmakhqAZqSFoRmr+ByzGyxT7A9JYAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 795800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 72,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 78300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1195764500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17129664900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:495)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickSkipfeedbutton(MyCommunitiesScreen.java:633)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickSkipbutton(MyCommunitiesSteps.java:208)\r\n\tat ✽.Then I click skip button in feeds screen(features/home/mycommunities/PulseMyCommunities.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 83
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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1pj3799vh3rTuHnz5vh1AcddRtBHErOP/74ayDbtgvY3gEcSs4/vB7JNu6D9zd++6M3eV199lRFwfMrKyuLXBRx36aD9Nxc7duwIf/KOxxuf+fPnW0NDQ/y6gOMuHXRxcXHG75sPNevWrYtfD5AVMt4UdjYLFy60+vr6+PUAWSFv2bJlGdEeavxNo/9eGshWec3NzeGficbjjU9RUZFVVlbGLw9klfS/h04mk2Ft7G8OfS3t42dkf5P4zTff8Kdu5IQO/8dKU1NT+Gei/vtoIJd0GDSQqwgaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUggaUvKqqqqMYVSGoBmpIWhGagiakRqCZqSGoBmpIWhGarIy6OXLl1sikbBkMmnLli0L2zZt2mSlpaUZx2bz+O0vKCiwCRMm2Pjx48NMnz7dtm3blnFsLo3/XIWFhRnbs2GyMujJkydbWVlZmIkTJ4ZtRUVFtnLlyoxjs3k8Zp/y8nJLpVIhhPXr19u4ceOssrIy4/hcGP8Zpk6daosWLcrYlw1D0N/i+JnZY45v958vF8/S2R6zD0F/i+NLDD8zx7dPmzbNtmzZkrE922fGjBk2Z86cjO3ZNAT9LY4H7We1+HY/y+Vi0Fu3brWxY8dm9XsZgv4Wx98A+pq57baKigobM2ZMeNMbPz4XJtujzsqgZ86cabt377Y9e/ZYfn5+2FZcXGwlJSUZx2bz+DrZ3wD6E9SXGX5m9phXrFiRcWwujUc9ZcqUjO3ZMFkZtNL4bzM8bF9i+OTqmTlXhqAZqSFoRmoImpEagmakhqAZqSFoRmr+B0tNyPp8hvxOAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 86,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 978400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 54800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1390643500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15003070500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 89,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 90,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9083417200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Category\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1717)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\r\n\tat ✽.And I clicks on \"${category.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:91)\r\n",
              "status": "failed"
            },
            "line": 91,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "I clicks on \"Mental Health\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Mental Health",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 141100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 103,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 60500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1224357900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8049347900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 3aa3406b-bb31-44fb-8503-47787e9b4c4f\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1717)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\r\n\tat ✽.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:104)\r\n",
              "status": "failed"
            },
            "line": 104,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 107,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 207500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 41200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 52300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 68500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18252943600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2130000,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12904126000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11665895100,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2999587300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4497358500,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 205700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 37800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 329500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 83600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 511600,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"pulse123456@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse123456@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3692058300,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18409913500,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 616087200,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9999811700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7561985800,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8568618300,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 257200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 60800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 73200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13714563000,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000076900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 26,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8935374800,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the following texts \"Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 422700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 44900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5487799100,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3454553500,
              "status": "passed"
            },
            "line": 33,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2353307200,
              "status": "passed"
            },
            "line": 34,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 791605300,
              "status": "passed"
            },
            "line": 35,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4284786300,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12371593000,
              "status": "passed"
            },
            "line": 37,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5887859900,
              "status": "passed"
            },
            "line": 38,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000996200,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4215773700,
              "status": "passed"
            },
            "line": 40,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 300802500,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1382304500,
              "status": "passed"
            },
            "line": 42,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2604509300,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pluse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 106400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 53600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 75100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16739780700,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 876300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${pulse.legal.privacy.login.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.legal.privacy.login.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 56
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13452509400,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10811767800,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000166800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4579415300,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 193900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 44100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3562810400,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17907094200,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 376805700,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999843100,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8877479400,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7973062700,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 161700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 66600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 183800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4855763800,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 119800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Verify the Legacy and Privacy should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-legacy-and-privacy-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 57800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 60900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4179787200,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3219076900,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${icon.privacyNotice}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${icon.regulatory}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${app.version.text}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 164300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Verify the Terms and condition screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-terms-and-condition-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 79100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 83200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 260490200,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on \"${Terms.conditions.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${Terms.conditions.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15342943700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2741418200,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1628682000,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the Back icon in Terms and conditions screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInTermsConditionScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 73600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 87100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2446251500,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13787904100,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2653205000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2537027800,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 45,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 175400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 46,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 46100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14999002400,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20638801000,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2228716600,
              "status": "passed"
            },
            "line": 49,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${clinicalSafety.text}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${ai.healthcare.text}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${localisation.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${privacy.date.protection.text}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${concern.reporting.text}"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One pulse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/LegalAndPrivacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalandprivacy_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 131100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 10,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1496500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 646400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28985157600,
              "status": "passed"
            },
            "line": 11,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21041900,
              "status": "passed"
            },
            "line": 12,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13638504000,
              "status": "passed"
            },
            "line": 13,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11597432800,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5009198800,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4359470500,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 685100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 45400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 18,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 52500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3740856900,
              "status": "passed"
            },
            "line": 19,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18691038000,
              "status": "passed"
            },
            "line": 20,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1051151800,
              "status": "passed"
            },
            "line": 23,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999752400,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8336778300,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7774988200,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 171600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "Navigate to account screen and verify all the options",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen-and-verify-all-the-options",
        "after": [
          {
            "result": {
              "duration": 55500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 159000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5611968400,
              "status": "passed"
            },
            "line": 29,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000809700,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6994695100,
              "status": "passed"
            },
            "line": 31,
            "name": "user should verify following options on account screen",
            "match": {
              "location": "ManageProfileSteps.userShouldVerifyOptionsOnAccountScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.wearable.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${my.notification.text}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${icon.mySettings}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${my.feedback.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${icon.legal\u0026Privacy}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${sign.out.button.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${logs.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 179900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 63100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 42,
        "name": "Verify wearable screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-wearable-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 48800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 117400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1403526200,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on \"${my.wearable.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.wearable.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000455700,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4875764100,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${wearables.fitbit}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${wearables.garmin}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 51
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 158000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 56300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 53,
        "name": "navigate back to account screen from my wearable screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-wearable-screen",
        "after": [
          {
            "result": {
              "duration": 124800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 84300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 890161400,
              "status": "passed"
            },
            "line": 54,
            "name": "user navigate back to the Home screen from My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.backNavigationMyWearablesHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000785400,
              "status": "passed"
            },
            "line": 55,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 164000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 52700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 58,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 63200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 67700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4862284300,
              "status": "passed"
            },
            "line": 59,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000059700,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 99600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 62,
        "name": "Verify reward screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-reward-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 47800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 53000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1240926100,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on \"${my.rewards.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.rewards.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000565300,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6836464300,
              "status": "passed"
            },
            "line": 65,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.title}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${myRewards.badges}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${myRewards.vouchers}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${myRewards.discover}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 148800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 72,
        "name": "User access My Rewards FAQ",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;user-access-my-rewards-faq",
        "after": [
          {
            "result": {
              "duration": 46000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 117600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3720922700,
              "status": "passed"
            },
            "line": 73,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000232600,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 777987700,
              "status": "passed"
            },
            "line": 75,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.title}"
                ],
                "line": 76
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 162900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 32300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 87,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;2",
        "after": [
          {
            "result": {
              "duration": 161600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 80800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 531793400,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.1}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 683078800,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2212513900,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.1.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1164595100,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 163500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;3",
        "after": [
          {
            "result": {
              "duration": 55800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1028314700,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.2}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 341819200,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1232653000,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.2.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1385778500,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 160000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;4",
        "after": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1167634500,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.3}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 528022700,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1058958600,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.3.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3.ans.1}##${myRewards.faq.3.ans.2}##${myRewards.faq.3.ans.3}##${myRewards.faq.3.ans.4}##${myRewards.faq.3.ans.5}##${myRewards.faq.3.ans.6}##${myRewards.faq.3.ans.7}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1016506300,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 937500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 90,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;5",
        "after": [
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2279835600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2075436500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tActual text is: 4. I have completed Healthcheck and used Symptom Checker previously, will I earn points for those activities?expected text is:I have completed Healthcheck expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ManageProfileSteps.verifyFAQOnRewardsScreen(ManageProfileSteps.java:291)\r\n\tat ✽.Then User verify following faqs and answers \"${myRewards.faq.4.subtext}\" are displayed in My Rewards screen(features/my/MyAccount/PulseMyAccount.feature:79)\r\n",
              "status": "failed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.4.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.4.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.4.1}##${myRewards.faq.4.2}##${myRewards.faq.4.3}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.4.subtext}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.4.subtext}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.4.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.4.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.4.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.4.subtext}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.4.subtext}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 146200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 91,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;6",
        "after": [
          {
            "result": {
              "duration": 31000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 47600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 549996700,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.5}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 317828400,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1053807800,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.5.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5.ans.1}##${myRewards.faq.5.ans.2}##${myRewards.faq.5.ans.3}##${myRewards.faq.5.ans.4}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 372548300,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 153900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;7",
        "after": [
          {
            "result": {
              "duration": 51600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1431156400,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.6}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 457617900,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1408660300,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.6.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 440302700,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 127300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 93,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;8",
        "after": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 39900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1219641100,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.7}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 347766400,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1799061400,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.7.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 545396700,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 127700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;9",
        "after": [
          {
            "result": {
              "duration": 39400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 51300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1205589400,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.8}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 448134500,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078396600,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.8.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8.ans.1}##${myRewards.faq.8.ans.2}##${myRewards.faq.8.ans.3}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 373351200,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 136100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 95,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;10",
        "after": [
          {
            "result": {
              "duration": 52400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 61300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1171618500,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.9}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 337819300,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1332491400,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.9.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 801767300,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 122000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 98,
        "name": "navigate back to account screen from my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-rewards-screen",
        "after": [
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42334533700,
              "status": "passed"
            },
            "line": 99,
            "name": "I click on back button on my reward screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInRewardScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000523600,
              "status": "passed"
            },
            "line": 100,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 140600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 102,
        "name": "Verify Notification screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-notification-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 184700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 53000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 290804300,
              "status": "passed"
            },
            "line": 103,
            "name": "I click on \"${my.notification.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.notification.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2755660700,
              "status": "passed"
            },
            "line": 104,
            "name": "User verify following texts are displayed in My Notification screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnNotificationScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 105
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 138800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 107,
        "name": "navigate back to account screen from Notification screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-notification-screen",
        "after": [
          {
            "result": {
              "duration": 99600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 45100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 481165700,
              "status": "passed"
            },
            "line": 108,
            "name": "I click on back button on notification screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000527200,
              "status": "passed"
            },
            "line": 109,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 144800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 111,
        "name": "Verify my feedback screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 763683700,
              "status": "passed"
            },
            "line": 112,
            "name": "I click on \"${my.feedback.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.feedback.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5719482100,
              "status": "passed"
            },
            "line": 113,
            "name": "User verify following texts are displayed in My feedback screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyFeedbackScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${feedback.static.text}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "${feedback.improvement}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${aime.text}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${health.article.text}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${bmi.text.uppercase}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${wrinkle.text}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "${health.assessment.text}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${babylon.symptom.checker}"
                ],
                "line": 121
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 262085100,
              "status": "passed"
            },
            "line": 122,
            "name": "I verify following edit box sample text is displayed in account screen",
            "match": {
              "location": "ManageProfileSteps.verifySampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${share.thought.text}"
                ],
                "line": 123
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 134800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 126,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 58900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 76600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 378543600,
              "status": "passed"
            },
            "line": 127,
            "name": "I select \"5\" star in feedback screen",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 10
                }
              ],
              "location": "ManageProfileSteps.selectStarInFeedbackForm(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3684302500,
              "status": "passed"
            },
            "line": 128,
            "name": "I enter feedback",
            "match": {
              "location": "ManageProfileSteps.enterFeedback(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Feedback",
                  "Test_12345"
                ],
                "line": 129
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5822266200,
              "status": "passed"
            },
            "line": 130,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000693700,
              "status": "passed"
            },
            "line": 131,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 192600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 133,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 39600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 56300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4850052900,
              "status": "passed"
            },
            "line": 134,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002376800,
              "status": "passed"
            },
            "line": 135,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2109538800,
              "status": "passed"
            },
            "line": 136,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${data.privacy.text}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3897807000,
              "status": "passed"
            },
            "line": 139,
            "name": "I verify data and privacy consent in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyDataAndPrivacyConsent(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulse.personalised.consent.text1}"
                ],
                "line": 140
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text2}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text3}"
                ],
                "line": 142
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text4}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text5}"
                ],
                "line": 144
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text6}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text7}"
                ],
                "line": 146
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 164100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 148,
        "name": "Save the consent with data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-with-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 37200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 47600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 395427700,
              "status": "passed"
            },
            "line": 149,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4376170600,
              "status": "passed"
            },
            "line": 150,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1842337600,
              "status": "passed"
            },
            "line": 151,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 152
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9129836500,
              "status": "passed"
            },
            "line": 153,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 147800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 155,
        "name": "Save the consent without data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-without-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 131600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1736685200,
              "status": "passed"
            },
            "line": 156,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4351052900,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2149862500,
              "status": "passed"
            },
            "line": 158,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 159
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8513004000,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 222000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 20900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 163,
        "name": "navigate back to account screen from pulse personalised screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-pulse-personalised-screen",
        "after": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 75200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9471021600,
              "status": "passed"
            },
            "line": 164,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000379700,
              "status": "passed"
            },
            "line": 165,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My accounts options in Account screen",
    "description": "1)My wearable\r\n2)My Rewards\r\n3)My Notifications\r\n4)My Feedback\r\n5)Pulse Personalised",
    "id": "verify-my-accounts-options-in-account-screen",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/PulseMyAccount.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyAccount_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 147000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 38700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21765688800,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1584900,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13028582400,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11441555000,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000268700,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4538915700,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 151200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 34400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 51600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4067183000,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18639721700,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 411443500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000346100,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7654415100,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7478552100,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 177700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 23,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 941100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4260667600,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2017697900,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify My Wearables tile on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${fitness.myWearables}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${fitness.myWearables.description}"
                ],
                "line": 27
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 621140200,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Connect Now button on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5406185200,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${wearables.fitbit}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.garmin}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/my/MyWearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@myWearables_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 126800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 50100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 60000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16817128500,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 320600,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13496878000,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11356798200,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000340500,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4797153700,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 12,
            "value": "#    Then I verify below language options on toggle bar as per specified lbu on login page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 157800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 52300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4822282500,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18566712400,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 334871400,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000031400,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7974032900,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8337627000,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 153100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 25,
        "name": "User should be able to access Calendar screen",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;user-should-be-able-to-access-calendar-screen",
        "after": [
          {
            "result": {
              "duration": 59100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1998124200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4717270700,
              "status": "passed"
            },
            "line": 26,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3844529000,
              "status": "passed"
            },
            "line": 27,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14161294400,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000165100,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3134133100,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${calendar.text}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${no.events.text}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 481057900,
              "status": "passed"
            },
            "line": 33,
            "name": "I click on events dropdown button in calendar screen",
            "match": {
              "location": "LocationSteps.iClicksOnEventsButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93730726300,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPolicy Remainder text is displayed on page Calendar events expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(CustomerConnectSteps.java:89)\r\n\tat ✽.Then I verify the following texts \"Calendar events\" in Screen(features/my/health/Calendar.feature:34)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 34,
            "name": "I verify the following texts \"Calendar events\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Calendar events",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${medicine.reminders.text}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${appointments.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${vaccination.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${workout.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${pulse.tv.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${policy.remainder.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can access calendar under health section",
    "description": "",
    "id": "verify-that-user-can-access-calendar-under-health-section",
    "keyword": "Feature",
    "uri": "features/my/health/Calendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@my_calendar"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 174000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 391200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1119016500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:93)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30660700,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 129300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17056922200,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000072200,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13476009900,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000884600,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12604591700,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000017800,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8128842000,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000103900,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9379225300,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 365248400,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30480382800,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000060400,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 43226261200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c2972a1f-08d9-45e5-92a4-b973c0f8dd1a\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027DD-MM-YYYY\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1043)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:374)\r\n\tat ✽.Then I click skip button(features/my/health/FamilyVaccineCalendar.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5537800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 77900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to access my family vaccination calendar",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;user-should-be-able-to-access-my-family-vaccination-calendar",
        "after": [
          {
            "result": {
              "duration": 40100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2535958900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7716865300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c2972a1f-08d9-45e5-92a4-b973c0f8dd1a\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Health\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.clickHealthButton(PulseHealthScreen.java:71)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iClicksOnHealthButton(MyDocUiSteps.java:98)\r\n\tat ✽.Given I clicks on Health button(features/my/health/FamilyVaccineCalendar.feature:29)\r\n",
              "status": "failed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I click on vaccine calendar tile",
            "match": {
              "location": "VaccineCalendarSteps.iClicksOnVaccineCalTile()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALQAAAGQCAYAAAAHh0qmAAB+fUlEQVR4Xuy9Z5gk1ZH+izDjffe099577733vqfN9HSP99577xgGM8AMAzN4b4QVVgiPHEgCJCQBQrta7a4kPAhJH+LGG+eczKzqBum/H+7/3n3mQzxZXdVdXZX5yzffiBPn5EV/8U+iC3Eh/rfERe5PXIgL8f/nuAD0hfhfFReAvhD/q+IC0Bfif1VcAPpC/K+KC0BfiP/zCEge+7EjPgpNp78EpY56/p9GYAp9FJbxje/7z+J/DPQnpa30cVq5+pk/+GcdI/RxdrX9O/zcp/Vz6KPYfPtvChro45wa1/eKyqGPIrPpL2GZ9JeQsXfCJyXN9MXq7VZ8FJNnvfZxSil92tBHnzYN0Ketc+nTtiH6pLhl1HtciP9ZfBSeRZ+UtTJkmfLzx3n19MXmffRZ2zz6fO4K+qx3EX2+YK31+zgWX249SF+s2kZfrN0pjz/OqR31vibwGliS/xWdyxwN0xdrdtCnjf0K7DH+5tvifwT0pzXd/EEPCET4+YtV2+nT2h76KCSNPorIpo8zKumznoX01eGr6RP9ZbBD/nrmFtkBzvf6KK5AvshfAHVohivQ/PjzpRvpi/W7ZOf8/Qev0N9fep0+ybV30Odzl9PXt9xDf73xdiu+Onlm1GdGfJxaNuq5C/HN8RGLzWe9C+mToibruHzCgvTV0Wvo6wcepa8uv47+9t0n6NO6OepvWFU/a5/HPGylLzbukfh8/hqB3P29ERA8sPRpy1z1M28/euIZOtk7SH9/8TX6JL9+1N/8s/gfAY2QD6OB/uuZWxV0yzfLTjAq/Pmi9RbQn6/YIjvHHWio+ie1vfRp9wL6lE+Cj9MrrNegDl8dupK+ZEX4ctdR+vr8Xbw9Qp91LbB+B0B/hr+txo4Z5G0Xfbn90KjP+0lVpzoZeOv+2oUYHQZmHGfYAOs1vor+/YVX6evb75Pj/7cHHxOIrb+LYEWv7FBAr9ulTgbYh+A0l/f/OLlElF6urA6gH9qyk1Zk5dN7d9z7fw/oLxk62R64wsX7GKChqH+9+ix9uWkvfbnvcpf3+Sizkj7OqpZLj8AM72Veg6rfdAcr/VX05e6j9MXKrfKeTmABtFHeLzbsoS/5xPrqoPo8Lv+HrwCfL1yn7I3baxfCLWAhu+bzMe51hRnBP//t0afo78+9JFD/7ekf0CcVHS6/81F4prKkOK7JpWJN3X/nyx2HxwQaynxV3xB9zVfj/2tAf7GJPxifpV8ePCkW4pPyNnneAA0v9HFKGX3WOSJQOd/nzzhzg1OtHfdnt//zESsC/s+X/D++vuMB+uv1t7AC2Cr72Rz2cEs20mf9S/hSeLWcMF8dODnq816Ifz0gLOJ7x0rM+Fj99dRN9LdHGOrvv8x2727OjRpH/d5H8YWS63zaMiCW8qP4AvXeDDlOFgto9spOoP/06JP0x4ce+3/fcuDSYqkdf0mckbAIANB8eCSEku2av+EzV/yy433+wz+R/uAMv8RR/+tbIyhFLl+iBDrw2Ub93oX41wMC4/6cI6wqBHw1h/MYu8dHblZD+ADgCUUchfJesDfyGvP0KYuVBCs6cjL39/tn8T8G+kJciP8vxkWJ4ybTt8b4KS6RZGLCVLeYRkkTEdN1zKDkSYiZEimTZ0mkTvag1CkIT0qbOpvSp3lZkTHdhzJn+FDWTF8Of8qe5U85swIo1yOQcj0DKc8ziPJmB1M+wiuE8r1DqcA7jAp9wqjIN5yK/SKo2D+SSgKiqDQwWqIsKIbKEcGxVBEcR5UhKqpC46kaEZZANeGJErWIiCSq01EflawjhRqiVTTFpEo0x6ZJtMSlUWuc3san68igtgQV7RwdiZmyNc/hZ0RnUhZ1JSOyqTtFRRe2qTnUk5ZDvWm5HDk0Jx3bXOrB8xy9+mfzGqJPb+VxRh71ZyLyJfoy1OsS/BpiTpr+ff0+8v5p6v2tz6I/F7b4rPK5EzKpDd9Rvnc6Ncekyf5o5H1TH5ks+0/2J+9X7N8q3tcVCBwDHBM+NiV8jIp9I+SYFfrgGIbK8czl45vDxzqbjzmOfeZMP+EhAzHdWxhJm4qYLQGGECnMUzKzBc4uuug7F9NF37nkm+PiSyW+44xLLtMxzo5Lx9PFVkygiy+bSJeMmyRxqcRkuoxPhMsmTKFxfAKMZ/jHM/jjJ02nCZNn0MQpM2nSlFk0aaoHTZ7mSVOme9HUGV40baYPTZ/lSzM8/Dj8aaZnAM2aHUAeXkHk6R1Mnj7BNNsnhLw4fPzDJXwDIsgPERhJ/kFRFBAcTYHBMRQUGkvBoXEUEq4jLJ5CwzkiEigsMpHCOSKikigiOsnaRsUkc6RQdGwKxcSlUmw8Io3iEtIoPjFdIiEpgxJ4m5icyZFBSbxFJKdkUUqqa6SmZVNaeg6lZ+RQBoOWmZlLGZnY5rlEVlYeZefkU1Z2HuXwFo+zs1Xk5hZQDiKngHIRufZzeXn8M0d+XiEVFBRSPkdeHkI9J6/nqsDz8t76fU3YnyNXPiMineHHZ09NzZbvpb6j+t4I7BfsK9lvHNiXYbxfQ3j/Yr8HhsRQAB8LHBMcI2+/MPLyDaXZfAxxLGfNDpTjO32WHx9zXz723jRl2mxmYbYwATYmTp4prICZcRN1sJBexjxdOn4qXTJ+MoAeA2I3oF1gHgPqi12AniBxyWUc4xTUgPnS8QgAPVU+xLiJCIaZVXwCf1B8WFegZ8uXEqBnOoHm0EB7eAcJ0Ngx3hwGZgW0A+YQBXNQSKyCOgwwK6gtoDkU0BpqjshowKwiOs4ArWA2QCckqUhMskFOSgHM7kBnU4rArIFO17BooAXqLAWyBIMMuMwW4BkQDYwAFyGw5he6REFBkQ78XER5+QpmE/IeclKokyXHAtp5YqkTzUCdBqB1pGio8b0BNPYH9g9OfOy3iMgk2aehLBrY30EAmo/FKKBZiDxxLBloiBWOM473NFblqSxqAvVUT+FiIvMBVhTUMzTUAFpBrYH+FoW++BKB14LagtgZCuiLL0UYddYKzSHqPB5hFFoBPR7hBFrD7KrQPgI0ztjpBmgPW6E9oNAcUGcvv1DZST7+DHSgqzojsEMNzAKxDux0A3O4E2aGGAF1jnGoc5wGGmAboJ0wA2IVBmgbgrQ0pczpgEOrtCi1E2ZAnKXgggIrJebHWoUlLDBt9S0AxPkK4sJCDmxdoMbraqtOCBtsE0at5eqglRqPMzTU+Nzp/LnxPQC3UWp8//gEpdLYVwJ0FIBOlH2sgI6lAD4G/nxcfPkYAWocMxw7HEOnSiMslWYORKWnAepZFtQ20NM10FNEMP8J0O6q7Ar1xQZoC2aH3RDLYQMtMPNlAf/cqDM+lNgNC+hZcjaKOk9XdkNg1pZD2Y1AOZsN0MZuCMwCtLYcLkDHyA7FjrWAhnpEKKAtq2GpcoqGWQMdhwOl1dlNoXEwjc0wMCuFVo+NzTDgitLx4zStegKNVkcDM2K0IuuA0jqV2LE1MBcXFVMRbxGAWcDm1/Eafkf+Nk+FKL3zZHGAbSILQIta688vUCuVTsaJrIGOE6BTZR8iwgVqrdJs9ca0HeyhcZU1QCuVHhtqsCFAT3FV6X8NaHeYLaBtqBXQ2ks77IYNtPbPRp3HG7sxXftnBbRToW11VnYDX2oG+6oZ2moI0No/A+bZviHKchiYJZTtwM4LFHVWVsNSaK3KYZE2zJHuNkODrbwztq5AG+9seWaHxbAuy9ji4GslFoWTUHDDToil0Jd9UWn9s63Etu811gKQivIaQDW0hYUAuVgDrcKyHg6grb8fA27YEAO1uTII2PrzKT+dI1DjOwrQHNgfsTjxZV+lyP4zXtqotADNx8M/MEpyHAiQ9xgqDagFbPHTPg6oXa2HK9Dw0d8E9MUK6FFQuyj0WAmhshsCs7YbArW2GmI3nMkggJ6kFNr4Z1xaDNDwUlBnJAoz+Yyd5amTQQ00QDYBoA3IUACj0MY/B4dp76xthlgMAzMUxanI2mI4Q+wGQGYlQkgSqK0G7IUA7YDZshnpKvlzhrmki6UQcGxVVCAruIwKO1VZ7IQG07ktLIIiM8wGaK3STsVW0Ju/KbYsidkauJVqa8Xmz5atLVB2lvLWBmoBmk9iZTnUyQ6oBWhYNqi0Tg4FaiSH2gIalRbrIV46VCX5XsECtQIbSaL20zPYT0+3gQYz46HSYju+DegxQLY9tFOd3ZNBBbSB2a5wOJNBB9ATjX9GhUPZjUnTlELDbiiF9tVQa6DFOweqL27shqXOCmg/N/8cGKL8s1Q3+NKHZNBpMyKjbZth1NiCWG8BssnmEcZqJCU5kkCT+DkqGSr5U0BbXpnDJHnOZE9VKGyITWLnVGQFrobVgtb1Z8BbXKxD/+zyWpEC2Si49TtOO4ITyAG1uwUB1FL10BUPKzEE0PE20BEaaMCMBByiYqk0rAcn7hAglwRRK7XlqWc5rYe2HQK1UminSqPSMXaVw12ZLaCd/ll5ZwDttBujgHZWN8Q7G/9sl+ts/wyglX92LdmZcp22Gw7LgR0xlnf2D1Z2A+U6KINUNbTdcPXMKqSSwQfCVDPEWiDxgyJriFVFAzZDledM4icwO2zGKFXW1QJVwbCTLmMtBOQ8XWbLB1QGZAWxE1p3YEuK7ZCfS0qoVEdZSSlHCb9Wwr+vt+Z9HMDjsTk5oNzix41S56nyoLEgArS2HkgO4aMN0LaPBtAqOYSVsxQayaFYP04O3aC2lTpEAhUsHGscdxQEnKU823aMrnaMDbSbUo9d5XAmgs7qBqB21J/FOzuqG07/DLuB+jPUGTAjIbSA1iU7DTTU2QDt9NDIlJV3ht2IlCwaHi0gSJXrEMpqaLvhhFnbjWgDs1XN0FUMUWZda3VUM+zEzyhzlqiVqLL2ygZkC2hcrp1Ww/LItjI7KxPihzV8AM0AC/gApgkFLkcpopTKOfBYnpfn7NdL9e+b1wC/gt2otFZqVEscKq3q3QponIz4Hk7LgXq0ZTtQAcKVzemjJWfRKq1zGVPGA9RW1cNXKbWXr4LakwPH3dSnjUpPkjLe6BKeBnpsD+0C8lhAa3W2gL4MYQZUTIXDqLPTQ9swOyscSp1VhWPKDHegHRUOYzkwoKL9s6s6G7sB/6zshiizW73ZqLQkf9j5Dt9sgI7TXlkGTpwJoLYZRpWVxXAdMLEGSwRircjaI0vy5bAVxhcbj+uqxAo8wCgQayAtJdbQVpQxzDoqyso02CbU71nwc5Rr0OW9jEJbKo3Por27BTU+v/o+GajSWECr/ZHI9svYMVzZYN2Uj2bxcPHRSqWd1sOp0BhPQJLotB9KpZWfnjLd20oODdBGobXlGA30P4VZJ4M2zK7JoG03VCnlUhkdVHYDVsN4HzWgou0GYGZ1tiscHIBZ+2en5TCXpVHVDd4xYje0f1Yjg7GizAhVqlOjgqLSZiTQYTUsu+EozQFmqJBSZhVOm2G8svhlM0iiYbaqBdpeyCieBsUAbZI3EwBL2QgNsgbXCbAEAC4vpcqKMqqqLJNtZbmGGs+Xl7mAjjCAG+AV0MqKOD22KfWZKov5DlKXdlQ6sB8kBGqc+ApqCILlpU21g/e9sR2uXloBjWNpwtgPZ+VDqbSPVfFwtx0QTA30P0kMORm8yN1uXOKwGi7VDQPz2P7ZAG0PqMy01Rl2w6gzqhy6wiEeGpaD1dmqPbuX68zoIOwGMmnHQIokgxpqUWgZQEm0SnSSCGJIewyYpc7ssBquQ9lamQG2VmexG2agBBBIwpdvlcOscpxR6HwbYqPMBjBjKcQauMEMUCsrSqmKIa6uVAGo8TNCgK4A1IBbgT0W3EahzQkkQOurhfHyotLiowtGeWjx0QAaJ7reV8pP2yqNfW0lhxgL0LYDOY67j1ZhQw2VxnE31sN4aVTDJhrbMdpyjFZpC2q3wRQb6LFGBic5gLaHu011wwBt7Mbo+rPtn6Vsp/2zMylUFQ7Un+1ynQI63C7VBSvvbMp1xj9blkNgVnbDmQhapTlHRcMC2tSZU3RpTioautYsQGfb/lmAzlVJH4f4ZA2y+1C1VBxMyc1K9JSvNSCXlBS7emIOqK9RZIAsQGuY8RivO59XYBvA1VZBbdsZy37o8p8p8eFzqkqMSmTFR0ulI0ftBxlgMf0dqibtajsc1Y4w1dsBKyglvCDUpW2gzZXWx08ptgLaqdIAWqk0qh0YZBGFnvQvAG3UeSygbcvhTAbNYIoC2b13w7X2bCeEtn+21Vn5Z0f/hqlBO6obTqBx2cKOwWCKc6hb9WzYTUgI5wCKSQQRJqmxqhmWMo89jO2sNRvLoWyHqmjgEm2V4nTFwMBs7AU8sgWyU43dADY2QimvDSuiprKcaqrKLaDxszxfja16XuyH/ls5CaDiUHkNtrE0puJhVUSMWsN6aC+NwR8BGl4a3x/7RaC2ezuwL01N2hoKj1TNSlKPdlgOHDcZOwhAoHVB1ai9+Nhi4Mzy0rNVxWPqTAW0qnYohQZbbkA7oB5lOcYCegy7YQ11a6vhsBvKajhrz8pujKXOLs1ITnVGhcNbeWgDtCnZKaDtzjqpbmigTc/GqGRQgE6WjFzsxhg2Q5I/XVtWIGOra8ymF8NZ1dB2w5kAykicw4+aRBDAiC92qz4ogBXEBjgDpVFepxoDZoR5XK1/rq22n5e/c/yNeQ6hEkkNtv4czlKgqXxYtWltPfBdTXIoJctU3dsBhRbLkSoVJGdvR1i49tHo7TAKraE2ib1Ra+Wn7fq0bTt8pHDgLN99u+VwB3oU1A51NgqtO+vca88IM4ji4p0lGVSlOts/2911o9RZA+3pABow4xJltYoigu0OOwCthroBtHNk0AG06dXQQKtBlDGGtHHA0rJcOs5EkR09DsZuuHfIQdlMz4WBGyqoaswKbFXBKBallAqEVmWjps4Qhdb+WJ4DnPK8BhN/ixNBK7pRYqXq5eqE0AF/bWyIeGskiw6oVeXDkSQ6Kx7WqKHeJxpo1X2XLpZDgNaJoXs9GsKDK6r4aA2ywGyARhnPvdqBxNBSaCSGqHTMVJWObwTaaTnGAtrZWWd6N74RaLe+Z4HZzTsDZme7qEkGNcxmhNDDy3TXGXV2lOsco4NWZ51ToS111v45xrYcsbzj4Z9lAEUD7bQc4pu1SjuBNqOBgNg5Emh6mHPzFND5UGWTBDpH/YztYGhMOa20RD02ENo2w4YOtgB/l5ev6tnwtjn4X9qj5+KEKVYnRwVAh2LXVFBDfSU1NVbztkoHfq6iZgl+3IBtNbXwzw21lazwFQI9/ifglv+pKx4AWnlp04HnaCnV5Tur+y5G1f0N0DgmptJhJYZOoP3dRw+1h/awKx2Tp9mWY/xku69jzLLdtwON+vO3AT2693kU0Kg7u9eeLf/saOi3gLa766yGfvf6swymmGYkp90wtWd4Z4dCO/yzSQZNyclYDkDtrGy4guzwzkaZTc3ZlOh0AAI13GwqGiZUIgjLYVceXEt0JkRxKxBlYimqGba6ukpqbGAAm2qotbmG2lprqb2tjjra66izo56jjrq76qm7U0VPVwP1djfQnB5EI/X3NtLc/iYaGmim4cEWmscxMtRKI3P5MT831N9Mc/uaaHBOE/Xz73e31wrssCv4Ls4yHvaFqnY4eqRRz49Vjf+qR9pRjw6zm5VMB574Z63OGDBz+mcFtKpyTJmBWrQ9YqiA/raBle+MUYsepc4mIZxoAe3SWWcNpJi+5+kuiaCyGx6szt80Ouinu+u03UAzv04I0cjiHCFU5TqVEMpwtwW0SgS/EWaos4FZVzVMhUMsh/HPOhl09meYHg1pgneArBJBpcqm5RPdcFI5YIhdRvx09UIsAoCGfWBY61k9W1tqGcIGGuhrpnlzW2nBcDutWdFPAwwZwFuyoJOWLuyiJQs7JRYvQHTQ4vkdtJB/d/68NhpmMIf5bwEp/mZooIXmalAHGdS5ANYZfQpu8/PKJT20jN97Kb/vEo5lHCsWddGqJV20fGEHzePfaW2q5hOyWPYDrmJOoK3EMMa1Hg0fLdUOdEGK7XB04GnvLEBLHVo1K5khcLEbLkDbo4XfnBSKQiuo3YFWTUk20M7OOqlu6KlWUqoT/+wE2jErxWE37P5nJIQMtIev3YykvTOm6kjfs4+ubDgGVJzVDVWui6GQUDsZFJuhYUZE6+FuA3RCgl3VMIGM3RrS1g3tGCFDSDLIQFtTpbTFEJsBoLXNkAQQl3/tlY1fBgBQXSRkdXxph6oC3MXzu2jtij7asn6QdmyeRzu3zNPbYTp2cAXt3bFIVLaW/6autoIWjnTQyqU9tGpZL0ePPF6xpJuWMXQAfhG/jlg43EELGPAF89plC+AROEkAPh4vGkHw7/IWJwHe+/JDK+V9Gvgq0NZSI9HDSo8TYvH8dtqwcg7t3DiXtq7tp8XDbdTEV4w8tj8pGup41PQlP0FbgerriATQHMZ2yBC4Lt2pllJ4Zz1aCHUGzMyBsRu4gltN/xbQoyyHO8xKnceuRSvLIcPejlLdJRhI0UCrCofdzG+SQqd3Rhh1BtB2qc4xO8Uxd1BmpWjvrFpFdTJoBlOcdkNqz7qyAaBNMojqhqiz8c4YSEG5ztSdHaU6B9AKap0Eiirr+XZiM9A9Z9TZbrk0Kg3P7EwAocgNdVUC5gIGbcPqftqzbYSO7FtCxw4so+Mcx/YvpcN7F9H+nQto99YR2rR2gA7sXkwjDB+8cA4nlrEJqVRYXCQqDmVevrhLQF48v1MAHZmrVHkuqzJOlgG2DQNalaHUElq1R4baBORFrO4AvJs/2yI+ufZsX0B9PU1UylcPKdVlZVIn25ketjFdbGnaWmBxatmSQM27aQuDvYo/RweDX8CePpmvcqYDz6pJay9t+WhnLRo9HWONEpp+DhlUcQfa7ulQQF/kptCOXuixatFjTrWCf7ZGBr8d6FEKrTvrzHQry24I0HYzv8s0KwANv+VMBnUzkqk927NRbKBNVQPN+hhMkURQw2yV6sYA2oJZgM7RXXMOm6ErGs5pUmbgxKgyRuWQcA3PbaONawcZ1oV0dP8SuuLwSjrJcfnBZQL14b2Lad+OBaLKWzbMpbUr+8RyrGD1xUlQyqqeyf8Xw/ZB/D3z+IQBgFBVZTNaGdoW9sdN8vtdrKgdfAWAhWlhn93M0dRcLdvmJhV4ra2VvXdbvTwu4avHymV9tGndoLxewHYJFiw8Mla8e3urskMCNT9u4GQSVw34+Hl8gqxczDZlfhuDXc2Kncf7F9ZD2w4919C0klpAB6GnI1KOr7OPwwVoXeEAL+4KrVQas77dgXYo9GjL4ZYQWkCbzjp7Zrc9oGLXn12AnqbKdbZ31vVnR7nO6t0A0I6as+p7VspsNSJZ6mxbDSnVOUcFY+y+Z1N3Ns1H0qsBkHUXnYs6u9WbMSVJBk4MyMZuYIhbD5wYmJHkNfIB72eFhC3Ys32EQV7KagwVZoD3LBYl3rV1WOzF9k3zGPgB9stzaBmrHSDtYjCXLuqWRK+IE8iMLAW0ByfIkXy1KeOEEdULAy0qGLVsSeDH8Voxe/X8wkJW9gLK4s+YlYNheR3Z+FlXSfLV7+Dxjs3DbF96+IpQKVcEtAZgSBqts6islJXB71fI64gqVEQ4ADY+Qx8nkcODfDXg791QW04Z6Vmy/03Dv6pFq/ECKd3pKocNtIHZnpZljxK6JoXOfo6xLYdOCsf0zw6gRzcjuS5V4FLhcADtrG4I0DO1OmugzewUjOHbbaJQZuWZTd0Z4bQapndDjQoa/+zoeTa1Z1aLuDhTc1bqLIqM0S7T4+wYULG66HRZTnXP6elSpkTn8M2oaIi1YLBQVQCU8LfrVyl/vG3jEG3dMCQKjJ83rhmQ1wTiRQpi2ARc3nEyrFs1KD4ZFQ1Al8wnGYBGroFEe6anL+8nf841IAK4wkEgIBQohUI4YPFmKTGx+s+V7VNXy1l8LDxlsALHJTMrjQ7sWsSfo50qK8sZ+AKpJQcEK3+LOjH+fwLvszTeHwAc08FKGXIAbZQfn72DLUkvXyWQPJYUFXK+kibHRvo5cMw4KTT9HFLdsEp1OhmEOsvMFUdPtLvl0COF31y207bDthvuCu0YHfwWoO2E0LVVVCm0h203HEAb/2zUWYBGIxKqGkahA+yuOtXEb5fqRrWJaoW2p1m5KrTdTafbQkWlXYG2oVbqjEETM/fPOXhiBkzqOTlSFYomywrAoy4csb0qkq1li7tpOXvPRex7YRNa2XsWFxfwZ0qkwKBQPqm9+QAH8O/1sO1ok9oyIMJMkEC+ZOMq9h3HVfU7F+tj5IyLx/FriMvU6yas1y+T19Trl4pg1dUUC9DzBlul8oIJvWFRsDjRfCyn0iV8/HE8oZ6BvM/jeP9l8j4pYzsEK9Pb3SiBqwauECg5NqLmzSd4RVkJ78sssYJqSpYGOlBPnDX+2QVo0+TvnF842/LPdpP/NwI9tn92Kdu5AW1bjskaaNs/WwptDXcrlbbX3nAt15kJsQK0rjk7k0EDtHhmfdlytoras1ISRUncB1LMNCun5XBWOEz/hjvQpi1UZp241ZtRmsMgRjt7UdR4kXCpclkrDfapOu/IUIvUfVH/xe/0sc9FwL9mZGVzRu/L+2+i7HcRFT4Wl02YRHGJKZSUmknh/D38GQBv3gfYL7gUX4IEnY+hS0iF6hKB/RvD5XX1dwwDTZw0WUp7m9jn17DaJrAVQ+ciGoQgRGAAv4fAyYBjCy+fzVemBgYY33cZ2yOUEXv46gQbks/qXVBURFWs9k0MdnVVGV/J8sVX47iZOrSyHOFqJrgB2rIbCmiU7OxRwn8VaA21bTkcUDv8s+nfsIB2Wx3JFWjnCKFjuQI3/6yGus38Qe2f/VQ7oYHZBlpbDSxRoJNBq7JhtYg6k0FVe0ZlQ02vsuvPJiFUQGuoLcuhwtSdTTcdPDQsBvoumviSigOIKgKqEagHI1BtQM0XgxUodc1nyDGwAb/byACg5pyans4HZpoAgpn0ExjiadNm0OzZXuTn56/KmChf4lLMBxuPcdIjJkyaRpP4b2fO9CAPj9nkOdub/86HvLx8yNvbV8LHx089xnP82Isf43UEftdj1myaNp3hmDiF4QoWq4FkL46TOdgL9KVDkS/l4z1l6nSaMpmP7bjx6iT4zqUiUumZ2QLzZk4kN3MOAP+NfQE/XcYnej5GRxnq2hpOKvlKVF9XITlGCp+omM2ikkJV5TAKbYa71WRZp+XAikoOoMVDT6fLJqIOLUnhvwq0c5aKm+VwLiYjFQ49O0WAtns4nEnhmIMpZnTQ0x5McS/VSd3Z1Jwd6mw3Idm1Z8Bsmo8k9ECKPWdQDXWrCa8KajM1H9bDDHcboLOMj+bEDAMlyPBRZYAKzx9uEw+8Znmv+GEMRqB01scAI0FavaybD3Yf/06HHOhi9tkZDMIUtl+XskB4eM6m5MQkKszPo/LSIqqWfo0S/u7BNJn3lbpyBQpgYtN4f6Ev2HQ2Yv9OneWjB6QCVQ7CiWNUbBL5MTC4bBv75s0Jnpe/WhPDnCxBYTFUXlnK/rea4pPS5TkkYTh+aAu+jI9xamo65XIymZ6aQaEh4TSOryhgwS8oXGrXu7aOSE5gcoHBvhYZuYTao/yHYfiW5mqpZwNsDOkjPwmLjLfq0GgNVpZDAe2scMigyphAz9BAf4tC27bDqLNSaKPSLgotQDs67NxbRkWd9bC3nt3tstyX7n22gHapQY+eauXagMQwO6obCmbdvC+DJzbAxjejXCePOUxSKDMvYDWk79mudMggCtRZKzQqHBgYMSN5UDQkbagMqHryUjmwOKjw0Rh27p/TSOtW9NDJw8vopms20nL2z+ih9vYLEVhms1qWFBdK/waGltEpV8dqhm1KSor0/uJg4qDKoivT7KlqxuZN5SsdYFbT07D4Tiif7FGUmpFNKexb45NS+LtzMseRmJzM3y+FYUrl90+i2NhY/jyp1NnRwL+bTb58AqCaAFBw5YWYefJnLJJRT9WohEarmJh4uTrP8PSTJHDJAj16uUAF8gXkBygd1nJugcoLEk0E2lsBNMqdEBvkQjjGLjVoR4VDLIdJCA3QzpHCbwRakkIH1JaHthUaiYGrh7ZbRk2FwyrZISGEd5Ys20y3UgptwazthlQ3dDOSywihrj1bfRujejYYZg4zkGIqGrbFcF3Ky9nEj3D6Zgl+bBqSMDrohBn+GVYBPhkHb/e2BXTu+m10zy376c7ze+iGazbRgd0LRamRFGIgYg7bkaULO+iqYyvokbsP046NQwxVqpzo2H9paWnSQWdaOwVo9GvgoEOlfQO1MMySg6facWfIAVUJkocoaih/92iGIwZXIf5eyfz5pVkJQ+wV5VRdo6oQc3qaZKRw/ap+qbqsXobP2ialPNT38Z4QJHw2JJYTJ03hfZBJxehH0QvboKqDgaVpMzzl6oGS3xzOCTC4g6rOmuVzZAsLhno4RhxR6oNSw4KgUxH5CwQIx1Pshu6mlFnfDqBhNzD45qxwgCUDNH7GcRm7bKdBdldo5yyVURWOcWq5LzPkrWaouFY4FNBmyNtTKhwKaB/bbjhgNgMqUiryG7uJ3wk0YFYDKSjRJVnD2wK0sRlalVE+QleYJIIOoC2ojd3QJTsLZgE6X5Kd/j4kTwN03ZXr6b7bDtBDdx2l7959lG47u4suP7hcXoNK4dKLHgnEmuU9dHTvYlq/cg4rf6ZcrbC/sjKzLKDRwwyQTdTz/yrIzaHpDI7sbyMiyFV4P0/g/Soek4UBJz6ARm25pLRUPqc0MLHFwaUfPnf96n7atWVYYN6wpl8Gb3CVSefEFPsccECccJxR/ZjEnhlXCQzZl2DU09FKiv3i4eXPliNSgO6f0yxXK3x3WA+cKBiJBNAQgQo+qbC2CD4f5maieoIkF5/fQDqDeQADEDcBWieETv9s16AV0KiVT5pkLTTzrwHtLNlZy31JOBNC08Oh/DN6OJTdcGtImu6m0NbM7gBLmSX06qLKbqi+DVPhELvhBrQ1zO0AGtm0GuJWILsoM4a7oWTJdh1aLIe2G85RQuOhoQRQmFZOnFazV8Zo3+037qIH7zhMTzxwkh64/RBdfXy1jLQpTz1HBlWQHHZ11EkTELaZWTn8/YIYyqmUzHYAySX6mwFxTZVtO+o56hjy/JxsSf5Mcq6sHqCezpfg2TLQ4sXe2I9P9li2VAAMZTcoI4DGyB6ANj0fUGhUJDB8HRGdIJ4cfhQdk6qkd6kkmlDmUt1IZTf8K6BTUjLEboSykCAnwFD7htUDUmdft7Jfvj8sRzufTKhR4yTDFQODVTEsMCj7wS9DeSWxQy7AWwMzxiTAhmvJDkDbC86AL9gWJNSuQFs2Q23dB1bcRwldPbRJCO2SHT6Yshy6XMdQK5hV/7P0b8wwcwcV0B5WdQOXHjWo4lwq19lVZ/lngRk9zwpoA7MBWlpE49QwtyiyVDHsYW5rqNulVVQ186umJN2/wepcU11FNTVVlMEqXVdXJZbj4O5FYjPuvnk/PX7/FaLSVx9fI5YD6oyMH70WSByRRCLbT8vIoujYRD45w+Xkns0ql5mZSVXsoWug0tp21Gq1rq8pp4baCqrgZDE4KJgFZILsd1kfGfsaV0CGGgkf6u1I6jARt4wv7xg1RI0blQv4eZQK5/SqsmF+Qb4kiJP5OKANE+0KOK4oH0ZHRbMqF6k+bWlzdW32RyNWJCdz8OwYsUR5rrurUboCMXyP4f0NrNKDDDQqOji5nOqMerov20fUmQEomFHCOJlV2deyG2aJXSSoEEGTFDpVGiVUBbQ19O30z99Uhx4NtL1+nemBdq9BmxkqepRQ7IZzupVSaNdkMNDyUmNVOEzvBsp1SAbRjijJIGBGZUOGuVWJzig0gBZFtiA29WYFsNX37D5CqJUZTUZDg510x/kjtGTxoCROOECDbCM2rxvgZHApnblqo/jo+287xF55jbR3wq/W16kRw462asrPR9kvg1WeTxS2GTFxiTLCh/04c9ZsKitGdUPNSLFgxpAyHltWpIwiIyJl1rPUZdm6efoE8neOo7y8HGncRyWhvLSQT9RUykjPYHUtlF6Llib+DHnZvC8S+TumyfMFhXmcXyTwvg4UsQFU0dHR8jlkCpjpz0brq1ZnrKyUwSclZt9H8AkE5R0Zaqf9uxbTAQ70qyDxhZXBiVMvJ3KxDNunsjrH83GA34fdwJUBYOLqbuwrFHmspNC2Ha4Lznwz0N9U4XADWhY0txJCW6HthHCMpiQAbQZUYDccFY6x2kUFaB/XqVa2QquSndSeRaF13dl01UVDnU3AcuiKhlgMuxHJshdajc1ACkJg5kBj0d4dS+j0VZtp/nCXTARAwoXGIIyMDQ+1SpkOinT5oVW0c8tCWji/S1o88/PzGIZ8VtdSBhtTnooF6LDwKP6+fnLZhAhgjibqycWFBVSrFRoBZYblELV2+OrMjAz2rRiCTmCVzRNIIyOj5H3TUlME3HS2CijZJSSlUUpaBmWzD8f/R3ttQEi0+N4g3lZXo421gtW8iMHIpuCQMFbfbAvoCgfQxkMjIYyOTqQgvkJm8+W+o72etm8a5n20ic6e2kwnDq+gLevnCtCm4SktM4etUBr75kS2GjGyjrcnnxCqzj1TBNEwBXA9ULYTqJ11aLvSoYb0le3AZ/g/BNrRNgqFBtSmqd9pOaweDrtkNxbQ0xxAq+46P/ZN/i7VDVPh8PG1gQ7gS1QgOuuwZp0L0Gp00PQ9i90Qy2H3PcNHyyCKVurkJGU1UM1IN/VmtwDM+3cuod3bFlIJq9mMWd5yiQ1he5PIJwOUCaUuDPW2NNdKAxHqzu2sxnN66qWygcGU6qoivkrEs/ePEJiQ1KK0hoODkx9XPOzHjPR0AclELbw0plDBguiJrwI025OcvFyZNoWSWFkppmSh4y+Pn89jSNmiNFRSQRGmZeUz9AVslcqpg20HHmfz72Vk4WqRw7AW8QmOxqE43n9xbCvyqKGuUtfBOdi2CMyi0Aw0KzR6WHBiYCgeteV5g23SbHXLmR10/vR2ySFU6bJb9g0SQig0SqPB4XFSa8ZqSAATSa2acaKB5kDBwLV052eX7maoWrRSaGU7HEB/ZxTQaujU3W6Mbh11WcPOJIUOD20ptBnyNpbD8tBeumSnAkCrJXM11JIQwkMboMNZnR0eGkDrARUzOhgZpUp2ArQMcTv7nlVCmJSkrYfUn9U0K6dCG6uB3owdmxdIc1B8YrJ8hxkzPCU5RWkrit8bNd6MbKzBkcvA53PiVSNJ0aE9S2jRSBtbAIyERcvAAVQdACAZwnAxymwK6OkiCDiQ0dGxqhYNoAGx8dOAWsOtkkZMfi3k3ynin0upm08kTBSArUBDEFo8JRyPoZQyRasNPc0N4qfxfENdBecGajQviYHz8Q+lUrYrGNVDndhpOSQh5CtTfHyKjCKi/InaMlpcD+5eLOp87rqtdO0V62j31vm0nIHGwBMSwkL++3TORSQZRC8Kw4qqF0BGkQFXKVMOBtAyy1+g1snhLOOlnSv7ozLi4UgKodDuKj2mQgNoe5TQWljGAhplO9PHYZYugDoDaN3pNdUGWmDW8wfFcpguO9OUJEDDcoS4LVWggFZD3tp2hGLIO141IrlVOKwlCgB0vJkEa7y0c1TQDKgouMVPc2KIy3BAUBh//hkUGBjKSs4KE6Z6G3z4khkSHsu/l8IgV9M2dNCtH6K25kp+T3T1JalpXHxyJKflMCzZ0sgTxp8P/RFQqSm8DwC05CMckRFRoojKQyuFttRZlLqcOhnCmsoS6myr4YSrmeoZlq3r5tEQJ19ojGprRY9zjfhoDHZgVgwSQwSUG3MSMR8RvzOH1RNXlK0rO2hRfy0rNV/FklKoolIlkzXs3zE5V6ocUOgiVYeOjoqXQR6U+aC4qWxv1MBKN23bOMwWbaFYjgUjHXwS1Uu+gdIaksFwFhysPqqqG97y/RXQaKK6VMBE8QBXaHBg5hNK+Q4qbWyHTg5x1QfQl1zqUuVwqvRYQLvOJbRLdrbtsBVaddq5TLvSdsNFoeGfYTnEQyugUeXwdPhoVDisxWT8FdCwHEG6Dg2Fhu0wJTur9xkemqGOBdA6FNQo3dm2w1Q4VJXDhhonyGzfYBmWnunhzf+Prw4BIRTCliEoJEpUIpCfKyrOl2SvojxPRtswMofeYXSopSMBEpiz2Z5kikJLGyZbDtTbZVBFQJ5AUyZNodDAYCpiz42ONEANla7R1sNA3cggYqAGdgIWYtfmefTTF66jt166lkYGW6WSAVAxfI3+EmxRskNgChXUGYHJBoAaHXEY8YQtwOxvzIhBEz+26nG5KLBM4AXUmA/JKp2ZnsVXq9nqWLNwYZQSyh4Zkyh9HQWcC0Dd4c0xmJLPViWFT+poXJ34iurlFy6WY9JUPYDD4qg6ABVz6O8RoL2d91+xbYdRaVPGs4H+Vxr8vw1oR9nOOVJo1aDFcrjXoJ2WwySFum1USneBNJu/hJfLwIpa0NxSaOOhoc68gyJMU5IeJTRlOwmj0lqpUYtWCaK9RK4FNoMXxckOeoRxxQlmgNPZ10bHxsv3uZRtV0BgmLRSxiemSgI1beZsmjHbX+q/GChABg9VTmWosUXHGioBSOJwoPC+sk/1/kXDT3pKKpWxAopnLVcKbRJD46fxGLXkpvoKBruUFgw209UHl9Cx3QtoXl+T2AlYDAV1rYCr5gLWCtiACwoOm9HJSRz6raXyoWvUgLsSJ45R8mobaDwvSy2YxJDtWGpyOnl5+tCECbBL42WuKXiANZvJCa8Pxg2C+XixAISxP4/ifAYJIUp1M/n4wgtj5NMM4iigLyMUHKTS5aPmFQrU0tehk0MD9XTbeqAnG52HykOPYTksmAVoTIz9JqDdynZS6Hf2QTv8swBtKhwqKTQKbUYKDdAuw94W0I6BFWcPtCMxFKDFR6Mxya0erUt4gBlKjRConYkiQx3E4GGnjmP7FB2bwBl/Fk2dNovG8cHy9/ZjiKN4x3qpqxB/P1x6cYB8+LOhfTWKT5x4TjgxuBESEcfqorrisO+wP5GLyADCZNR9p1BsTKyoMrwqKgqi0IC6HCBjqwIK3dleS7UVRXT/Hcfpj+89Ti/dt5FWzm+SpKuLlRZLGpjlDHoxBYuhRUvr+jUjDGwNVchoZKnYA7StAnZADohRYszMzmG7UWb1WzhDZqdjlScMrqDSkYvbVeRSbDRfzTy9Zf+Ij3VwA8CR8BlRg4Cptb4DpOFK7BbzI/tGK/Sl/DemKU2a/eGl0WxllfBcB1ogkGjh1UCP4aGdUI9pOcarrFz7aGctWjy0qXBMVsPemCUhdsOxoLkArWd5q2lXYwONxNAFaCSFjtX5XUp3ZrkC92qHhhmPxXpIoug6emipNUcsnwgzpmP4d7LkAFOmoJXThy0P72CvABo/QZ28ajDDk4HmPACfnT8vkkUMAOGA4USGcomFk306TkQAl2h4Z+l+m42GH748lymYxT9rgE0I3Px8Q02l9IRcf3IjffXRK/S3399MHzyxkDYsqKVyhh+qa6ZioYyGnmuoMGbOLF06TD1sK0qKcnn/xHBugKlhymPDukCBYUGSktNkeQUAXAGQq5TnhkrDS4vtcNSjZSUlLAuWns37Nol8fQNp4kRWXFzlnXZWFxrAjtis8RgUUrkW9jMSQnPVGsd/b3rg7fmFzvuuqBIeoDZgfwPQY9kO9yqHGv5GNnopYNZAu9ailX92mXalFXqqBbS97JfloTXQnrjcIDG0ynYKaFQ5xHKM4aOh0vbQt6l2OIa/AXUMbxH653goKQK+2ii1hjqBgZ/CMI9jeGtrq6i/r1OqFfieF/PBgeIq1YGFUkqBn6HaUHccGGt/6v2oSp2TZHhZaqqs+plp6aJ6UL9KDXR1ufbOBuhSRIkMsGAW9vJFPXT68lV0w74u2rmcwWVPDfgwctnV0SCjcrAeqGQg6YNiY5GazCwsUJ4u5TosCClzD1HJYJgxOQERERkvI5miygAZFRXtq2V5Mv47WA4otAE6F5Md0OOSqVZRSk5Kp3C2ZB4eXnSZ6ZsewwmgmmYzplwAOEPxAMfbzF4xPtqotBkOlxt0GqDzCpjF8e6WYyygbZUeaz6hKdm5TL9yKLQC2qwB7SHeWZqStN2wynYaaLXklzMpVEBbAytuw9/21CvV3B+hh7/FcjiGwJ3JocBtfDVg1kA7a9SIUBwU70AKjYjhx+H8uT3k+06dMo0TxFAFsEA/VV2tUKcXkM0+dD9o+srG+wr7KDw8kj0pKzOW/rJgtpNBs36dUu9SamVLgI44WIm1i1qptyaZdswvpNOHRmjRcKfMzh7sa2XrUCtq29XZSDu3raWjB7fRssVDDHgrqzeGvDtpw7oVdPjgLlowf0AqEJhIm8zqHB6VIIMgsB2AGeU2wAzAMctEDa4UiYeWOZSYfpajlwbDWnfpuVLTx2qkcrVj3xwYGC7lzvHonXZXbjdBhWVBc5Kvc30OH1XtsOrSArQu481SveG4c9g/Bdr20Arqfwa0tfzXGKOEynJooLVCK6BtDy0DK6P8M8p26OVQ7aP+jlWS3BUa9WgAbeyGE2oMsDjthlJtlSiKnzaNS8Z+oCLBBxfWCAd13+41MsI3mVUVkHp7Y4d6i9+bwJfPKZg1wgcNl1sB20r63KFWVzhPbTWMbwbMJhTUSp3VQuV4XZXpLt+7lPZtX0If/vQGOrAkn65eX0LvPreHzl25WmxBMYPf19tM3QzzxvUr6M9//i/6+m9f01/+/N/03m9/Rb985xf0b//2IX3x5Rf0179+RU8/9iCV8t/EJyTxfo1gD50r8wCVOitlFtvB28TEFFblAirBGiP6Pizw0Vhcxqx1l4WZ8emOte6S9L1XeD8j2Q4MjuDv7stX7Oms3hABTgJlX6n9hOdw/EWh/cw9V1ipvR1eGnVph58G1Gh40kA7YXZAbQZXHCptgDbFb6gSDqjp+jIjhc7bHk+c5PDQVoXDi2H2tgZUrFFCPfStKhxq2BuDKso/w3LoXg5ng1II1BOr9MdSGGyHQG1bDhkCR18HQx0HoJ0qjeeg0gw2VFqV9OzA78z09GPViuGDWirbqdM9pcwWFhJBSYlpFBMVR4nxyZSWmkGZmKqVkknR/JwPAz9RJpQ64VZQT2T40cGGyzcCCi0ww1o4PLRYDg15YV4eNdaV04tP3kQ3XLmVzl+xjO7cXUUPHKigx64foiVDzdTSUClJoShsRYnMFrnq2A569L7z9Mrzj9NPX3uefvTyc/TsEw/RrWevpW0bVssJBU8N74xRQ3hxUWepbJgKByt1ZTFFhgZLEih31kKTEkNUiNVUxXZgfRJlO9yBxpVPoEZPOu9v7HccoxAMwbON9OGroKeHL4PuL6PCMqtfLzqD46+sx+hbVDibl/L4BPsGhXaqtANqHJSxFNpqHUWY5XMdjUl6pNAq2U1TKyVNh0I7vLPYDQyqOBVaRglNQshfFEmhQI0h8EjLcqhaNFTa6aUTRtkOp582QMNTS6+Hth92kgigk/lE86OGhlpat2YhH/B0Vo0g2Qf+/sEMsFoaTFpKMS2LD6g5sIjMjGwB3svL14IbAhATEyc+FCUwWA6BWvtTUWydIAJmQF1aUEjBwWGyQugzj52l3779HO3fsZS9cwN1tlTR3I5SevS2bfTc/cfp6n0rabi/RRQVo5fJqWmUmprKnzONTzqcwEigWRQCsF+Def9FUGx8iqytgYZ7jOapmdoKbKgzEsitK3ooOzFMpmCZpLBIbIcBWn3nbLEdNtCoGhk7p4BW+x3jBMh10IODY2ZagXFMrYXPAzTUWqktP23W7ADQnsp+5NpAu3qYMYEeY+UkV6D1KOF4ez07Kdk5gDZLFxjLIUCjwuFW3bBGCflDW3ZDVzisfmhtPQL1iGGwrGUXa4UAzYF11KLQqCTNSgpsgRmJIayHVmyBWayHCmM7kDDC6qAzDqNdmbxFuyeSvgAGGwcuC0Dr6VlQL3NgsZV1obXHxEIrgDuSE8tCvmwDCIDhhBqPxU8b5RbIi2XunpdPoFQkrj6+if721b/TOz99gg7tXE6DvY30xA3D9PcPb6S//efD9OsXT9HBzfOkOamitJCtSzF1tdVJPVn1cORSTk4OFRWpWeqAFn0QxSWlAjUarhBqhgt8fAn1NRfQw9ctpbAgf4YxQcp2OCGLkRhqoFVymG8BnY47HKQy1Kjx655zW6X1utFR+g5ZfFU1UON4moVnBGp/fd8VYz/ckkSj1EqhJ/wThXbz0vbN6lVyY0p2psJhz/S2qxyISeyjrSqHJIW6Dxr1W6i0w27YCSGADpWEEFuXpFCHS08HZn47Kx56sAU16Uj4ag23jCBG21UOeGq1tYE2UON5KD/WYUZHWzhfmmf7BEht1c83iBVPNTUBagEaKq0n0OLgysKNmBmO4McFWOsOC9HgUs3QAAhcuksK1QicAC7rQ+vg56IjoyXrj2D/iXU5li7opN+8/QP6+9f/Th+88xSdv2obnTu2iF67ZzX96pld9Nxtq2jdog7au2mEdi/voKKUaCrPSaMFAy3UWF9BEWFs4by8KDo0hOrLCmTEsLBIrcaEET1M0UITUSmrcg6fwE3FSfTYyU46tLhIerZ9+UQu5s8uAyy4ryFuLKRvV4HvLKtKYSKxhhq3q0ATGEZnTf0fV0JZkRRrpUSp+xjKeioGatyBwbGAowHbRam91EKORqkdQLvD7KrQdqVDAW0GWFTZztFtxzHOodBOlQbQ4qOnqAZ/SQqnK6gFaFZpBbRdg0ZYJTsADZVG6c7YDoSU79SoYQiUGqOHDDi8WVhYvECtQB4DauOfNdTw0aqEp4GOV89jpKu7q0nWeisvL2aw4uSk9efLdSr75XQNdUaaUupszGrRcOfwwc0F3BrwfAE8TxQNyg11A9zFfDBQBgPcAjYUkKGJiYplvz2dvP1DpWkIjfEo211xYDV9/F9v0z8Y6s/++8f08iNX0ukja2jd8gEanIO1nVvpl6+epj+8fIjObaqm9V1FtKK3hlprS6gxK4bSwwMpMdSf0qMCqaGqUMpymG2iJgTgTgJFDFsc+Xp70XVr8unJE3WUGRcqV1XkEFmZ2TbQTpXGnbKg0lmwW8pLY7/AeqBlV6yHThBh83DVVLbDAO24S1YI1r1Tau28S5aCGiOIWqk10Pn5xZxQfiPQY9gOkxhatsMkhjbQ1rC3gdpRi0YYlVZQK6U2tmOWTgyddWgp25mRQkCNhAFzCzEEDoU2NWl4aa3UsB/BIcp64Iw31sMZgNo9STTWQ8GsSnn4Haz9kYee5lJ1kDF/Dt8bCo3LKcpT6axCCKgSIgtbqLa2JAI3LAiAztFga/XGYwAB5YbyAepiviJEhkfLPoRHRA8IutRkjiCr6LoV/XTr9bvokz+/S//423/SPz5/i/748/N0bFMfHdo0THu3LKHrjq2lH9zLvvrsIJ3eWk8jPTXU3lJNB5ZX0b6RbBqqSaChxgzqbqmQWjSaj1JSUnnfBvIx8RKxCg3woAcOVVBHaSwfhyDOA6aLMIWFRamTTwMtJTxtreSOs5I/2MmhKeFBpe1bJ+vldUWh7YXQBegQu/EMx1bWMNQDVmp1JXOrCuWlseSFAC0KPSbINtAulQ69EAqAhkL7+AVyQpFkWQ5ng789p9CtFm3dU8XMKTTVDt0TLQ1KgdKgZPVESz0aUIfpQZZQS6mdQItSO/y0y5C4HnTp7hkQqGOikRDqUp471HEK6mh0xbFCjwz30IY1w5Sbm807PFJq7ahDA+g0Plgm0jkyGGwEKh4qcrRqq20O4DaWhLei2ICagSjMZTBy8igkKFT2I+qrMQmpsn5cAat2c3OtLJswNNhGe7cvpLvO7qE/vPc6/eOvv6d/fPYm/eqVG+jpO3fQr16+lt586jg9dHol7VrRRj1NFdTZVEl9nQ3U11FL8zoq2G7kUldjCXU3l9G25S1UV5hKM6fPlAmxGEyaNnUKFaeGUm1eFF8ZQ+TYmWMI4GP45BbbhORQVFopNIA2Cq0sh2r2wronKjFUCi0L/2jLgeNiqXS4utus846zCmp1lyyVKOo18Lx1N55YDgtoh18eIwByZ1c3/eIXb9ELL7xIL770El1z7bX85aZTW3sXXXX1KQfQ2ke790ML0HYtWhaZ0Srt7OcwQKsEMYCOHLmczt98myrj+QSzjy2nRx553LIgArVlOxTQyk9rL41Fz6U+rcDGDvzDH/5DgAasgFrZD5UoWmBrpYZCQwX8AjgBzEBvdRxhOQEAHQygWXVSodICtgPuVBtsqDUCl94M+G1RbYba2BJZgSlPIM9IyyIfH7z/VJlWFRIZL5UHwIw1LTCosnn9oKwVjd5j9BzffO0WeuHxM/TJf/6Mlfod+senP6R/fPQy/eOPj9Nnb19Dj103l46vb6TLtw/S79++n373s9vonSe30a5FZXRiYwPdd2YVffzurXT+yBDlJASTrxdbwanTyXe2JwX4B0syJgvbaIuoQrUuYP29nOxcqXY4bYfx0rBiqtKhR1+1hzbjALLUBKodArRODrVKK+uh7pZlVNr9DlnGS0Oh7bLdGBC7BFuOoXkjdNVVVwvc6E244eyNtG7dBga6U4COjI5nw5+iKx1KpVEKwsGQfmgG2i8Qay4EcPKRLwuOG9uBHZObVyJ9suiJhvXw8MTKSQF0/emz9PXXX9OcviFR6eKSanrttR8J0OkZ+eSvrQceY5JsUnI2K0A6e8Jmfs9SBjqWKqsa2BNWuwCdmVlAra3dWoWVn05NyaHOzjl8IAoE7IwMVtGcYn4fJEjFtG3jQrYd+XxgkqRi483fJYV9IaBWSq0j2VZr+OvMNK3U2AJoeG0NuViTdNiVLIqOSqAZM9EbPE0AQgM8OvVQjqqrr5KJplhm68qjq+n86W10x7k9dNf5fXTnub1065mddCuD/f3vnqLf//JZ+uJPb9DfP/4x/f2PT9B/vnE1vfHYDvrTW6cZ8ofoH3+4nz5/6wS9/+Rqeud7G+jTd8/S3/74KH3ym9vp4WvmUl4CrF2A9MygCQxN/C73O5FLPAaVfGkK1Jo9dWREDH+XbLZK7MHFMnFuALhR9cnM4ZM3m7JlH+BE57wjJYP3UzqlYmpYYhol81UoiSFPiEumRI4E5iMxNoniYxIpnpPhGD6xoyPjJKIiYikqPIYi+EocGhJJwUERFBQQRsWc2E6cMAm8ahtxiRqxQa3UbNEqie3w8Hy65uprRNLHsfFetGgJ/3yKAeih99//gG6/7XZ68403aeXK1TSVL0snTpykZ59+lu6/5z567LEnyMvTl44cPkY//ekbdOdtd9AH779PLU1tFMBq9NBDD9ND9z1AP3ztNdq4fhOF+IdQWEA4hQeG07kbz9GNp2+g9997nzL5LG+ta6Kf/OjHlBQZSx/+7neUm8o7JjaBXn/1VRrkq8jNfKK9/fOf05MPPUB//MO/01NPPk3ff+xh+v17v+ZL9A7O9rPpq6++oh+++Dz96AfP0I9++ENqLMqnoc42+u27v6SXnniIPnz/tzS/p4MObd9Cf/qv/6bnnnmWT8AkvnrM5sCAkCdhSazwAD/qry2mgboSGm4so5GmMprPl+/5LeW0pL2CVnZX0ypOxNb319LGufW0aV4jbZrbQFsQ/BixqreWD2gqq2CINZUIEwdC+OQEzOghrq6ulLUusIbGsYPL6OYzO+iBO47Q4w+cpO89dJXMMn/gjsMM9146d+1WOnV0JZ09sZYeunkfvfzo1fT2C6fpwx/fQP/1i3P0l1/eSn9+52b640+vo9/+4Aj95JFd9L1bttDpw0to1bwmKi/KoXjU3/lEx/3PsThkOFsCuUd3uFrP2dzcB7kNwEZeNI5FbOo0D6otTKebtnbTrTt66JbtPXSeH9+yrYdu5Ti/pZtu3NjBSWonnV3fxslmC51a2UTXrGiiK5c20InFHEsa6PJF9XRsQR0dHaml/XOrac9AFW3rraTN3eW0uauc1neU0Zq2UlrdUkLLGoppUV0Rza8ppO7GOvL3nEUXYXx9Asck9k2IyRP5w02aSjPYUszkS8+sqTNo2eKl9Oorr9AuhuLIwcP029/8hhoqq2j+4Fy6i2EO9fGjOW3t9OxTTzE0efTuO7+kpJBwSgkNp6cee4yWz8PkyavoxL59lB8bQ0d27qCbr7uO1s0foZeefZaaGLS+qkr6Hb9vfXoKNWakUVNmGj1y5x107YG9dOf119BzDz9AO+f3029+8TNaUJFH//Xv/0arOKFZWV9Iv37zx3T5mvn0zH230d3XHKU1jYV076lj9PLjD9Dm9mI6t28tvf3q83SAd84Xn3xEh+dW0f7+cnr/Fz+ie46sobdf+h49fe4IXb+yhZ679ST95Ht30fdO76Wfv/A4pUdj5CqYVq8Yps6OJkpLz2CwfSk+JIBOr6ih2zc10T1bW+iBHW10/842eoDjod1t9Mi+Tnpsfyc9fqCLnj3RR69eP5+ePzlIz14+h164coBeunqQDi2skQ6+aeg2ZIuFTj0sEoMV+mEzUELDsgBYRwMW47qT61mR99DD9x6nJ797NT3z6LX09MOn6JF7L6e7GeCz12ymE4dW0M7Nw7KEAm72s2heGy2a28LRRIsGm2hebx31tlVRUy3q3mgqwuycTFnIHOtOyz3LM/XEBL5yYMYNVjcykEtVIjJBLB0Gu5DrTJ7iIWMQkydPo5G6LLqX98Wj/P0f2d9Fjx7opscO9Mj2ob1d9ODuTrprWyvdwfvsji2tdOeWFrp5QzPdtLaRzq/jWN9EN/Lj06sa6JpldXTlkjo6ubiWjs2voUNDnNAOVNLuvgrayoBvZLg3caxlwPtbGyjIi4FWME+yYJ7CME/jxGD6lGkCs8c0BfSTjz9Bfd291NPRSckxcRTgOVuAPnfDWQr39af2hkZ6nuGc09pGT/HvxgUGU2JwKF197Dgd3LGDTl95Je3fsoXyYmJo/+bNdMeNN9Lx3bvpjwzmT199ReLV7z9LzVlp1J7D2XdBNj1x711049EDtKC6iD549x2669RJAXphZb4AvbyxnBZX5tGv3vgRHV42j56482a65fh+WtVQSHeePEDP3nsLbe0ooTM7V9Nbr/6AtneW0yd/+k/aM6eMdvWW0U+efYTuP7mdPnznDfrje2/Th2//WOKVB26gx6/fQz9+6n5qK0iV5hg/vyC+xM6kyzhfwNUsyMuDTi6ooBtW1tJNq+volrX1dMv6Brp1fT3dvK6Bbl6LLcfaOrpzUyM9uLOV7tvaTN/dw8DvaqF7tzVRdQ7KgtEyvxATAFIyoMpFMsiBPgpMuMXa0ViqCysxYe2PO27aQw/eeYQeu/+kLGrzGCv0w3cfp3tvPUjnr98mlmTPtvmyuA08N/qisVAi3jObbQDW08O8xjjUhdkyAVrUoLEoDRYtR4MTtrA6mDKVzZ4Y65EAcJQO0Y2I1afggVGZwBxPJOmwkMiZvD296KqlVfT9ox303NFOeuZwBz3L8czhLnp8P5/o/P0f29dGTx7s4JO9g5461EFPHGinx/a20uP79GuHWAj2d9Aje9t4v7XQd1kg7tvWQufX1NN1S2voipEqumJ+FR2bV0lHhirpKG8XdjdRpJ8nXTRFK/L0yVDlaazKMxjk6eTJIHvNmEk+Mz1o9bLlfOk/Q0EMcchsbwrz9qEIH19aPG8e3XL2LMUEBFBfczO9+Nz3qSo7m95jpS3gBCqf4X35+edpDf/euVOn6NiObVSZlECX79xO950/RzuWLqQ3GOTe/EzqycugVR2NNLc4m+aV5dEChvbZB++h88cPCLSHls6lLz/7lN5762e0mlX5Pz74Le0caKbVDQX0u1+9RZevHKan77mF7mKQt7QV0wPXHKIXH7yV9vaU0vnd7Bdff4FVuZK++uwTOjZSR8d5J/zHb9+iuw4so7deeIyePX+cTi2uonPrW+l2vlQ+e+Me+vlzD1JnQZIsbzubkyQPT09ZdhaNNZ1FiXTHhnq6d2sjg8oqvbmB7tnSQHdtqqe7+fF9/Pz92/i1LfV0/9YGenR3s8TDO5voib3NdNfmerYbyTLXEEChDoxhZrSBQpnRzzw81CbLI+xmQE8eWUk3XL2Jbrlhh/hmAAzrcd9tB2UtEIB+85ntdP2V6+XGQ6LS/Lfzh9plHTv0SKPJCn0ZWGkfTUxoSsJjjAji/6JvA2VBfA4MfeN1fC4MtKBGjbUvkBdhriXmY6IEh5n2sCJIzpHII/nPiAun56/oo3fOzadf3DhMb54epLduGqFf3rKQfnnzInr75oX0zi2L6ec3zac3zgxJ/OzsMG/n0U+un0uvn+qnV6/qox9eO8g/D9Fr1wzQCyd66Zmj3fQwnxD3bOP9t6WRxaNBIL9xVR0t7Wui+GAvush7xizyn8UZrYcnA+tFwQxsOAMb6etHcQxqYlAg7Vi3ju5gADPCQyk7IoxyI8M5Imjz0iV07y03U3FsNC3v66XXX3iBqpMT2MMdp3d+9ia98fpr9OzDD1IHK+7dN5yma/btolZW4JO7ttMDN5+jjuw0evrBB+iXb/yE3vrha3Tf2etpqCiL5pfl0PLqfPrBQ/fQPVcdpg3NhbSppZieuftm+uCdn9Hm1mJ68rYz9O/vvUu//unr9PnHf6HrOGl78cHb6dHTR+gQ2wlsX/nubXRkoJxu37+a3v3Ri3RipJq+/PQj+oCtxr+9+3N6/yffp5t4Z9y3Zy795d/epQ/efIn+9ME79MKZTfTq7QfoN688TOs7iyknJ4u2b14gjT8pqanSsBQT4ifq8tqVvfTqlT0c/P2v4uDH2P74mjkcfFCu6uFtL71xag69eX0/vXntHHrrTD9bknbKz8sTeLBUFwKVDCSAUOa5/erWaquXY1XTebJEAKDGAjan2COfYbhvPLVF4qzEZlno5lp+7YrDK+jgnsXyd1jHDncJwCIwKPmhyR/TrXDCmKlaZs6heYxJAlgcR+6dArgZeNTARblZtbEUGu5mAHXHrG8MkGAOJm41AcX28gmihW1F9Ou7VtKHD6ylD+5dRe/fw4HtfavV9t7V9Ft+7jd3Lqd3b19K79y6ROLtWzh4+9bNDPy5hfQL3r554wL60XXz6OWrBum5y/voicM9bOs66NaNzXQKtmRxDS3qaaToAFbomIBABjeQwQ1mzxtK6WFhlB0ZSfnR0VQaH0uVifGiqtUc9WmJ1JiWRE3pidSelcpAst9NT6L61AS2CakMayo1Z6ay/02l7pJC9sVl1MBeuIE9cS1746qUJKrg9ynjKHW8L353sKKIhkqyaWF5Lq2sLaB1TUUMbglt4cB2O3ulHZ1lrLjldIA91P455XRiYSsdH6mnI4OVdJz91YnhKjrJl6Kr5lfTtexPzyytoxuW1tKNK+vo/Op6sQV3bmDl3M6XtaPz6Mn9uCR20/PHeujlK+bQT88upx+emkuvQR2u6afXr+6nxsJUmaXiy7Zq2nQPCvCeTckRAbS8JZt+fuMI/er8AnqXlee3dyyReP/OpfThPSvow3v5YN63kj64aym9f8difm45/f6+VfzzEomrOSnCkrxYywMN+VBPTKPCGh9YHw73FsQq+FjXYhVDjQrHdgZ015YRVuwR2r9rofjqQww6Vm06un+Z3BYOt4TDz1iebO/2+bRj0zxZOBFqjZWM8J64HyEWgME6dwOccGJmCxZrx0RZLDmARR0BN8DGCYaRRPR8KKhR+SmQVUoxUQAz5KHWWPcE967BsmuYCJwQn0I37eyj9+5dS797YD397sEN9AHH+/evk+c+eHAjvXf/evr1PWvp3btX06/uXEXv3rmafnn7KnrntmX0i/NL6WfnFkv85MaF9MPrR+i1a4fpxZMDrNRzOD/povvYq59j3339inpaxidrQggrtB9n74GsyoGe3hTi7ct+2I8ifAM4/CnaP4BiGfb4gCD2xEGUwNAnB4dQckgIgx9OyXwCJIaEUhafAFlR0ZQZGUWZUVGUwydDIVuOiqREqmSIa9NSJSqSU6gkOZmq+HFLbhZ15GVRf3EuDXDMLcllq5FL88vzxCMvYYVeWlNAq+qLaF1zMa3n2MCZ7eY2RClt5djRUUq7ustoN8ee3nI6yKAfZbhPDFfTqYW1dGpRDV3LZ++Z5XV008p6gfpWTjju2ACL0MxWoIUeZLgf4bP9yUPd7Ou66JlDPfTskW56mj3f99jjLWnMoWlTp7LtmMgecQrNYhtWlhZBt7IvfoUVA/HiFbhE4vEAb/nyeLJfnnuRk7+nj/byydNLTx3ro6dPDNJ9+3vpvn29VJSdyepXJvP6oM6YzwdlRnkOiyhiXWUsJWYCix7i1m5Y2RNwYsVQqC/WjsPtIzavmyvQYxmFrey5rRsT8c94HlUS/B0WaQTYalXUdmkxBdAIAbrTAI2b/qgTzVWlAbTy1rBKWH0U65iIt05MU8mlTiTLC/Ppnj09nAAP0avXjnAM06un5nFSPJd+cOUQPXdigJ48MkfiKYb06WN43EvfO9xLj+7vZu/cKUp8/852thlsNfhY3b6Jk8j1zSppXFpPxxfU0EFO8ke6mlihZ9NFHuyRvWbNJs+ZnjSbt3js4+FFvmw//Gf7MOy+FOjlS8HefhTi48/AB1IEJ0gxgSEUFxTKEcbeJYzVPYLSI6IZ7FgGOpbyYuOpMD5BRVwCFXGUJCRReVIyVaamsGKnUn16OieBGdTKl/Q2jnaGvCsvm/oKc2igCJDn0Uh5AS2sKqIlNUW0vK5EYkVtMYNeQmsaSxj0UonNbZzodVfQrh5W775KVvFKBpxjoIoOD1bRkbnVsj3IPvowP8bPR7EdrGY/Xc0JXg1ds7iOfXQdnWCFPzRUTes5oSxhu4R7721YM0SFWAOOvwcGhrITomiwsZRW99fR3JZyWtBaTj38uea3lVNHbQl18uPO+jKqLecrFRZ0aaqiub1NcuOcxSPd4kMBCy79SNwAM279hhthyu2MOaGDTcDdX+ezlwZ8zlgw3CbgQ8nljrG4BYZeZHzpwk6BVu4ouxCLjuNmnB2yrC1U2dwiGfcyxJQtmR0O+9Gslj8AyFjLw4CM9ZzRGAWY4aVzcgulrwRAYxXRFKh0iqqUyBS2FCyvpgZVuvm4PXmkn75/Aif6XI4Befzc5bAPAwxyn0AMgB/a00kPcjzAIN+/q5Pu3tZOd25hiDe3sr3gpHBdM51b20w3rIIqN9KVi+oZ5hra2VtJQ+2NKin0YngR3qzQvpgIyvD6cwR4+VEwAxzCAIf5BVJ4QDBFMsTRgaEUHxJBqZExlMaRHhFDGZEMcUw85TLE+XzACziKcWsFbDlKExIlKvi56pQUqmMfWsuBbUN6GjVlpLNdyaR2Vq1uVu3e/CzqK+DkkFV7uJShLsunxVWFtKqumJNABpljXXMJbWSIN3FsaS9jS1JOu3sqaQ/Hgf4qAfrwQDVvq+gQQw1wD3Ps558P807AYzy/ma3MCF8J+quLaai5gtpry6iltpz6uhplXTmM3M3GyRwSRrM8vKU5f7aXl9yHb+WyuWwDFrJSjtC61UPseXtoz45VtHB+D/vWPk7q2mnJogFatKBXFLiXVQQzrpGYAQYkXlhCC7YCd5UdMrCxSkM5sVopFpLBVt0NtlkWPuzvNc+3iKJjnWrUqvE67Ar+HmHshNwkU1ZJYuVFtCjv7AzjowGz8s8VKjEsU4mhAhrLjSkfjWUDADUqIBkYFYRSZ0Ct1SI96INGi2hYcITUpX9ydrEVPzqzmF6/fiG9zttXrl1A379iiJ46MkCPHphDD+/tpYf29tB3Oe7f0cHK3E53bW3jJLqN7pBoZ5VuZ8Db6Pz6Njq7uoV9dCN76GaKDWTLEcAHK5DBDWZoQ1h5w/yDKELgDaVoVt/YkHCKZ/VNDo8WiDNj4ig3PpHyWW3z45MY3GS2ESlUwaCW87YqNY3qMjKokQFt4oD6duVnc+RQT0EO9bHy9hfmMrBqCyXuL8qhwWK2GhUFtKy2iBW4iMEt5kSQ1bepmNY2FNEmBnhnJ1SYvXRXKYNZzlHBvrqUtrWXis8Wr92On/l3GNRdXeW0B6rNsZdB39peTmv5PQH9Jv6d7ppSKi8pYh+YyXB0sAqPsJdsZiC7afumhTLp1JNPbsyDc94+bRYn0FhRCUtzYb27LP6e2KanZ1ARX2bj4hIpITGFQsLQrx0hPdToZ/b0xv2q+crH+xVQYOEVzC5ZNNJFu7bOp8N7logXPoxpVjsWsW2YJ1YBy/ECeiiuZT9kid5u2cKK4MacuB2EeR23jINa4zZyUHKo8zCfMFiyC1cAlPTwnCj+kHqM56Dg5nbKuGLI0rs9TZYdQWAmORTdeH8oOewI1BuKjXVQMKFZuvOmetDSjmL64emF9JMbFtErp2A7RtiGsPW4aoievwJKreKpowP0+AEGenc3w9xJd4k6t9NtDO9tG1rp3JpmOrOyia5jgK9YUEfH59fRseFaOjxUQwtYLKL82HIE+QVQiL9WYLYQiGhWo9jQcIpjkJPCoyiFrUQaW4mM6DjKZiXOYxtRwGpbxFEqMKeyjUij6rR0qs8EyFnUxGrbnJ1FrbkMM8Pbw+D2MbSDJQU0WFpAQ4iyAvbN6vEwb0c4FjDUiyoL2T8X03K+bAvgdUVKndlmrGebsYHh3sReehM8NcfWVuWpt3Hs7IBaK8C3tSOZ5Oc6EWX8Wint7iqT5xvxeea0yeqdwaFRVFVeTEVFBQIilsNCREQlUEtLnaweikmyQcG4lZovjZ80jcFEU5Ver3iah/Q4SHvs9Nk0YeI0mXqGdT2kvwWBBVjYg6PfIIRFAgcfpTJJBNl24D6E61cPyAqmxxjqo5zY4V7bWCcPsKobzQNMFSjHyXYe7n/YIQpvbkbvtCaAFAADZMBqQsFrW5ChgVZ1ZYDi6yuBud+gug1yg9gihLFJslQwVuXHBFr+PlgdCgvJoNcCXYKyZDJHYlQkPbSvm35wRR89e6yXnj0+h75/eT/DPCDbJzlveXRfF3vlTrplXQtdv5wtxbIGOrUEdWdO7Dnpu2kVHtfSMbaHu9hi7OUr7e7eClrHArWE2ehrrqdgDKwA6GAGOoSVOTwwmKKCQznCKAbKHBZBiRFRlMQBdc5gbwyFzmZrkRsXTwWs0kXsiUs4ytk+AOiadBX1UGmGGslfO/viHoZ6joa6ryiP5pbm0zD7yyH2yCMVyicvri4SgFcztGvZF69pKqW1TWwt+EM7Yyur61ZRZaXOuxjSPazce7vL6QCSwzms3j1ltI+fO8xKfmywQrZH+svpxFAl+3CMkGXRsqVDNDjQIRNDsRgjOuuw3hxW/MGSXrhz6iwGOCYmlqI46Q3j/TEFC85gQvBlE2WQRXrCzRoll47n5yarNgL0jGOhlUvH0USG+dJLLyPPadPoMt6mJsSL50SVAFUNgIwbXWKU7+rL19J1V6yjq46vltIb1odDIihKrGPl0l4JKLQKpeCmgmECiq08tnoeryuf3SW+Gs8txGvw2OakmKcqIOrkcao2bk+nrJAA34ObIanb00Gli4tLZIQTq0Zh4XmBepYvYQUqH7ayh4cr6RxDeXZlHSfqnLRzsn7tEhXX8ePrltTSyfm1YhW3siht4OO/Dsce4tVazMe5mI8zBAp5EwdzsLy+WMSxNS+XWmtryHvmDLoIIIcGAOYQpc7BSp0Bc1J4JCWzOqdERlMGK3QWw5wjICdSMUNcmgyQU6iafXB9lgIY0ZzDIMNqcHLXC4g5uRuQyKe57IdH2A8vqC6k+bxdxBCvgi9uUh9yM9uCzQzsFvbG2ztRwSinvXwm7mN7gS8ryV4/vDI/x88fGaiQst2xoSq6fF4VXYHS3UgVnZhXSdcswM5S1Q7stDPLaulGPtsX1ebwJTFUfGFvT7usubFsyVxZPaiYLUBuAZag5asKX8amzZipZ+uYSQ7j2IJc5mitvUQsCV7HDGaAe9ll42j8OAZ5/ASaNGECTZs8maZzeE6fRrMY6qSEBIqJT5EGdqgapkKhXAa4AOqa5X1sHbpFQQUavrxjnTrxt/WqZo0t1BG2CPVizCHEoIgKvdqR2XLgf1iLx+ipV0j4sMI/yodmAAVrcuC+4LiRKAK+GauS4jFUWEWBNdCCEUT0a+MGp4EhsXI3AMxAQpsw+rlxlZoxfRbv8zzaxVdKXDFxdd3QoipXVgWLw4jUOha0JczHSFme2FGMGrfnwL5msDBm0dySHKmMDbAo9jNT3SyQ7XW15DNrJgPNMIex3YgIYqCDYTfCGegIBjpSlDkFyV+0shuZrMw5qFpAldlqlLIql7PVqOKkroYVuY69ZAOAZlVuYavRzr4Z/6yPrURfqYl8GmRlnlvBwdtFbC2WNfDZxrGmhc/M9grayLGBwd7E261dFbS9u5IvM1UMNSd1/dW0e04V7YAvRsKH5E7HQY6j7KdMXD5cQ1cuUGf+ifk1dPViVoel9bSWz3gfnwDyCwxnWxHHUKXJge3pbhKLgUmieVhpn79Xuaw+GkJe3j6izn6esyk7OpTKkqKoITOOOvOTaF5lBi2ty2Z/nstJZgHt7Cnmz1nKn6mMjs7jK8NQOR0fLufPU8GJaDkNNPIlmk+ayGh162YMe6NCgNsLAyoFV4kMPatKQq6Ag4Yl+G7zWK1omiXrVMclYkg6Q5Yfw3K12KrHvI1XzyHQKxIdlybLlUXFpvJnSJH/jxVBsS5fWGQShWDiKlo60Xwfbb8mP0fqbRQ/h1HC0Lj/p70zD7OiOPewf9773Pskf9ybe29ioonGNSq4IIIgCiibgiASUHBXQEUWd0QWZV8EV7ZhhmVg2EEQFVFQUQkI0URRI1FEgiQCMwyLrPrdemuoSXPOsGgOcE75e5/ne845fXqprn67urqruts/q44jG3eOcNMGj7f9t3//6b67l35qP3HVsCpnnuEKqEvdibsrpFq56t/vywqsR1w83LzsxJ4T/S6EOzJTlbjPVSfvcedSd7vo4KJdfSf5FTX2FYQ13e9LfNzhCsVWjRv57ghO6BPtJFc6n0z92R1iT//NKfY7V28+24lcyZXK5zqRz3P15vPPONsuPPMcq3ZWJbv4nMpWs9K5dum551vt8y6wuhdUsXpO5vouGl1U1Zq40o1oenF1+72TuGXtmtbKRes6l/igEaWNi5vr1bK2jS6zu66qbR2a1LHOTeta52Z1rZP77Hh1Hbv/2svt0evrW9eW9VxcYd2d0D1b17dHW9W37teVfe/losd1RD17rE0D63tTQ+t7Y0Pr3aa+9bnBHcJubODkamCPM66b14PNL3dHh0vtLHfk4R65//rZL/zNuMjNa9aquHU4/Yyz3OeF7pD5P/7Kxv+6E7qfu5PmU359gvV2dbiJ7iRlRrdrbWZ3d/LSvYXN7tHC5vRsYdMfaWpFDzaxqS7Gdb7SHxGG3VrPV4fuveoSf239+ppVrdZF1XypSr21Q/vrrH3bVq6O29xuvKG5q9fzGrgm7lDeyD+xqXad2v5IQilZjVKzJm9kdfX9WmVXHni3eFnJmoyyt7b6oH/GJfTRKAtf8u4rgf0NsftKXBpLLqp+sb9hNgRP9Azfq1xU3VfNeIMuOxnVJZ7Iz+XH8FRVeuX5twO4qhsPpuSmZm4yphP+z10Bcr+rNjzuqoO0G3R3R95e7gj7qDvSdudo6wqn7q6QQuyuzes4yd2RulkdJ3Zt69zEReParsCo48S+zBeA7RsSlzqhL7U7XKHYijr0z4LQv3RC/4q6M6WzE9qdnZ918mmu/vxPqS9wG/kiV2eu4WWubLXcieBlrnSu6+rLdd3ZfT13MtjQVTMaV7/Imrr68jU1qzuJa1hrVz9u7erJ1++LNnVpFXSls6szI/Pdjctk7tgUkfms4z/vb3GFPexEfdTJ2N2J2qNNQ3sMUW+50vq4GNS2iQ1q18QGtm1s/W9rbIPd7yfaX23D7mrq4+kO19iILi0s74GWNrzztTbszmbW79ar3Q5ypT1wbQO7tX5tt/Oeav/t6sgErYG8BPP/jueWrxPsF+6TDcM7+P7jP3/iX1XcwZ2tvzjgZnuh/4328qCbbf7Am+yVITfbvL6tbWbPlv6SUl7HxjbsjgZ+w7R163iT25Fb1qhuzaq5HdyJfFVVV7Jy84ArITnUU1flecpDB3SyvGcetoIR3WzU0w+53x39i3doFOlyT2tXj+ZNWmXRyb9Vi3cAuro10d7VqV09m7o2n2VXQKhXtyivY/PJySVBfZurIe1cXZp3ClLPJkIdmpPNspPJf9ahy04eE/XoVk3cCWPjfc/Tq++rM/4dKlWq+ddOnHjSmf6uEh7VxZ0uPISnbcMa9ghXqVx0dSXzQ1yR4iSdOrOrYlLl5DLsQ07mrq5q4sW+to4/n+rkPOEofhciN7jMSexEdgViuwa1fD63vMqV0Ajd5xenWN/jT7V+x59m/X91ug1wMfCEM2zQCWfakBNd/Pp39oSLob85y4addLY9efLZ9vTJ59gzv61kz51SyZ518dyplW3EaefaqEvq2chnR1ne8NE2ZsRoyx+ZZwUuxo7Ks/Gjx9j4vDE2wX1OcJ8Tx+RbUUGBTRlbYFPHjbUZE8bZjMJxNtPF7EnjbU7RBJs7udBF2ee8KYX28vSJ9tK0spg/Y5K9MnOSLZhVZAtmFtmrsyb7WLDvc+HzU+zNedPtjXnTbNGcqW6cyTZ/epGbR5Gb1yQ3/4lWMCrfevcbaj16Dy6LPkNclH127z3Ievrf7vvjA23wkGG2eN5UW/HaLB/LX51p774y3ZbNL4u3Xphsi2ZNsvnTJviOVwXD82zMc3k2biQxxsa6KBg+xn3PtyHDRlifQc/awGEj7Sk3bGTBeJtQVGTTZ023OfNm2wsvPW/Pz51lM2bNsCnTp1rR1MlWOHmyTZyc/Czy00yYVPZZSIRh+2L8pEn7xbiJLgr3fU6caGMLy6JgwkTLH19o+XxOKPTfx+yL/HHuc1/kjZtgo8e6KCiLkfnjbXjeOHtmZIENfTbPBj450voOfs569X/Suvd5wro9Nsge7tHfHure17r1GmCFo/NsekG+Tc3Pt2n7Pqe4mDxmjBU5JyaNJvJtUh7D9kV+gft0jjhXitzvwlEuD0c4p0aU5W34fc/dHayyqwoft+n4cyxjUf86+3qbKRRHPQY+8ZTVa3iVHbf11k6Wseg1xEp3mkJx1GPw0KesQSMntAkRAU899ZRddZWEFpEgoUVUSGgRFRJaRIWEFlEhoUVUSGgRFRJaRIWEFlEhoUVUZFToDz/80KZMmeK/f/vttzZy5Ej77LPP/O9ly5bZ7NmzbfTo0damTZvkZAflu+++K/8+fvx4+/vf/574N/u57777rGvXrvsN++KLL+ziiy+2tWvXfu/8yBQ/dLn/+Mc/7LnnnrP777/fxo0bZ3v37k0d5ZiSUaFXrFhhF1xwgX9ULXJXqlTJnnjiCf9fp06drF+/fj4jb7jhBtuyZYutW7duv+nXr19vf/vb38p///nPf7Ybb7yx/HezZs1s1apV/vvXX39tX3755X7CH4ySkhIv0OHChtu+fXvqYNu8eXN5uouLi9N2MKYjAkHojRs3+vGBnZ11I+2pYpHOZB6ksmPHDr9DHM56M87q1av9NCyT77t27fL/heWyHQ61DsnhbFe246xZs6xOnTr24osvpo52TMmo0Lt377Zq1arZu+++6/fe5s2b2/XXX+8zlpVftGiRz8jLL7/cLxT5n3nmGT9tXl6eNW7c2P/30EMPWWlpqTVq1Mi/W495IvKTTz7pN8Czzz7rHyCI4H379i1f/ltvvWXnnXeelx0xqlSpYm+88YYv2ZlHrVq1rH379j6dLPfmm2/20/F/q1at/Hc+WT7zYT0CpJv1ufLKK/1/HTp0sAYNGvj0zZw504/z2GOPWfXq1X2w0QGhWVfGvfDCC+0Pf/iD/fWvf/U7OztkUugJEyb4fGratKmfPxIGWI+GDRva1Vdf7delS5cufvg999xjvXr18t8feeQRvzw4//zz7ZZbbvH5VLduXbv11lv9+pMWpA7bgfkx7tSpU/10vXv39mklhgwZ4odVlCdfffWV1a5d215//XX/O1vIqNDQtm1bn1mIM2PGDKtataq99957fsMjGf+REZQaHLpatGjhp0NUMotqCuOyMYcPH75fCR24++67vQSffPKJlzPANAhXVFTkqzdsMI4WvI/v5Zdftq1bt/rv7FgHE5p1oERNCkW6kQ0ZevTo4Xc+DreIxdGHqhWS/uUvf/Hp4vvnn3/uBUMsYDyiIqFZD9KG1JTe5Nuf/vSn8uUjNNMg0oIFC8rz6GBCT5w40R/1mG7u3Ln26aef+u+kj+XWq1fPL5cCgsKB9PL/a6+9Zq+++qpfBtslNU8oMNhJKLSyjYwLPWbMGLvzzjutRo0aPjMRslu3buXCkJGtW7f23ydPnmzXXHONlwQRO3bsaAMHDvSZiiwHEppDMiJRYjBOkvz8fD8NG2Do0KG2adMmP78gB6Xc9OnT9xOao0NS6LFjx5bPL5BMN9WoO+64w39HJqRavny5X862bdv8jsN3hiHYAw884McdPHiwLykrEjqkk7RTOhMff/xx+fIRGuFh6dKl5XnEsnv27OmHs5yk0Byx2KEZ949//KOvMvD9o48+8su97rrr/LjIzs4a1oHtF9KAxKl5wvSsSzaScaERh4znsAlPP/20P0QOGjTI/04eYoPQ7PFkJPUxEhQ2VkFBgRedEp6SIsAJJvVBDvGpJzaIwSGfNFBqUt1hHgMGDPClDjsB9UBKFzYi9X7q9EmhKyp5kumuSGjqx6GEpcSnhGUYgnH4Js2Ugo8//niFQpNOqlgc5lk3BE6ecPGbfISk0NTPSTPrUb9+/f2Efvvttw8qNGlcvHix3XXXXX5HI+9YB7YLpTXVI0jNE6p/lOrZSMaF3rNnj917771+w8LKlSv9YTaUkK+88oovOYHMRDRgj6e+zXScQXNo4+Tr9ttv98KtWbOmbAEOSldKl9tuu82WLFlSPjyAYMmSnUMspQ7zCXVFNh4lEOOxsUJ9kc+FCxeWTxtIpvv555/31SVg4yMHUCJSvSDefPNNP4ydkiMAOwDL27Bhgz9ykSd8T84XUUg7AnEESgrNTvjggw/671QdmJ48YhrygflTirI8YBtQwnP0C1UiTmj5zskxyyUfO3fu7GUmj4D8ZF7kbyiFU/OEcahSHs6J6dEm40IfS7gqQalCyTtnzpzUv8WPgKiE5jBJyUI1J3lCJ348RCW0EBJaRIWEFlEhoUVUSGgRFRJaREXGhaYXFv0x6A/AhffCwkLfb+NIQCtYsi/HgaCjUxJa0OhzkQmSLZgHI3SrzWZCo0yAFklaLY/kNsw0GRe6f//+vnWKFrnQCoZ4tHqFnmZABtHiREsiIB0th6HFimZjWt7o0JSE8RGS8Zk3HaDob0AXSKYP3R7ZEIyLuPQUS/YKe+mll3wHJebPfGiRDNLToha6WAKtcmxYrmsjL/1IWD6tbawXHYJoRaNRJzXNIQ007TOf0IWT+YUdinxgfszjgw8+8MOYPnTpZH34TbB+dE4K6QotdWHetKbSwYu+JBDSS5poGWWZNJEH2BYsO8hKqy3dDGiVBNIQ8rmibZiNZFzo0JRN0++8efPKM4PGDvozjBgxwm9kmn9pDud/JGJHYDjDGJ8+EmTso48+Wt5Iwv90fmIcNjTdSemjwAZhGH0UGB/on0DfDQSg806y7zVC0x8DgRif5dMzDeg+GUA8msXfeecdn27SQ7M809ERCIkRGmmQJzXNIQ00ObN+O3fu9B2cSCvdS+nLEdafvi7hZgjmm2x2Zofo3r27Xy6dt1ge09PNAEIhQtcBCgnyD0gL6WM6OmuxE7M+SIyY5CUC078EaPJmh6BEZlz61tDz70DbMBvJuND0IWDF6ZNBhofMaNeune/zwAai5CZDkAgJKDXofMN/9PhigzMfxqd0DR3j2dAkmB519GrjEBlKLDKffhVIBMl+0qk9wxCaHQFIH6UQUrCTsZEDTEd/B9LBdwShWyqwjogallNRmpNpCEKHHZ48IA1Uzzh6ICrzC5AuSlqGM296xMH777/vvyeF5jtChz7YgWR6+/Tp4z/Jd/qisD7kIbAz8T2klwKCdKYKnboNs5GMCx02WCBkBj3jwqGNQ1fo8oj44TDIIZSupohF6RvGTSXsDEzL3Rsc/hGP6UPH92Q6kCkJQr/wwgv+OyUfy2AjU1IlS3J2EAQC5EGQIFYQGlGYvqI0p6YBocPOFYRmfpSWqXfHUKqSHkpTDv1sKEBQdnrylZ2GnZEedgiduuMm0xtkD0JTJQwdxsIRhe67rCedmsjbVKFTt2E2knGhw90bAToJkdmIgnR0O6RU5aSR0omTJQ61CMbeT0d8oMrC+Ml+uEzHOKNGjSrvtYZY1EsZTsmNhJBMB/VTpgkgEmJw6AxdJBEqlO4BTjjpCkqaSU+oowLVKaZBGtKJXKlpTqaBuj7zCyUmOwrrTU88hEHGIF+AakIQh3mT3jA9ecG6k38Iiojhv0AyvSwfqOZQlSItSEt/8lB3ZxzSTl4iMAUNBcaBtmE2Qp5kVOhchJKduieSHk1YLqUesFOGnY7hHHXY4cX3g7t5uK3sRy00J5OUbseify+HfapPHN7D1RWOPJMmTcqZS2XZRDhS/aiFFvFxxITmcla4jHSsoQTmEpiInyMmNFcUkncvH0uSVxlE3GRMaM66OVPmjJySGaE5ueF3aK3jUhD35HEFgbNtrjrQZM4ZdxiHnYDfqbdSMX8aBzjT5topJ3PhATLhqsK0adP8OFxTpnWNM1+WidBcK2Y4jQeU2Fz24qye4LovaSHN4Z5IkZtkTGhuuuRSE9c7ETZ5zZfrqlzv5NovcOmK66EVjROeNYGY4WlJwE2eVPy5HMV0SMxJHYTrviENiM1lQOZHCyBCc6MqMJxrvLQYcj2Z1jd2OoZzQiZym4wJHVqbuEaLYEgXGif4j1I1PNKAEpEqQOo4DOdubK7REsnGjtBIgsSU6kmhQ+NBGAc5w3xpcUPo8B8lNmfDNGGH5VCaJ6cRuUvGhOaxA7T30yxN9SFZhw6yUwojDYd+LvJXNA4tibSI8X/ypDKUwkFoOt5QxWGZNEQkx6lIaPo7IDMlMw0bNMQgNsunIUJCx0HGhA49tkLnFToRhZ5sqT3MQq+tisZBPjoFIXXyDm56lgFXT0JrFctDSO76To7DfEP/iGSPNFoHw7hAax87BuMmpxG5S0aFFuJYkzGhK3oMqxBHm4wJLUQ2IKFFVEhoERUZEZrGjJ27dikUPzgydeNARoTeWFxiGzZuzKpYvWatbdhUbNu2bVfkQOBQJsiY0FwfzqZYs3adzyiRG0joQ4SEzi0k9CFCQucWEvoQIaFzCwl9iJDQuUW0QtNZieA7j7Hi1qnUcQ4nUoXmBtSVK//51B86K4XHjwGXjcILihjOLf4Ej+LiJlZu7We+AXoCJpv7w0NxgA5QyU5QdLziMQJARyl69aU+6uzHTjRC0x00fOduFDrpIwMy8VYpHoLCndGp0x0qkkKHx4LRZZQ7XxCbPtR0Y+WZGOxADz/8cPkbrLgbhi6wvGiTLqd88pu0BOiMxXM1Qv/v8GwPbkDgoSf8x3fSTpdaurGyXLqvcss9d9AczgMnfyxEIzTPVeOTO0d4ISZ3stCxH7l5zhoPlgnjfJ9ICs3jxgjgaUF0OeXhNDz0hoesIDpPPwqPMQuEZ2fwSQnL69W4fQtR6YuNtIHwRCiesUFJTwnMDQ08EYp5soPy2IIwT9YzPOhFRCA0fZF5fFflypX9J7ditWzZ0j/kkHfhcUcLfZUZN7z0/vtEUmj6ObMM7lXkCMBTgRAQ4eh7TWlNlYISmrfNAsueP3++/87OxQ6AjFQ1uPuF6kZFQnPbGOIzb/7neXfsBJTO3JoW3o3IThruuBERCB0ilL4IxV0rfOfhgNwahVDcCMuhPnW6Q0VqHRqpKJm5SZZqBzfFUl3gPkdKW57rRl03PM6Lkjw0xyIlIDKlM6U5VQheJRcejxCEBurJ3FXDDQVITZWHHYTqB1DVoBqTPBr82IlGaO5gCd95BCz3+nHo5xDPW2B5YX04Ifs+kSo0MjFfJA3PPuYowHIQm7otJSfTUs1JPh6MHQuJw6N3gVI/eWd6eLYecLNteF4dz7BmOUzPHTucPLKs5AmpiEjoIxWpQovsRkIfIiR0biGhDxESOreQ0IcICZ1bSOhDhITOLbJO6OIsiy++XGslm0vT7oxQZGdkldC7du/2paFC8UMDhzJBRoQWIluQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6goF5qnzvOgbx7E/d577/kn3PMOEN59wlughMgFvNC8L4Qn6fMSnYqCN0Dx7pDwigYhspXjPv300zSBDxS8X0SltchmjkuV9lCxfPlyXz0RIhs5pNBUNxYuXLjfsNWrV6fOR4is4KBC87JKXnfGq9WSwxcvXqxSWmQlBxQamXl1Ge/bpu6c+j+vKxMi26hQ6CAzL6s80EnjZ599ljovIY45aUIfjsyEXhwpspH9hOYE8HBkJvhfiGxjP6E5+fvWnezxzutUgVNj/fr1qfMS4phTLjRXLtatW+ebvFPlTY1FixbZzp07U+clxDGnXGheEJ96vflA8eGHH6bOR4isIO2k8FDx5ptv2o4dO1LnI0RWcNzSpUvTpD1QcNLIdWkhspXj9uzZ47uJpsqbGkuWLLHS0tLU6YXIKsr7Q5eUlPi6MSeH1KUJSmROEr/66is1dYucoMI7Vnbv3u27iXI9WohcokKhhchVJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iQ0CIqJLSICgktokJCi6iITuhv166zXbNftB1P59k3Q4YrKgjyhjwir2IjGqH3fvCRbbmunW36VWXbdPw5isMJl1fkGXkXC1EIvXNskRX/5vz0DaY4rCDvyMMYyHmhdxZOs02/rJS2kRTfM1wekpe5Tk4L/e1nX1jxby9M3ziKHxTkJXmay+S00Ns6PpK2URT/WpCnuUzOCv3dNzus+JSqaRvkaETJBZfbtgd62Zbmt6T9d7DY8vvb04ZlW5Cn5G2ukrNC71n+ftrGOBpRfOpFtuul12xznWtsx1N5tqVFmaSbL2lsxb+r6b+XnHOpba7W0IrPrOFj16wX3X81bMs1N1vxSVWs+Kyatrl2M9t0wrlWfFo1Kz75Qn9ixrh++qr1raTSZWnLPlpB3uYqOSv07ldeT9sQRyMolbd37eO/I3fJ+XXtm4HP2PYeA23XzBe8yHuWrrDtD/e23QsXe/H3vLPMNtdtbjsnTrfSxm1s9+tv2/aeg/z14G1duvuSu9T9/02/J21ru/vsm2EjbdfU523zxY3Sln80grzNVXJXaCdL6oY4GoF82x58vOz3ia6EPbmK7Zwy2/8udSXw9od6267pc/1vSmY+dxZOL/vcJ/T27gPK/p/9YprQu1961XY8V+CEnmNbb+mYtvyjEeRtrpKzQu/9ZFXahjgaUXzWJbZrzsuuinCBL6m33tbZdrrSlOrG9m79bMv17f4p9OwyoXdNnuU/KxJ6a/v7bWvb+2xL6zu90DtGF/pSnZKeqkvq8o9GkLe5Ss4Kbd9+6+uaqRvjaERpw1a2Y8Q4X7py/ZZqx44nR9u2e3v4/7fe2qns8/Yu/nPbnQ/6FrmtN3WwkipXWOmV15f/T7Vlh6tibO81yEqb3mTFp1e3bwY8bd/0Gerr1qnLPtJBnpK3uUruCu3Y8dTotA2i+NeCPM1lclro77Zvt801r0rbKIofFuQleZrL5LTQsPfjT63k7FppG0fx/YI8JC9znZwXGvau+txKL2+etpEUhxfkHXkYA1EI7dm923ZOmmmlTW6w4hPPS9toiv2DPCKvyDPyLhbiEToB9cC9qz6zvSs/UVQULm9yva58IKIUWvx4kdAiKiS0iAoJLaJCQouokNAiKiS0iAoJLaJCQouokNAiKiS0iIrjtmzZYgpFLCGhFVGFhFZEFRJaEVVIaEVUIaEVUYWEVkQVWSn0smXLrLi42EpKSmzp0qV+2KpVq2z16tVp42ZzkP4FCxbY+PHjbezYsT5mzpxpa9euTRs3l4L1Wrx4cdrwbIisFHry5Mm2fv16H4WFhX7YkiVLbPny5WnjZnMgM7Fx40bbvHmzF2HlypWWn59vpaWlaePnQrAOU6dOtbfeeivtv2wICX0Eg5IZmVOHs365WEpnu8yEhD6CQRWDkjl1+LRp0+yLL75IG57tMWfOHJs/f37a8GwKCX0EA6Ep1VKHU8rlotBr1qyxMWPGZPW5jIQ+gsEJIHXm5LBNmzZZXl6eP+lNHT8XItulzkqh586da19//bVt2LDBZs+e7YetWLHCPvjgg7RxszmoJ3MCyA5KNYOSGZnffffdtHFzKZB6ypQpacOzIbJS6JiCqxmITRWDyNWSOVdCQiuiCgmtiCoktCKqkNCKqEJCK6IKCa2IKv4fhjspRZUUn3QAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.title}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${vaccineCalendar.description}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 127300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify the user can Add Vaccine Information",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;verify-the-user-can-add-vaccine-information",
        "after": [
          {
            "result": {
              "duration": 46000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2499219700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8243721600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c2972a1f-08d9-45e5-92a4-b973c0f8dd1a\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Add more\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.clickAddMoreBtn(PulseHealthScreen.java:243)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.VaccineCalendarSteps.clickAddMoreBtn(VaccineCalendarSteps.java:42)\r\n\tat ✽.When I click on Add more button in Vaccine Calendar screen(features/my/health/FamilyVaccineCalendar.feature:39)\r\n",
              "status": "failed"
            },
            "line": 39,
            "name": "I click on Add more button in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.clickAddMoreBtn()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.addMore.Title}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.relation}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.name}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.dob}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.cancelButton}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.saveButton}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "relation",
                  "Child"
                ],
                "line": 49
              },
              {
                "cells": [
                  "name",
                  "testing_one"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I add following information in Vaccine Calendar add information screen",
            "match": {
              "location": "VaccineCalendarSteps.enterAddInformationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Relation",
                  "${relation}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Name",
                  "${name}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 54,
            "name": "I click on \"${vaccineCalendar.addMore.saveButton}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.addMore.saveButton}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 128400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 57,
        "name": "Verify the added item displayed on the Vaccine Schedule screen",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;verify-the-added-item-displayed-on-the-vaccine-schedule-screen",
        "after": [
          {
            "result": {
              "duration": 36800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 2749833600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000159800,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 557320400,
              "status": "passed"
            },
            "line": 59,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${relation}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${name}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 335722500,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on \"${name}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${name}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 280220900,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on \"${vaccineCalendar.continue.button}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.continue.button}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000356700,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25321080800,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tSelect Child is present as expected expected [true] but found [false],\n\tVaccine is present as expected expected [true] but found [false],\n\tNext vaccine due is present as expected expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.VaccineCalendarSteps.verifyVaccineCalText(VaccineCalendarSteps.java:37)\r\n\tat ✽.Then User verifies following texts are displayed in Vaccine Calendar screen(features/my/health/FamilyVaccineCalendar.feature:65)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 65,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.select.child.text}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${name}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${vaccine.text}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${next.vaccine.due.text}"
                ],
                "line": 69
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can manage events via the Family Vaccine Vaccine Calendar feature",
    "description": "",
    "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature",
    "keyword": "Feature",
    "uri": "features/my/health/FamilyVaccineCalendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@familyVaccineVaccine_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 98700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-safe-covid-19-cover-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 162500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 1293346300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:93)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6010300,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 241600,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17014713100,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001377400,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12879610000,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000350000,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11732996500,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000671200,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7594314000,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999770500,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7431958700,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 375918000,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30435979400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999822300,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 75658414700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e17182af-ff02-4463-be73-c1c002bc513b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027SKIP\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1070)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:374)\r\n\tat ✽.Then I click skip button(features/my/home/prushopee/PruCovid19Protection.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 26,
            "value": "#    And I click the Account icon in Home screen"
          },
          {
            "line": 27,
            "value": "#    And I click the sign out from pulse app"
          },
          {
            "line": 28,
            "value": "#    Then I wait for 4 sec"
          },
          {
            "line": 29,
            "value": "#    When user enters password credentials in sigin screen"
          },
          {
            "line": 30,
            "value": "#      | Password | Pas$1234 |"
          },
          {
            "line": 31,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 32,
            "value": "#    Then I wait for 8 sec"
          },
          {
            "line": 33,
            "value": "#    Then user should be landed to \"Home\" screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 245900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to see the PRU Shoppe screen",
        "description": "",
        "id": "verify-pru-safe-covid-19-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-pru-shoppe-screen",
        "after": [
          {
            "result": {
              "duration": 49400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3151966900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9191123900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e17182af-ff02-4463-be73-c1c002bc513b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Shoppe\u0027]/parent::android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PruShoppeScreen.clickOnPruShoppeIConOnHomePage(PruShoppeScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.PruShoppeSteps.navigateToPruShoppeHomePage(PruShoppeSteps.java:40)\r\n\tat ✽.And I click on pru shoppe button on the home page(features/my/home/prushopee/PruCovid19Protection.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pru.shoppe.my.receiving.service.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${pru.shopee.privicy.policy.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${pru.shopee.term.conditions.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 41,
            "name": "I verify the following texts \"Pru Shopee Screen\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Pru Shopee Screen",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.cancelButton}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${prushoppe.proceed.txt}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 117200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 16400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 45,
        "name": "Verify User should be able to see the PRUSafe COVIDCover screen options",
        "description": "",
        "id": "verify-pru-safe-covid-19-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-prusafe-covidcover-screen-options",
        "after": [
          {
            "result": {
              "duration": 38400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3133119800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7962345800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027RISHANI-PC\u0027, ip: \u0027192.168.0.102\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 29, deviceManufacturer: samsung, deviceModel: SM-N770F, deviceName: RF8N31EE5JX, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: RF8N31EE5JX, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 10, statBarHeight: 85, takesScreenshot: true, viewportRect: {height: 2104, left: 0, top: 85, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e17182af-ff02-4463-be73-c1c002bc513b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Proceed\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:168)\r\n\tat com.onepulse.app.screens.PruShoppeScreen.clickProceedBtn(PruShoppeScreen.java:103)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.PruShoppeSteps.clickOnProceedBtn(PruShoppeSteps.java:100)\r\n\tat ✽.Then I click on Proceed button on prushoppe screen(features/my/home/prushopee/PruCovid19Protection.feature:46)\r\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I click on pru covid19 campaign tile on prushoppe screen for malaysia",
            "match": {
              "location": "PruShoppeSteps.navigateToCovid19Campaign()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.covid19.hospitalization.text}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${my.covid19.for.pru.malaysia.customer}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${my.covid.19.benefit.offered}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${my.covid19.hospital.assistence}"
                ],
                "line": 54
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "I verify the following texts \"Covid 19\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Covid 19",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.self.text}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${family.text}"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.covid19.disclosure.text.1}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.2}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.3}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.4}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.5}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.6}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${my.covid19.disclosure.text.7}"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 67,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 68,
                    "value": "#      | ${my.covid19.disclosure.text} |"
                  }
                ],
                "cells": [
                  "${my.name.as.nric.text}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${gender.text}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${my.covid19.dob}"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 137500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 27500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able to see the PRUSafe COVIDCover screen options",
        "description": "",
        "id": "verify-pru-safe-covid-19-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-prusafe-covidcover-screen-options",
        "after": [
          {
            "result": {
              "duration": 53400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 3084714000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3898135300,
              "status": "passed"
            },
            "line": 74,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32746362000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tResidential address text is displayed on page  expected [true] but found [false],\n\tCountry of Residence text is displayed on page  expected [true] but found [false],\n\tResidential status and Nationality text is displayed on page  expected [true] but found [false],\n\tEmail text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/my/home/prushopee/PruCovid19Protection.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.residential.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${my.country.of.residence}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${my.resedential.status}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 79
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.country.code}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${my.mobile.phone.number}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${my.referral.code}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${my.covid19.agreement.text}"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 86,
            "name": "I verify the following texts \"Covid 19\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Covid 19",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${prushoppe.proceed.capital.txt}"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Pru Safe Covid-19 Cover functionality on one pulse App",
    "description": "",
    "id": "verify-pru-safe-covid-19-cover-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruCovid19Protection.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_covid19"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify user can login using CONTINUE WITH GOOGLE option"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And user click on \"CONTINUE WITH GOOGLE\" with Google button"
          },
          {
            "line": 7,
            "value": "#    And I click the \"Email\"  in Continue with Gmail"
          },
          {
            "line": 8,
            "value": "#      | Emailid  | ${prushopee.policy.login.id} |"
          },
          {
            "line": 9,
            "value": "#      | Password | ${proshopee.text}               |"
          },
          {
            "line": 10,
            "value": "#    Then user should be landed to \"Home\" screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 934300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 12,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 36000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 52600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16468939700,
              "status": "passed"
            },
            "line": 13,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 351100,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12985634000,
              "status": "passed"
            },
            "line": 15,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10207093200,
              "status": "passed"
            },
            "line": 16,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001064600,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4220937400,
              "status": "passed"
            },
            "line": 18,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 123100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 20,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 74600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 101200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3889040200,
              "status": "passed"
            },
            "line": 21,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19009739300,
              "status": "passed"
            },
            "line": 22,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 24
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 455155000,
              "status": "passed"
            },
            "line": 25,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5001022100,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8688720900,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7721210500,
              "status": "passed"
            },
            "line": 28,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 215000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 30,
        "name": "Verify user can access his policies from Pru Shoppe My Policies screen",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-user-can-access-his-policies-from-pru-shoppe-my-policies-screen",
        "after": [
          {
            "result": {
              "duration": 40300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 55900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 517683200,
              "status": "passed"
            },
            "line": 31,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000811900,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 828884600,
              "status": "passed"
            },
            "line": 33,
            "name": "I click on my policies tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToMyPoliciesScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6260940700,
              "status": "passed"
            },
            "line": 34,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.title}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${myCoverage.linkPolicyButton}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${myCoverage.information}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${myCoverage.InformationDescription}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 182200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "Click on Link policy and verify screen to add policy number",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;click-on-link-policy-and-verify-screen-to-add-policy-number",
        "after": [
          {
            "result": {
              "duration": 35500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 50500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 456517700,
              "status": "passed"
            },
            "line": 41,
            "name": "I clicks on \"${myCoverage.linkPolicyButton}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.linkPolicyButton}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001174600,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2185261000,
              "status": "passed"
            },
            "line": 43,
            "name": "I hide one pulse app mobile keyboard",
            "match": {
              "location": "BaseSteps.hideKeyboard()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3142334000,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.title}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description1}"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 122200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 49,
        "name": "Verify the error message when the Policy Number is blank",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-blank",
        "after": [
          {
            "result": {
              "duration": 46500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 61200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1001883300,
              "status": "passed"
            },
            "line": 50,
            "name": "I click on \"${myCoverage.policyNumber.saveButton}\" button on app",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.policyNumber.saveButton}",
                  "offset": 12
                }
              ],
              "location": "LoginSteps.clickOnButton(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1214473300,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on \"${myCoverage.policyNumber.saveButton}\" button on app",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.policyNumber.saveButton}",
                  "offset": 12
                }
              ],
              "location": "LoginSteps.clickOnButton(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2122780600,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 146000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 55,
        "name": "Verify the error message when the Policy Number is invalid or incorrect",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-invalid-or-incorrect",
        "after": [
          {
            "result": {
              "duration": 81400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 70700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1911709300,
              "status": "passed"
            },
            "line": 56,
            "name": "I enter \"1234\" as the Policy number",
            "match": {
              "arguments": [
                {
                  "val": "1234",
                  "offset": 9
                }
              ],
              "location": "PruShoppeSteps.enterPolicyNumber(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1293900700,
              "status": "passed"
            },
            "line": 57,
            "name": "I click on \"${myCoverage.policyNumber.saveButton}\" button on app",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.policyNumber.saveButton}",
                  "offset": 12
                }
              ],
              "location": "LoginSteps.clickOnButton(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5355488400,
              "status": "passed"
            },
            "line": 58,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 157000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 61,
        "name": "Verify the error message when the Cancel Button",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-cancel-button",
        "after": [
          {
            "result": {
              "duration": 34200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 50300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 774841600,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on \"${myCoverage.policyNumber.cancelButton}\" button on app",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.policyNumber.cancelButton}",
                  "offset": 12
                }
              ],
              "location": "LoginSteps.clickOnButton(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14341036800,
              "status": "passed"
            },
            "line": 63,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Pru Shoppe My Coverage functionality on one pulse App",
    "description": "",
    "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruShoppeCoverage.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PruShoppe_my_coverage"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 244400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 64300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15676140900,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 406300,
              "status": "passed"
            },
            "line": 7,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 769200,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13549175900,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11433452200,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000221700,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4591756000,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 224100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 50000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3928082500,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18797207700,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 476255900,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000944200,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8182911100,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7524197900,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 133800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 28700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9745797000,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 88800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 34400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 47200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9888292500,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 131000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7288082200,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 119200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 763400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22534432600,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 113700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          },
          {
            "result": {
              "duration": 102900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21858123900,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in onepulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@SharewithfriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  }
]