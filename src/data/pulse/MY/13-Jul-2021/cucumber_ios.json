[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 142611583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 341304083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 2134125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 332084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19317828750,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31353667,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34616187875,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19436840750,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2017123208,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 479042,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2379391667,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2989381875,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 81250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 123625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1611292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 104500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3648117334,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64470856125,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1676694333,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5011798208,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13596179417,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17739318083,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 85916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 83166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1302416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 68334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7490138583,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006700792,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48773447125,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18393183208,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016390916,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2074717500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001688792,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3524621500,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62247091083,
              "status": "passed"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1640950750,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1389867000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1620899458,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24675562000,
              "status": "passed"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1371895000,
              "status": "passed"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 534245792,
              "status": "passed"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 986208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 199167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1080583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 43916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57906666,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 868500,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7091554125,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30607843917,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19404225041,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2019570250,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2245155625,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005801208,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3383860375,
              "status": "passed"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63728823667,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6934595542,
              "status": "passed"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1596831875,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2202707917,
              "status": "passed"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1357997083,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31586302875,
              "status": "passed"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1305512542,
              "status": "passed"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1850010500,
              "status": "passed"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 106750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2771167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 2706833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1932000,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62044162875,
              "status": "passed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1200806292,
              "status": "passed"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27320272667,
              "status": "passed"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007184916,
              "status": "passed"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2536797667,
              "status": "passed"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5005412875,
              "status": "passed"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13869590250,
              "status": "passed"
            },
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 294000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 2152750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 73708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5838250,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 330500,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7201401959,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002400792,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28941553209,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18316706625,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008913708,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7163442375,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005313208,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21043244333,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1979725750,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1879500834,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33124343750,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 107200174084,
              "status": "passed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15908075250,
              "status": "passed"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4007392625,
              "status": "passed"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2572549917,
              "status": "passed"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12578414958,
              "status": "passed"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006145166,
              "status": "passed"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44498727500,
              "status": "passed"
            },
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 397583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 146125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 3281167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 43958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7087536625,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006742875,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30177838500,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2016870125,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21687263500,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003826333,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5780170375,
              "status": "passed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1103105542,
              "status": "passed"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003052167,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20551352250,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004376250,
              "status": "passed"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15349674000,
              "status": "passed"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12780200250,
              "status": "passed"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 1375041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 360375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 4270375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11463292,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11282791,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7652724459,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001531000,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32621712000,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008107583,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21047443542,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001821125,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6874300917,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005258500,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24093935625,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1661880958,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1899737625,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35024782834,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007939000,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7328655125,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4209511042,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 30,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2164973917,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 32,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1517978667,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2245143375,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1758743667,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737705083,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2888889084,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 38,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3302297250,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2092691625,
              "status": "passed"
            },
            "line": 40,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2047796667,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2239353167,
              "status": "passed"
            },
            "line": 42,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1981869500,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5009132333,
              "status": "passed"
            },
            "line": 44,
            "name": "I answer as \"${option.yes.text}\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "${option.yes.text}",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 37
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2201488583,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1715517792,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 978033250,
              "status": "passed"
            },
            "line": 47,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8584834666,
              "status": "passed"
            },
            "comments": [
              {
                "line": 48,
                "value": "#Specific for PH reg flow"
              }
            ],
            "line": 49,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2324806583,
              "status": "passed"
            },
            "comments": [
              {
                "line": 51,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 52,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3085698208,
              "status": "passed"
            },
            "comments": [
              {
                "line": 53,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 54,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5546419959,
              "status": "passed"
            },
            "line": 55,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8287883125,
              "status": "passed"
            },
            "comments": [
              {
                "line": 56,
                "value": "#Specific for SG reg flow"
              }
            ],
            "line": 57,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5277283167,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#And I click the continue button"
              }
            ],
            "line": 59,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16885292458,
              "status": "passed"
            },
            "line": 60,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4006035083,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1857966625,
              "status": "passed"
            },
            "line": 62,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13113340541,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4006418041,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5275931083,
              "status": "passed"
            },
            "line": 65,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 66
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1534816125,
              "status": "passed"
            },
            "line": 67,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8003285209,
              "status": "passed"
            },
            "line": 68,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15390465458,
              "status": "passed"
            },
            "line": 69,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 5,
            "name": "@regtst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2039416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 286958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 1635709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7925482333,
              "status": "passed"
            },
            "line": 73,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006055250,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45173773333,
              "status": "passed"
            },
            "line": 75,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008215750,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22071437959,
              "status": "passed"
            },
            "line": 77,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007096042,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7386985250,
              "status": "passed"
            },
            "line": 79,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005234375,
              "status": "passed"
            },
            "line": 80,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4774420000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 81,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 82,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 71,
            "name": "@OPUATRegressionPH"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 87,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 88,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 89,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 155333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 990458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 462792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1627523916,
              "status": "passed"
            },
            "line": 93,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4957614791,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 98
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 91,
            "name": "@OPUATRegressionPH"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 199959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 127250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 66709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4418999583,
              "status": "passed"
            },
            "line": 102,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 103
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2546019500,
              "status": "passed"
            },
            "line": 104,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1050762792,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 106
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 100,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 919250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 82834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 650416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 50541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4427755500,
              "status": "passed"
            },
            "line": 102,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 103
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3646089708,
              "status": "passed"
            },
            "line": 104,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 668360792,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 106
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 100,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 126250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 180125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 1279959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 44792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7892417583,
              "status": "passed"
            },
            "line": 114,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2009090208,
              "status": "passed"
            },
            "line": 115,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30643525792,
              "status": "passed"
            },
            "line": 116,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006598459,
              "status": "passed"
            },
            "line": 117,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22263943875,
              "status": "passed"
            },
            "line": 118,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007883459,
              "status": "passed"
            },
            "line": 119,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7181260250,
              "status": "passed"
            },
            "comments": [
              {
                "line": 120,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 121,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003338166,
              "status": "passed"
            },
            "line": 122,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23772076584,
              "status": "passed"
            },
            "line": 123,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 124
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 127
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2637596958,
              "status": "passed"
            },
            "line": 128,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2532881375,
              "status": "passed"
            },
            "line": 129,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 130
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 112,
            "name": "@OPUATRegressionPH"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 580833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1281959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1368833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17009750,
              "status": "passed"
            },
            "line": 134,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 102250,
              "status": "passed"
            },
            "line": 135,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7300392250,
              "status": "passed"
            },
            "line": 136,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006420958,
              "status": "passed"
            },
            "line": 137,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33852712500,
              "status": "passed"
            },
            "line": 138,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008267000,
              "status": "passed"
            },
            "line": 139,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24156157542,
              "status": "passed"
            },
            "line": 140,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005473584,
              "status": "passed"
            },
            "line": 141,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8637285417,
              "status": "passed"
            },
            "comments": [
              {
                "line": 142,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 143,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001347917,
              "status": "passed"
            },
            "line": 144,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30722108334,
              "status": "passed"
            },
            "line": 145,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 146
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 148
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 149
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2928214459,
              "status": "passed"
            },
            "line": 150,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4713211417,
              "status": "passed"
            },
            "line": 151,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36299251417,
              "status": "passed"
            },
            "line": 152,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005756541,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 714884875,
              "status": "passed"
            },
            "line": 154,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7270354500,
              "status": "passed"
            },
            "line": 155,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2041852000,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002778625,
              "status": "passed"
            },
            "line": 158,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 887232542,
              "status": "passed"
            },
            "line": 159,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 132,
            "name": "@OPUATRegressionPH"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 161,
            "value": "#Not adding to PH regression as the reg screen order keeps changing for the LBU"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 429875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 296541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify the Registration screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-registration-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 2468125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 82917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7482244750,
              "status": "passed"
            },
            "line": 163,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 164
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1002120208,
              "status": "passed"
            },
            "line": 165,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2374405584,
              "status": "passed"
            },
            "line": 166,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4640851625,
              "status": "passed"
            },
            "line": 167,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3330761625,
              "status": "passed"
            },
            "line": 168,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1004222625,
              "status": "passed"
            },
            "line": 169,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1865975959,
              "status": "passed"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3850101125,
              "status": "passed"
            },
            "line": 171,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2448822542,
              "status": "passed"
            },
            "line": 172,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1310309709,
              "status": "passed"
            },
            "line": 173,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2099021958,
              "status": "passed"
            },
            "line": 174,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005293833,
              "status": "passed"
            },
            "line": 175,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1877483500,
              "status": "passed"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3862470959,
              "status": "passed"
            },
            "line": 177,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2045192458,
              "status": "passed"
            },
            "line": 178,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1788378250,
              "status": "passed"
            },
            "line": 179,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1007808500,
              "status": "passed"
            },
            "line": 180,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2535265875,
              "status": "passed"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4177449834,
              "status": "passed"
            },
            "line": 182,
            "name": "verify BMI validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 31
                }
              ],
              "location": "RegistrationSteps.verifyBMIMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3538037083,
              "status": "passed"
            },
            "line": 183,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2139061125,
              "status": "passed"
            },
            "line": 184,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005968584,
              "status": "passed"
            },
            "line": 185,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2247540125,
              "status": "passed"
            },
            "line": 186,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4675120000,
              "status": "passed"
            },
            "line": 187,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1419214959,
              "status": "passed"
            },
            "line": 188,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2053629084,
              "status": "passed"
            },
            "line": 189,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005212250,
              "status": "passed"
            },
            "line": 190,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2370030416,
              "status": "passed"
            },
            "line": 191,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4736587916,
              "status": "passed"
            },
            "line": 192,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1118167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4780667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 195,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36510750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3173834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10916833,
              "status": "passed"
            },
            "line": 196,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1581583,
              "status": "passed"
            },
            "line": 197,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7913224791,
              "status": "passed"
            },
            "line": 198,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006645833,
              "status": "passed"
            },
            "line": 199,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 49764995625,
              "status": "passed"
            },
            "line": 200,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2026112125,
              "status": "passed"
            },
            "line": 201,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18267366750,
              "status": "passed"
            },
            "line": 202,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001492792,
              "status": "passed"
            },
            "line": 203,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7788482333,
              "status": "passed"
            },
            "comments": [
              {
                "line": 204,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 205,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002190500,
              "status": "passed"
            },
            "line": 206,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67959633875,
              "status": "passed"
            },
            "line": 207,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 208
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 209
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 210
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 211
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5031806042,
              "status": "passed"
            },
            "line": 212,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7655799083,
              "status": "passed"
            },
            "line": 213,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90017724375,
              "status": "passed"
            },
            "line": 214,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4560365250,
              "status": "passed"
            },
            "line": 215,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40832227959,
              "status": "passed"
            },
            "line": 216,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006425583,
              "status": "passed"
            },
            "line": 217,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8818341167,
              "status": "passed"
            },
            "line": 218,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 194,
            "name": "@otpreset_tst"
          },
          {
            "line": 194,
            "name": "@OPUATRegressionPH"
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Registrations"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 189292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4383125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 5478917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 98833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8802953625,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2334542,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58802504750,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26716159750,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5011819209,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3053818625,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2057917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 107083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 2258625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 839708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3604395458,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65101517542,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1205400459,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5011376500,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12002948917,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15928928375,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5002565000,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 143375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 99125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 315167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9228543583,
              "status": "passed"
            },
            "line": 26,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16024188916,
              "status": "passed"
            },
            "line": 27,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5031420750,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 76167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 480083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 80541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21301268083,
              "status": "passed"
            },
            "line": 31,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3601441917,
              "status": "passed"
            },
            "line": 32,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 136500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 640959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 66458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2825660083,
              "status": "passed"
            },
            "line": 35,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4085528916,
              "status": "passed"
            },
            "line": 36,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5538920917,
              "status": "passed"
            },
            "line": 37,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1410958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 67125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 448667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 32395166,
              "status": "passed"
            },
            "line": 40,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1476250,
              "status": "passed"
            },
            "line": 41,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12801411000,
              "status": "passed"
            },
            "line": 44,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5543122875,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 48,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 49,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 50,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 51,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 335416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 43292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 7559039292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2460583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10100790875,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: 6858e58b-a96b-4078-aa95-faf18f8264f6\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeStaticText[contains(@name,\"+60\")]//parent::XCUIElementTypeOther//following-sibling::XCUIElementTypeOther/XCUIElementTypeOther}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickeditProfileLink(PulseManageProfileScreen.java:180)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickEditProfileLink(EditProfileSteps.java:37)\n\tat ✽.Given user click on Edit profile link(features/editProfile/PulseEditProfileTest.feature:55)\n",
              "status": "failed"
            },
            "line": 55,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 530250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14702042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 1523154166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4357333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5983758833,
              "status": "passed"
            },
            "line": 64,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90354539167,
              "status": "passed"
            },
            "line": 65,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2045038584,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1868445333,
              "error_message": "java.lang.AssertionError: actual value is Automation-58030068638 expected [Automation-333130710758] but found [Automation-58030068638]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\n\tat org.testng.Assert.assertEquals(Assert.java:116)\n\tat org.testng.Assert.assertEquals(Assert.java:190)\n\tat com.onepulse.app.screens.PulseManageProfileScreen.verifyDefaultValuesOnBabylonRegPage(PulseManageProfileScreen.java:534)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(EditProfileSteps.java:156)\n\tat ✽.Then I verify the default values in babylon registration page is updated as below(features/editProfile/PulseEditProfileTest.feature:67)\n",
              "status": "failed"
            },
            "line": 67,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 71
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 152791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4850708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 1371542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3980743167,
              "status": "passed"
            },
            "line": 76,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5003915417,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 147833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 620625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 773875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7957125,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83208,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8413273125,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007241542,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 56109279583,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007627958,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22031437750,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007063542,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8615185834,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005430000,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31448145584,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3027034917,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4872737583,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36749386958,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001807583,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 132623454709,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17689392834,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4006180084,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 111791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 65792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 2261209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 336625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31304205625,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59542694166,
              "status": "passed"
            },
            "line": 30,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14932530834,
              "status": "passed"
            },
            "line": 31,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16547272167,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10262278375,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey",
    "keyword": "Feature",
    "uri": "features/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# This feature will fail due to the defect PCAONEPULSE-21990"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 526375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 218875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 469541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8641989834,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3644166,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64069794000,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25629901041,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010602625,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1655453583,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 198875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 2883750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4490170958,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51519545125,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1477935292,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008589791,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15134593209,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20667213291,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 292584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7706875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 1274107458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9373250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 39383644625,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 21159918166,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14544074041,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4494103375,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7905573125,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2320192167,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear you Hospitals are not displayed \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.screens.LocationScreen.verifySearchResults(LocationScreen.java:102)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(LocationSteps.java:51)\n\tat ✽.And User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results(features/health/Hospital_Clinic_Locator.feature:31)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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x62YJzhY3tW5FDUFg+79nX6wqFOmJ/O2uZPXGnP6e/CNrrn8NQe0b0VHOm7FCLo9dU5nx6frh2TeENdeLI40dLV4mJWjRz5nFCaU69FpK4Z5u1lbeN7/9Tmfs8JXXvVDj99RWXPyrC/xobVuGzWtmPc4Jpr4G+PrZL7FvJkylzI9uD7dDrpq5TvJv1e9AZP8WeidpFaAFlqBjlagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFqluvFbfbPXPmzN9oXumVpk2bdunSJfsD6/VuvVbef//9Pre+qVOn2h9Yr3frtVJbW7t8+fK3bmVLly0rKyuzP7Be79ZrBTcLrUBFK1D9Hy2DnqQb1+DhAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1588125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 659752125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1598833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2182497459,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24006874750,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear you Hospitals are not displayed ,\n\tNear you search results are not displayed ,\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalInformationScreen(LocationScreen.java:151)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(LocationSteps.java:81)\n\tat ✽.Then I can see the \"Hospital\" Information screen with Navigate and Call Now buttons(features/health/Hospital_Clinic_Locator.feature:35)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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x62YJzhY3tW5FDUFg+79nX6wqFOmJ/O2uZPXGnP6e/CNrrn8NQe0b0VHOm7FCLo9dU5nx6frh2TeENdeLI40dLV4mJWjRz5nFCaU69FpK4Z5u1lbeN7/9Tmfs8JXXvVDj99RWXPyrC/xobVuGzWtmPc4Jpr4G+PrZL7FvJkylzI9uD7dDrpq5TvJv1e9AZP8WeidpFaAFlqBjlagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFqluvFbfbPXPmzN9oXumVpk2bdunSJfsD6/VuvVbef//9Pre+qVOn2h9Yr3frtVJbW7t8+fK3bmVLly0rKyuzP7Be79ZrBTcLrUBFK1D9Hy2DnqQb1+DhAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 35,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1824792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 581180917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2013000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7640343083,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: d3260559-a2cc-4a9e-8f62-a3c66ab1f4bc\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"Speciality, tab, 2 of 4\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\n\tat ✽.When I clicks on \"Speciality\" tab(features/health/Hospital_Clinic_Locator.feature:38)\n",
              "status": "failed"
            },
            "line": 38,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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x62YJzhY3tW5FDUFg+79nX6wqFOmJ/O2uZPXGnP6e/CNrrn8NQe0b0VHOm7FCLo9dU5nx6frh2TeENdeLI40dLV4mJWjRz5nFCaU69FpK4Z5u1lbeN7/9Tmfs8JXXvVDj99RWXPyrC/xobVuGzWtmPc4Jpr4G+PrZL7FvJkylzI9uD7dDrpq5TvJv1e9AZP8WeidpFaAFlqBjlagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFqluvFbfbPXPmzN9oXumVpk2bdunSJfsD6/VuvVbef//9Pre+qVOn2h9Yr3frtVJbW7t8+fK3bmVLly0rKyuzP7Be79ZrBTcLrUBFK1D9Hy2DnqQb1+DhAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 39,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 119000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2279125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 542621625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1395917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7771863541,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: d3260559-a2cc-4a9e-8f62-a3c66ab1f4bc\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"Doctors, tab, 3 of 4\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\n\tat ✽.When I clicks on \"Doctors\" tab(features/health/Hospital_Clinic_Locator.feature:42)\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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x62YJzhY3tW5FDUFg+79nX6wqFOmJ/O2uZPXGnP6e/CNrrn8NQe0b0VHOm7FCLo9dU5nx6frh2TeENdeLI40dLV4mJWjRz5nFCaU69FpK4Z5u1lbeN7/9Tmfs8JXXvVDj99RWXPyrC/xobVuGzWtmPc4Jpr4G+PrZL7FvJkylzI9uD7dDrpq5TvJv1e9AZP8WeidpFaAFlqBjlagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFqluvFbfbPXPmzN9oXumVpk2bdunSJfsD6/VuvVbef//9Pre+qVOn2h9Yr3frtVJbW7t8+fK3bmVLly0rKyuzP7Be79ZrBTcLrUBFK1D9Hy2DnqQb1+DhAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 43,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2816417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 45,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 560073916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1176792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8415215250,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: d3260559-a2cc-4a9e-8f62-a3c66ab1f4bc\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"Rooms, tab, 4 of 4\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.LocationScreen.clickOnHospitalTab(LocationScreen.java:140)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnTab(LocationSteps.java:61)\n\tat ✽.When I clicks on \"Rooms\" tab(features/health/Hospital_Clinic_Locator.feature:46)\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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x62YJzhY3tW5FDUFg+79nX6wqFOmJ/O2uZPXGnP6e/CNrrn8NQe0b0VHOm7FCLo9dU5nx6frh2TeENdeLI40dLV4mJWjRz5nFCaU69FpK4Z5u1lbeN7/9Tmfs8JXXvVDj99RWXPyrC/xobVuGzWtmPc4Jpr4G+PrZL7FvJkylzI9uD7dDrpq5TvJv1e9AZP8WeidpFaAFlqBjlagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFqluvFbfbPXPmzN9oXumVpk2bdunSJfsD6/VuvVbef//9Pre+qVOn2h9Yr3frtVJbW7t8+fK3bmVLly0rKyuzP7Be79ZrBTcLrUBFK1D9Hy2DnqQb1+DhAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 47,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1081959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 522708292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1673500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8278507500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: d3260559-a2cc-4a9e-8f62-a3c66ab1f4bc\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"Navigate\"]/../../preceding-sibling:: XCUIElementTypeOther[1]/XCUIElementTypeOther}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.LocationScreen.navigateBackToListScreen(LocationScreen.java:204)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnBackButtonInSeeDetailsScreen(LocationSteps.java:86)\n\tat ✽.When I clicks on back button in See Details screen(features/health/Hospital_Clinic_Locator.feature:50)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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DeZGxNyymAfJG3XG/Yqo+1bMCxx09HYsRa3BoOtIjx8s6pHpybxt7uFaYw5/P77RNbe/ZofJS9Gd7lsxgi53g93e/eH6Jpk3xPWXy8JNvZ08zJmjXz5nFCKUm9FjK4Z5u1lfctH/xQWfvdrnqP2mx19VU3fqnC/+obU+GzWtmPc4JprYG+ObZL7EvJkytzL9eH66G/TWyt8k/l31Fkzie2FgkloB2mkFOlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqO68Vlwu18KFC1/QvDggzZs378qVK8lPbMC781p55513Bt355syZk/zEBrw7r5X6+vo1a9a8didb/eabNpst+YkNeHdeK7hdaAUqWoHq/wDX1qHwnc3fvwAAAABJRU5ErkJggg\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 50,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 72875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2475500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 628503875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1499917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3572833084,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15195585625,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4610448875,
              "status": "passed"
            },
            "line": 56,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7505817167,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear you Hospitals are not displayed ,\n\tNear you search results are not displayed ,\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalScreenLaunch(LocationScreen.java:85)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(LocationSteps.java:46)\n\tat ✽.Then User can see the list of \"Clinics\" near by to user\u0027s current location(features/health/Hospital_Clinic_Locator.feature:57)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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9/+rXoHp/W9hZJJaAXpoBTpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFaiuvlZcLtfSpUt/r1k4Ii1atKiystL+wka8q6+VN954Y9TV79FHH7W/sBHv6mvF5/OtWrXqlavZqytWOBwO+wsb8a6+VvBdoRWoaAWq/wMHjNAec+h2JQAAAABJRU5ErkJggg\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 57,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1178583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 545900292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1533625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2481965541,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear you Hospitals are not displayed ,\n\tNear you search results are not displayed ,\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false],\n\tNear you Clinics are not displayed \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.screens.LocationScreen.verifySearchResults(LocationScreen.java:102)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(LocationSteps.java:51)\n\tat ✽.And User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results(features/health/Hospital_Clinic_Locator.feature:60)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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9/+rXoHp/W9hZJJaAXpoBTpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFaiuvlZcLtfSpUt/r1k4Ii1atKiystL+wka8q6+VN954Y9TV79FHH7W/sBHv6mvF5/OtWrXqlavZqytWOBwO+wsb8a6+VvBdoRWoaAWq/wMHjNAec+h2JQAAAABJRU5ErkJggg\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2015750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 2651917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2111048416,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 100292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 503827334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1088042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23843755042,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNear you Hospitals are not displayed ,\n\tNear you search results are not displayed ,\n\tCall Now button is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstHospital tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Hospital tile See Details screen expected [true] but found [false],\n\tNear you Clinics are not displayed ,\n\tNear you search results are not displayed ,\n\tCall Now button is not displayed for the firstClinic tile See Details screen expected [true] but found [false],\n\tNavigate link is not displayed for the firstClinic tile See Details screen expected [true] but found [false],\n\thospital address is not displayed for the first Clinic tile See Details screen expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.screens.LocationScreen.verifyHospitalInformationScreen(LocationScreen.java:151)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(LocationSteps.java:81)\n\tat ✽.Then I can see the \"Clinic\" Information screen with Navigate and Call Now buttons(features/health/Hospital_Clinic_Locator.feature:66)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 66,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1078334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 506578750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 811500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7474002208,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: d3260559-a2cc-4a9e-8f62-a3c66ab1f4bc\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"Navigate\"]/../../preceding-sibling:: XCUIElementTypeOther[1]/XCUIElementTypeOther}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.LocationScreen.navigateBackToListScreen(LocationScreen.java:204)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnBackButtonInSeeDetailsScreen(LocationSteps.java:86)\n\tat ✽.When I clicks on back button in See Details screen(features/health/Hospital_Clinic_Locator.feature:69)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 76750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 863583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 1391417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1960104625,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@18JunTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 54208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 117041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 6925708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 395708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9171292,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 685417,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9692949541,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61256948041,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2031721666,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22828030834,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005158917,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8320308792,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35521223333,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2542512000,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6481824250,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37183795792,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012168584,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 131756652083,
              "status": "passed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30795649709,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4009248167,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 98250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 81291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 65500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2082133041,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007979709,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57137322125,
              "status": "passed"
            },
            "line": 31,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005222750,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1448917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 389417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15412221958,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4947882958,
              "status": "passed"
            },
            "line": 40,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005210666,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 140041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 715166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 478167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4324274375,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 45,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 46,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3684625,
              "status": "passed"
            },
            "line": 50,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26643758542,
              "status": "passed"
            },
            "line": 51,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 54
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5382314250,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 111500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 360708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11839482250,
              "status": "passed"
            },
            "line": 58,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5424285833,
              "status": "passed"
            },
            "line": 64,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5140758250,
              "status": "passed"
            },
            "line": 66,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4499326250,
              "status": "passed"
            },
            "line": 67,
            "name": "I clicks on \"${before.meal.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${before.meal.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4635102250,
              "status": "passed"
            },
            "line": 68,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 52042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008549250,
              "status": "passed"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11272395125,
              "status": "passed"
            },
            "line": 72,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 74
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3797482458,
              "status": "passed"
            },
            "line": 75,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6020422209,
              "status": "passed"
            },
            "line": 76,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 77
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 78,
            "value": "#      | ${add.another.med}                   |"
          },
          {
            "line": 79,
            "value": "#      | ${notNow.text}                       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 57167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 662375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5072292000,
              "status": "passed"
            },
            "line": 82,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4164666,
              "status": "passed"
            },
            "line": 83,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25294547750,
              "status": "passed"
            },
            "line": 84,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5629461875,
              "status": "passed"
            },
            "line": 88,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9908798000,
              "status": "passed"
            },
            "line": 89,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 90
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5655396125,
              "status": "passed"
            },
            "line": 91,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6569676334,
              "status": "passed"
            },
            "line": 92,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5114695792,
              "status": "passed"
            },
            "line": 93,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12770200209,
              "status": "passed"
            },
            "line": 94,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5253466042,
              "status": "passed"
            },
            "line": 97,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 77000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 164583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 99,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 76167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6861272208,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3864995750,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "navigate to health screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;navigate-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 62667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3944938125,
              "status": "passed"
            },
            "line": 105,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "Verify User should be able to navigate to calendar page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-calendar-page",
        "after": [
          {
            "result": {
              "duration": 65000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2007181709,
              "status": "passed"
            },
            "line": 108,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7054993500,
              "status": "passed"
            },
            "line": 109,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 23597209125,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15335369167,
              "status": "passed"
            },
            "line": 111,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "${Medicine_Info}"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 69333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 761792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8081457875,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2342958,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60775006000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25774450125,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010655959,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1986527417,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 799625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1017750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4652369125,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52674776291,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1657144458,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007180167,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14071324291,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21260263625,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 3323389791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1351709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11000821625,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007406791,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19992244167,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tYou do not have any events enrolled yet text is displayed on page  expected [true] but found [false],\n\tPlease choose from the open events and get started text is displayed on page  expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/home/MyEvents.feature:25)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 83791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1865167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 2238255458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1158416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8945877917,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: 07e68b99-9f1f-4840-a7d2-229cc58f6a7a\n*** Element info: {Using\u003dxpath, value\u003d(//XCUIElementTypeOther[@name\u003d\"Events Archive\"])[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.CustomerConnectScreen.ClickMyEventsArchive(CustomerConnectScreen.java:1886)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMyEventsArchive(CustomerConnectSteps.java:590)\n\tat ✽.And I click the Events Archive icon(features/home/MyEvents.feature:30)\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1781708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 2512658583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1493958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9123522791,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: 07e68b99-9f1f-4840-a7d2-229cc58f6a7a\n*** Element info: {Using\u003dxpath, value\u003d(//XCUIElementTypeOther[@name\u003d\"Open Events\"])[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.CustomerConnectScreen.ClickMyOpenEvents(CustomerConnectScreen.java:1870)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMyOpenEvents(CustomerConnectSteps.java:586)\n\tat ✽.And I click the Open Events icon(features/home/MyEvents.feature:35)\n",
              "status": "failed"
            },
            "line": 35,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 36,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 38792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1100792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1166584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10674821750,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59773427125,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22501562292,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3010393875,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1606845416,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 356625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 705958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9662417,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5342400875,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72951589208,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1201056625,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10010476792,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17513526875,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20503244042,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 67125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 46958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2005857125,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9486999583,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8001450125,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2936623209,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22225430167,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 37,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 38,
            "value": "#    And I Like the post"
          },
          {
            "line": 39,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 40,
            "value": "#    And I Like the post"
          },
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 43,
            "value": "#    And I share the post"
          },
          {
            "line": 44,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 46,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 47,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 48,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 49,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 53,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 331833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 614625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30185484709,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10022390167,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 680584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 43083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15905375500,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 1493416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6654141416,
              "status": "passed"
            },
            "line": 66,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6889272083,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 584625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6278791584,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4781043833,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 63667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3329043667,
              "status": "passed"
            },
            "line": 75,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 5289834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 609083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 6993166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 45357583,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 848875,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9101323292,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007778041,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 68193181667,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010955958,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27550035375,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005970208,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7888242084,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007741041,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37014061666,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2803132167,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3800720958,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40853515000,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007957833,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 134598966458,
              "status": "passed"
            },
            "line": 25,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22549320417,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4005639875,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1150208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 120375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1244153666,
              "status": "passed"
            },
            "line": 31,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2010605791,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 29,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 64375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 45833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2460930791,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 34,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 34,
            "name": "@NotificationCenter_my"
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@notificationiOS"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 45500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1450500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11092028750,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61164054166,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24604923209,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3008375167,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1611434292,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 102500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1135708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 111125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36939459,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4923479542,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53905830584,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1490626916,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006125125,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15803008709,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23354698417,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 79709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 383958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 1087250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6454237250,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10845671834,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11319162583,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 533625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 60375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 3838415625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1804375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33535602333,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10076580750,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20553849542,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNo Challenges text is displayed on page  expected [true] but found [false],\n\tWe will notify you for next Challenge. Meanwhile maintain good health. text is displayed on page  expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/home/mychallenges/PulseMyChallenges.feature:40)\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 41,
                    "value": "#   | ${not.connected.wearable}  |"
                  }
                ],
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@my_challengesSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 172833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1968084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 2007292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 387375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8343491708,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63564313209,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#    And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24533803416,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3018873250,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2259483125,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 865791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6280583,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6794891125,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54519532708,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3552532334,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009840292,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16148141084,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20328834542,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 78791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 436458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6006554125,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1459033583,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6005165417,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 937887417,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9828719500,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 175833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 27740864333,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5015752167,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9631126000,
              "status": "passed"
            },
            "line": 36,
            "name": "I leave all joined communities by clicking on three dots menu icon on my My communities screen",
            "match": {
              "location": "MyCommunitiesSteps.leaveAllJoinedCommunities()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 37,
            "value": "#    When I click on joined community three dots menu icon"
          },
          {
            "line": 38,
            "value": "#    And I click on leave button for joined community"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 181666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 329750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 1807542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 40208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5005123917,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29502988333,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4702187958,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6403448125,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15199913209,
              "status": "passed"
            },
            "line": 46,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7405310709,
              "status": "passed"
            },
            "line": 47,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8850753583,
              "status": "passed"
            },
            "line": 49,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4806213167,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14307305791,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 53
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 952333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 71959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 2156667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4952902625,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006157375,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2138065625,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9536444917,
              "status": "passed"
            },
            "line": 60,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1237245333,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3937633833,
              "status": "passed"
            },
            "line": 62,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15080492375,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9447363709,
              "status": "passed"
            },
            "line": 65,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 335417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 30625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5234908084,
              "status": "passed"
            },
            "line": 68,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4902757708,
              "status": "passed"
            },
            "line": 69,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5537846791,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9303062042,
              "status": "passed"
            },
            "line": 71,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 292625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14002033083,
              "status": "passed"
            },
            "line": 75,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007185000,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6006441375,
              "status": "passed"
            },
            "line": 77,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3005133583,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9942087292,
              "status": "passed"
            },
            "line": 79,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3843220708,
              "status": "passed"
            },
            "line": 80,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2224588958,
              "status": "passed"
            },
            "line": 81,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11309354583,
              "status": "passed"
            },
            "line": 82,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9336810708,
              "status": "passed"
            },
            "line": 83,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4982852459,
              "status": "passed"
            },
            "line": 84,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8614700542,
              "status": "passed"
            },
            "line": 86,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5628101084,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 144125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 148083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 4364498833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6929250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15007194958,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 92,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45111179083,
              "status": "passed"
            },
            "line": 93,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28079655625,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38161135500,
              "status": "passed"
            },
            "line": 99,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37979941625,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10997162584,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tSorry! No posts found matching your selection text is displayed on page  expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/home/mycommunities/PulseMyCommunities.feature:101)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 459000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1354167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 1344166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22844265208,
              "status": "passed"
            },
            "line": 105,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 80667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 405083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 1342544375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1559292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44170552166,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: 2c0c18c4-b250-45c7-9624-a54fa51c26a5\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"My Communities\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1730)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\n\tat ✽.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:108)\n",
              "status": "failed"
            },
            "line": 108,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 111,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 488792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1128458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1076375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10344007833,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67138103459,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22239973708,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3035417209,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2722265292,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 113250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 397458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1619750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8538250,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8904343458,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74329009375,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1757672125,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012157625,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14744588041,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22148317584,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 83583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 517542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the My communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-my-communities-screen",
        "after": [
          {
            "result": {
              "duration": 1428875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7744514334,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3017921125,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1184420750,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10286765458,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3005527917,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 84125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 2035459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1019216166,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11389434500,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7620256416,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14162260167,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1792157208,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9873539000,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7477145459,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3007115584,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6943807292,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3922791458,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12377647708,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32061508250,
              "status": "passed"
            },
            "line": 51,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 408667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 180375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 2085666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12154565834,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7487458,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${pulse.legal.privacy.login.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.legal.privacy.login.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 56
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70745527959,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24863343000,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5007695083,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1801333583,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 259625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 641709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4071102791,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53089761875,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3170106625,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005927959,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13818412833,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25583703958,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 61417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 39750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20765413083,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify the Legacy and Privacy should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-legacy-and-privacy-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 646625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4747726500,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17005179750,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${icon.privacyNotice}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${icon.regulatory}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${app.version.text}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 112916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the Terms and condition screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-terms-and-condition-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 8955292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1740581750,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on \"${Terms.conditions.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${Terms.conditions.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4109687125,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12181534916,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 856811333,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the Back icon in Terms and conditions screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInTermsConditionScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 736417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1103958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 768084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3175650958,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1817577542,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6913426084,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3682083083,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 45,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 401166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 178292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 40292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2012002666,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1083422000,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3613035958,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15882959208,
              "status": "passed"
            },
            "line": 50,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${clinicalSafety.text}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${ai.healthcare.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${localisation.text}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${privacy.date.protection.text}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${concern.reporting.text}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One pulse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/LegalAndPrivacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalandprivacy_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 63083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 10,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1838416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14957867291,
              "status": "passed"
            },
            "line": 11,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7611417,
              "status": "passed"
            },
            "line": 12,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67608742500,
              "status": "passed"
            },
            "line": 13,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22896717333,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5007380500,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2137975958,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 84208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 18,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 2484875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5138532167,
              "status": "passed"
            },
            "line": 19,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 82172675292,
              "status": "passed"
            },
            "line": 20,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1258852334,
              "status": "passed"
            },
            "line": 23,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5014308625,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13353425500,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19874865958,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 739125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Navigate to account screen and verify all the options",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen-and-verify-all-the-options",
        "after": [
          {
            "result": {
              "duration": 3193292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21153135625,
              "status": "passed"
            },
            "line": 29,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2008020375,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28114392708,
              "status": "passed"
            },
            "line": 31,
            "name": "user should verify following options on account screen",
            "match": {
              "location": "ManageProfileSteps.userShouldVerifyOptionsOnAccountScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.wearable.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${my.notification.text}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${icon.mySettings}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${my.feedback.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${icon.legal\u0026Privacy}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${sign.out.button.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${logs.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 772667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 208875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify wearable screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-wearable-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 50084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3907307000,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on \"${my.wearable.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.wearable.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005753084,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9914516042,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${wearables.fitbitText}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${wearables.garminText}"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1206731000,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify following wearables are displayed as per the device",
            "match": {
              "location": "ManageProfileSteps.verifyWearables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${apple.health.text}##${wearables.googleFit}"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "navigate back to account screen from my wearable screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-wearable-screen",
        "after": [
          {
            "result": {
              "duration": 596917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2162713542,
              "status": "passed"
            },
            "line": 55,
            "name": "user navigate back to the Home screen from My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.backNavigationMyWearablesHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005669125,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 2192334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 788250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21650283375,
              "status": "passed"
            },
            "line": 59,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2005104458,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4174250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 60125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify reward screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-reward-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 101833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1310630792,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on \"${my.rewards.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.rewards.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000808625,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16433701250,
              "status": "passed"
            },
            "line": 65,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.title}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${myRewards.badges}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${myRewards.vouchers}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${myRewards.discover}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "User access My Rewards FAQ",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;user-access-my-rewards-faq",
        "after": [
          {
            "result": {
              "duration": 44458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6920135917,
              "status": "passed"
            },
            "line": 73,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2005214166,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2818779959,
              "status": "passed"
            },
            "line": 75,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.title}"
                ],
                "line": 76
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 106417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;2",
        "after": [
          {
            "result": {
              "duration": 72250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2224615375,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.1}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5134754666,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5075141917,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.1.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1823514750,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 53000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;3",
        "after": [
          {
            "result": {
              "duration": 45125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2772517500,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.2}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4798220709,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5064700084,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.2.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2405642834,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 80000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;4",
        "after": [
          {
            "result": {
              "duration": 111458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3650401667,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.3}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4991983500,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2992712333,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.3.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3.ans.1}##${myRewards.faq.3.ans.2}##${myRewards.faq.3.ans.3}##${myRewards.faq.3.ans.4}##${myRewards.faq.3.ans.5}##${myRewards.faq.3.ans.6}##${myRewards.faq.3.ans.7}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3850316375,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 90,
            "value": "#      | ${myRewards.faq.4.2}##${myRewards.faq.4.3} | ${myRewards.faq.4.ans}                                                                                                                                                               | ${myRewards.faq.4.subtext} | ${myRewards.faq.4.ans}         |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 164625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 219708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 91,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;5",
        "after": [
          {
            "result": {
              "duration": 64125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4972910334,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.5}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3118612375,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3713241083,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.5.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5.ans.1}##${myRewards.faq.5.ans.2}##${myRewards.faq.5.ans.3}##${myRewards.faq.5.ans.4}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5510495416,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;6",
        "after": [
          {
            "result": {
              "duration": 4644250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2184886917,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.6}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8250496500,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1575570250,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.6.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3023863541,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 87334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1133875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 93,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;7",
        "after": [
          {
            "result": {
              "duration": 386166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4885273542,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.7}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3779474917,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2391979958,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.7.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4114016084,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 394500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 94,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;8",
        "after": [
          {
            "result": {
              "duration": 74292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2903493250,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.8}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4568261500,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2273830500,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.8.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8.ans.1}##${myRewards.faq.8.ans.2}##${myRewards.faq.8.ans.3}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3750307083,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 95,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;9",
        "after": [
          {
            "result": {
              "duration": 44541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2805140500,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.9}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3349313208,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5271536292,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.9.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2756694500,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 97,
        "name": "navigate back to account screen from my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-rewards-screen",
        "after": [
          {
            "result": {
              "duration": 928750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 49821408750,
              "status": "passed"
            },
            "line": 98,
            "name": "I click on back button on my reward screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInRewardScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008193167,
              "status": "passed"
            },
            "line": 99,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 101,
        "name": "Verify Notification screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-notification-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 31750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3009635834,
              "status": "passed"
            },
            "line": 102,
            "name": "I click on \"${my.notification.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.notification.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3093861583,
              "status": "passed"
            },
            "line": 103,
            "name": "User verify following texts are displayed in My Notification screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnNotificationScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 104
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "navigate back to account screen from Notification screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-notification-screen",
        "after": [
          {
            "result": {
              "duration": 58125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2342349625,
              "status": "passed"
            },
            "line": 107,
            "name": "I click on back button on notification screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005722459,
              "status": "passed"
            },
            "line": 108,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify my feedback screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 521500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2218872875,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on \"${my.feedback.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.feedback.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8968956458,
              "status": "passed"
            },
            "line": 112,
            "name": "User verify following texts are displayed in My feedback screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyFeedbackScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${feedback.static.text}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${feedback.improvement}"
                ],
                "line": 114
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17466533750,
              "status": "passed"
            },
            "line": 115,
            "name": "User verify following feedback options are displayed in My feedback screen",
            "match": {
              "location": "ManageProfileSteps.verifyFeedbackOptionOnMyFeedbackScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${aime.text}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${health.article.text}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${bmi.text.uppercase}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${wrinkle.text}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "${health.assessment.text}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${babylon.symptom.checker}"
                ],
                "line": 121
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2364817000,
              "status": "passed"
            },
            "line": 122,
            "name": "I verify following edit box sample text is displayed in account screen",
            "match": {
              "location": "ManageProfileSteps.verifySampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${share.thought.text}"
                ],
                "line": 123
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 126,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 54750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2462055375,
              "status": "passed"
            },
            "line": 127,
            "name": "I select \"5\" star in feedback screen",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 10
                }
              ],
              "location": "ManageProfileSteps.selectStarInFeedbackForm(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6225572167,
              "status": "passed"
            },
            "line": 128,
            "name": "I enter feedback",
            "match": {
              "location": "ManageProfileSteps.enterFeedback(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Feedback",
                  "Test_12345"
                ],
                "line": 129
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12165141542,
              "status": "passed"
            },
            "line": 130,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003808583,
              "status": "passed"
            },
            "line": 131,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 64833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 1058875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3778605916,
              "status": "passed"
            },
            "line": 134,
            "name": "I click on \"${pulsePersonalised.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${pulsePersonalised.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002855167,
              "status": "passed"
            },
            "line": 135,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5669524959,
              "status": "passed"
            },
            "line": 136,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${data.privacy.text}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13532637833,
              "status": "passed"
            },
            "line": 139,
            "name": "I verify data and privacy consent in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyDataAndPrivacyConsent(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulse.personalised.consent.text1}"
                ],
                "line": 140
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text2}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text3}"
                ],
                "line": 142
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text4}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text5}"
                ],
                "line": 144
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text6}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text7}"
                ],
                "line": 146
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 841542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "Save the consent with data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-with-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 58542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1802055625,
              "status": "passed"
            },
            "line": 149,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2963659125,
              "status": "passed"
            },
            "line": 150,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5667135041,
              "status": "passed"
            },
            "line": 151,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 152
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1877764834,
              "status": "passed"
            },
            "line": 153,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008951834,
              "status": "passed"
            },
            "line": 154,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Save the consent without data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-without-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 91042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2448504917,
              "status": "passed"
            },
            "line": 157,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1180614917,
              "status": "passed"
            },
            "line": 158,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6996656791,
              "status": "passed"
            },
            "line": 159,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 160
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1359940583,
              "status": "passed"
            },
            "line": 161,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 164,
        "name": "navigate back to account screen from pulse personalised screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-pulse-personalised-screen",
        "after": [
          {
            "result": {
              "duration": 125125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8925558917,
              "status": "passed"
            },
            "line": 165,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003804625,
              "status": "passed"
            },
            "line": 166,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My accounts options in Account screen",
    "description": "1)My wearable\n2)My Rewards\n3)My Notifications\n4)My Feedback\n5)Pulse Personalised",
    "id": "verify-my-accounts-options-in-account-screen",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/PulseMyAccount.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyAccount_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 82125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 12435209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 45333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16034149375,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8153292,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67712657500,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26325948625,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5010927209,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1720043333,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 778875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 860708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6509558875,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78007587792,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1384508250,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5014261042,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9931471459,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24612741959,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 877417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 131833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 127666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22215568250,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 401875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify my setting screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-my-setting-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 27458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2007115791,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1951626417,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on \"${icon.mySettings}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${icon.mySettings}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005170083,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 30,
            "value": "##below steps are not working in Android"
          },
          {
            "line": 31,
            "value": "#    Then User verify following texts are displayed in My Setting screen"
          },
          {
            "line": 32,
            "value": "#      | ${country.text}          |"
          },
          {
            "line": 33,
            "value": "#      | ${country.name}          |"
          },
          {
            "line": 34,
            "value": "#      | ${language.text}         |"
          },
          {
            "line": 35,
            "value": "#      | ${lang.name.text}        |"
          },
          {
            "line": 36,
            "value": "#      | ${change.password.text}  |"
          },
          {
            "line": 37,
            "value": "##      | ${enable.face.auth.text} | 7 |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 21459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "navigate back to account screen from my setting screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;navigate-back-to-account-screen-from-my-setting-screen",
        "after": [
          {
            "result": {
              "duration": 838250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2051723542,
              "status": "passed"
            },
            "line": 40,
            "name": "I click on back button on my settings screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInMySettingScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005253125,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/PulseMySetting.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettings_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "# fitness tab is not available in ios device"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 20875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1110375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9374844458,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12850583,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61400669791,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28349510375,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5011393584,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1774701292,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 639041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 557708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3482379917,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 56382322167,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1356745583,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008500834,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12161383584,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20786818000,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 3896450292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2632125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10516013084,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22202807792,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: My Wearables expected [true] but found [false],\n\tthe expected text is: Track all your activities at the click of a button expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(OptionsInFooterSteps.java:40)\n\tat ✽.Then I verify My Wearables tile on Fitness screen(features/my/fitness/MyWearable.feature:25)\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I verify My Wearables tile on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${fitness.myWearables}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${fitness.myWearables.description}"
                ],
                "line": 27
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I click on Connect Now button on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 29,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${wearables.fitbitText}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.garminText}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/my/fitness/MyWearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@myWearables_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 290666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4369083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1200292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13028360625,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27710458,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62606208042,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32688326084,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5016262667,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1708429209,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 3085625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 257875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5423132500,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77116841875,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5535653542,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007007958,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14706293625,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22101155167,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46361433916,
              "status": "passed"
            },
            "line": 22,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 87136211167,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 866583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 98750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 9994292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 367500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13451527458,
              "status": "passed"
            },
            "line": 26,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5061116875,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117302128208,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 221833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 519625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify the HRA Activity Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-report",
        "after": [
          {
            "result": {
              "duration": 1046917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 208359511875,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRiskDescription}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement1}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement2}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement3}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement4}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 670833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 613833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "Verify the HRA Activity Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-report",
        "after": [
          {
            "result": {
              "duration": 1401167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 67749608208,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 56
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 146584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 133583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 935041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 199803266458,
              "status": "passed"
            },
            "line": 59,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 664125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 140041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 683167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 132879956125,
              "status": "passed"
            },
            "line": 74,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 79
              },
              {
                "comments": [
                  {
                    "line": 80,
                    "value": "#      | ${babylon.hraReport.lowCaffeine}             |"
                  },
                  {
                    "line": 81,
                    "value": "#      | ${babylon.hraReport.lowCaffeine.description} |"
                  }
                ],
                "cells": [
                  "${babylon.hraReport.redMeat}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.redMeat.description}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 508292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6155167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 85,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 5488000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 359250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 122371778834,
              "status": "passed"
            },
            "line": 86,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 87
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.change5}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${babylon.hraReport.change6}"
                ],
                "line": 93
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 317125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 179875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 95,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 1757500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21224277959,
              "status": "passed"
            },
            "line": 96,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7308626750,
              "status": "passed"
            },
            "line": 97,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11055621625,
              "status": "passed"
            },
            "line": 98,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36829567333,
              "status": "passed"
            },
            "line": 100,
            "name": "I verify following text is displayed on HRA report",
            "match": {
              "location": "BabylonSteps.verifyHRAStaticText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "${babylon.hraReport.body.heart}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 103
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 104
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 324125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 664875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 34125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5859387792,
              "status": "passed"
            },
            "line": 107,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 1182989792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 108875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14130574542,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 21804088417,
              "status": "passed"
            },
            "line": 111,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 113
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 49204292416,
              "status": "passed"
            },
            "line": 114,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12751317750,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Nutrition is key to your energy levels and can affect your risk of some medical conditions expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\n\tat ✽.Then I verify the HRA Results are displayed(features/my/health/BabylonHRA_Report.feature:115)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 115,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 116
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 79125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 740708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 118,
        "name": "Navigate back to nutrition screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-nutrition-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 111375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4840183875,
              "status": "passed"
            },
            "line": 119,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15068564541,
              "status": "passed"
            },
            "line": 120,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 618583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 124,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 49750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 89958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9492338416,
              "status": "passed"
            },
            "line": 125,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 1382343000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 324416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14186622167,
              "status": "passed"
            },
            "line": 129,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16990143584,
              "status": "passed"
            },
            "line": 130,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 131
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 132
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12930268666,
              "status": "passed"
            },
            "line": 133,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25305790459,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Exercise-wise, I can expected [true] but found [false],\n\tthe expected text is: How much time each week do you do moderate exercise like walking, casual cycling or cleaning? expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\n\tat ✽.Then I verify the HRA Results are displayed(features/my/health/BabylonHRA_Report.feature:134)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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01rvMFox1jTu7r811XTNknmuYqVX5P9MDIzel1JV1rJ7XYKj8yg3PjT/wsleP7DdtRUMHPc4cOy8yeH8Vbf7vLfzZ/5vrjmc304dnT/iO9dIPWleMS3Q3t610W+v5Pz/Qp13sPc4e+77R2nlX0vNrYaqyl5HrDpagYpWoKIVqAZ1/gAMfLtBrguAu6AVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoaAUqWoGKVqCiFahoBSpagYpWoKIVqGgFKlqBilagohWoHr5WzGbzmjVrlmiWDkgrVqy4fv266wsb8B6+Vj777LNBD7/ly5e7vrAB7+Frpbq6evPmzRseZhs3bTKZTK4vbMB7+FrBg0IrUNEKVP8PJO1HViO7v84AAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 134,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 135
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 136
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 108584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3247417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Navigate back to Activity screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-activity-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 4273875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 525667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5891142666,
              "status": "passed"
            },
            "line": 139,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13675838667,
              "status": "passed"
            },
            "line": 140,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDesease}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 142
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 926791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 702833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 33292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6875568375,
              "status": "passed"
            },
            "line": 145,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 266792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 1275392292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3316000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15281042292,
              "status": "passed"
            },
            "line": 149,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15453587875,
              "status": "passed"
            },
            "line": 150,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 151
              },
              {
                "comments": [
                  {
                    "line": 152,
                    "value": "#      | ${babylon.start.assesment}         |"
                  }
                ],
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 153
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5020158958,
              "status": "passed"
            },
            "line": 154,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14972670250,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: start by looking at your current mood, stress levels and things that can affect good mental health expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\n\tat ✽.Then I verify the HRA Results are displayed(features/my/health/BabylonHRA_Report.feature:155)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 155,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 156
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 129291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1306625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 158,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 996917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4593574500,
              "status": "passed"
            },
            "line": 159,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/my/health/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 122292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 134042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1215333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 480625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10588408625,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8880292,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74444294834,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31700015083,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2036637750,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2949191542,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 12,
            "value": "#    Then I verify below language options on toggle bar as per specified lbu on login page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 90417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 2102666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5997640542,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79480580625,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1277467667,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5016147959,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19312221291,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28084716792,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 387750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8780625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "User should be able to access Calendar screen",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;user-should-be-able-to-access-calendar-screen",
        "after": [
          {
            "result": {
              "duration": 2578209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3008750667,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 51715540583,
              "status": "passed"
            },
            "line": 27,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6421404250,
              "status": "passed"
            },
            "line": 28,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22002310250,
              "status": "passed"
            },
            "line": 29,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3012140875,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16238430292,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${calendar.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${no.events.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5729502125,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on events dropdown button in calendar screen",
            "match": {
              "location": "LocationSteps.iClicksOnEventsButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53971552000,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify the following texts \"Calendar events\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Calendar events",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${medicine.reminders.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${appointments.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${vaccination.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${workout.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${pulse.tv.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${policy.remainder.text}"
                ],
                "line": 41
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can access calendar under health section",
    "description": "",
    "id": "verify-that-user-can-access-calendar-under-health-section",
    "keyword": "Feature",
    "uri": "features/my/health/Calendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@my_calendar"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "comments": [
          {
            "line": 6,
            "value": "#  This could fail due to PCAONEPULSE-23264"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 470250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 135959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 7,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 6528000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 164120833,
              "status": "passed"
            },
            "line": 8,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1316541,
              "status": "passed"
            },
            "line": 9,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13906052000,
              "status": "passed"
            },
            "line": 10,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007350500,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69665673916,
              "status": "passed"
            },
            "line": 12,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010745625,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28867022125,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009971000,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8059194666,
              "status": "passed"
            },
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004728042,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 43970695250,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1724560583,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5826017417,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43740688375,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010357125,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 161259117209,
              "status": "passed"
            },
            "line": 27,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27061294458,
              "status": "passed"
            },
            "line": 28,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4009267833,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 826875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 98458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "User should be able to access Chinese Medicine screen",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-access-chinese-medicine-screen",
        "after": [
          {
            "result": {
              "duration": 3477917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 58500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36531368208,
              "status": "passed"
            },
            "line": 32,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11790805833,
              "status": "passed"
            },
            "line": 33,
            "name": "I click on Chinese Medicine button",
            "match": {
              "location": "ChineseMedicineSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13649379542,
              "status": "passed"
            },
            "line": 34,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.welcomeMessage}"
                ],
                "line": 35
              },
              {
                "comments": [
                  {
                    "line": 36,
                    "value": "#      | ${FirstName}                   |"
                  }
                ],
                "cells": [
                  "${chineseMedicine.statement}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${chineseMedicine.pruLife}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${chineseMedicine.pruLife.research}"
                ],
                "line": 39
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4092027416,
              "status": "passed"
            },
            "line": 40,
            "name": "I click on Continue button on Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 95042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 221416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "Verify the carousel on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-carousel-on-chinese-medicine-journey;;2",
        "after": [
          {
            "result": {
              "duration": 178209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4442402417,
              "status": "passed"
            },
            "line": 44,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page1.text}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2473082958,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following button are displayed on chinese medicine carousal",
            "match": {
              "location": "ChineseMedicineSteps.chineseMedicineBtnOncarosuel(DataTable)"
            },
            "matchedColumns": [
              2
            ],
            "rows": [
              {
                "cells": [
                  "carousel1##${chineseMedicine.skipButton}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14238700334,
              "status": "passed"
            },
            "line": 48,
            "name": "I swipe to Right for chinese medicine on carousal \"${chineseMedicine.page1.partialText}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.page1.partialText}",
                  "offset": 51
                }
              ],
              "location": "ChineseMedicineSteps.swipeLeftOrRightInChineseMed(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 374416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify the carousel on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-carousel-on-chinese-medicine-journey;;3",
        "after": [
          {
            "result": {
              "duration": 783375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1329928333,
              "status": "passed"
            },
            "line": 44,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page2.text}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2497388042,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following button are displayed on chinese medicine carousal",
            "match": {
              "location": "ChineseMedicineSteps.chineseMedicineBtnOncarosuel(DataTable)"
            },
            "matchedColumns": [
              2
            ],
            "rows": [
              {
                "cells": [
                  "carousel2##${chineseMedicine.skipButton}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13220039917,
              "status": "passed"
            },
            "line": 48,
            "name": "I swipe to Right for chinese medicine on carousal \"${chineseMedicine.page2.partialText}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.page2.partialText}",
                  "offset": 51
                }
              ],
              "location": "ChineseMedicineSteps.swipeLeftOrRightInChineseMed(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "#      | ${chineseMedicine.page3.text} | ${chineseMedicine.page3.partialText} | carousel3##${chineseMedicine.startAssessmentBtn} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 81792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 935750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "verify the text and button on final assessment carousel",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-text-and-button-on-final-assessment-carousel",
        "after": [
          {
            "result": {
              "duration": 107458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1327404167,
              "status": "passed"
            },
            "line": 56,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page3.text}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4319668333,
              "status": "passed"
            },
            "line": 58,
            "name": "I verify following button are displayed on chinese medicine carousal",
            "match": {
              "location": "ChineseMedicineSteps.chineseMedicineBtnOncarosuel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "carousel3##${chineseMedicine.startAssessmentBtn}"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 88042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "User should be able to complete Chinese Medicine profile",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-complete-chinese-medicine-profile",
        "after": [
          {
            "result": {
              "duration": 4637424291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1791084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5414899875,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on Start Assessment button on Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnStartAssessment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5010008542,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6205039417,
              "status": "passed"
            },
            "line": 64,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.profile.title}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${chineseMedicine.profile.description}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${chineseMedicine.profile.mandatoryFields}"
                ],
                "line": 67
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34186426917,
              "status": "passed"
            },
            "line": 68,
            "name": "change Chinese Medicine user profile details",
            "match": {
              "location": "ChineseMedicineSteps.editChineseMedUserProfile(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "City",
                  "${chineseMedicine.profile.cityValue}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Smoking Habits",
                  "${chineseMedicine.profile.smokingHabitsValue}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Drinking Habits",
                  "${chineseMedicine.profile.drinkingHabitsValue}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Exercise Habits",
                  "${chineseMedicine.profile.exerciseHabitsValue}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7810620708,
              "status": "passed"
            },
            "line": 73,
            "name": "I click on Next button on Chinese Medicine Profile screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnNext()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20279816958,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Based on your experience in past 3 months expected [true] but found [false],\n\tthe expected text is: I feel energetic most of the time. expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(ChineseMedicineSteps.java:49)\n\tat ✽.When User verify following texts are displayed in Chinese Medicine screen(features/my/health/ChineseMedicine.feature:74)\n",
              "status": "failed"
            },
            "line": 74,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.question.1}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${chineseMedicine.statement.1}"
                ],
                "line": 76
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 77,
            "name": "I verify following answer options are displayed on Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyAnswerOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.answer.option1}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option2}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option3}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option4}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option5}"
                ],
                "line": 82
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 187750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1320666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 91,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;2",
        "after": [
          {
            "result": {
              "duration": 2661167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8872454708,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.1}\" for the question \"${chineseMedicine.question.1}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.1}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.1}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 77500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;3",
        "after": [
          {
            "result": {
              "duration": 181208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 44167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6486741458,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.2}\" for the question \"${chineseMedicine.question.2}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.2}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.2}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 70084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 93,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;4",
        "after": [
          {
            "result": {
              "duration": 243458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6286420458,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.3}\" for the question \"${chineseMedicine.question.3}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.3}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.3}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 173333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 94,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;5",
        "after": [
          {
            "result": {
              "duration": 208417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6868254916,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.4}\" for the question \"${chineseMedicine.question.4}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.4}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.4}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 86292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 68833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 95,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;6",
        "after": [
          {
            "result": {
              "duration": 261667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6092277750,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.5}\" for the question \"${chineseMedicine.question.5}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.5}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.5}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 55291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 96,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;7",
        "after": [
          {
            "result": {
              "duration": 100875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8240952625,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.6}\" for the question \"${chineseMedicine.question.6}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.6}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.6}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 97,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;8",
        "after": [
          {
            "result": {
              "duration": 544875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6920348209,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.7}\" for the question \"${chineseMedicine.question.7}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.7}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.7}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 716625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;9",
        "after": [
          {
            "result": {
              "duration": 120542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6355964459,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.8}\" for the question \"${chineseMedicine.question.8}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.8}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.8}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 901166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 99,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;10",
        "after": [
          {
            "result": {
              "duration": 191541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6453670208,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.9}\" for the question \"${chineseMedicine.question.9}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.9}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.9}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 67750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 100,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;11",
        "after": [
          {
            "result": {
              "duration": 121084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6167793458,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.10}\" for the question \"${chineseMedicine.question.10}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.10}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.10}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 108084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 383000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 101,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;12",
        "after": [
          {
            "result": {
              "duration": 123875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6436582333,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.11}\" for the question \"${chineseMedicine.question.11}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.11}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.11}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 103292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 102,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;13",
        "after": [
          {
            "result": {
              "duration": 669583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10121637125,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.12}\" for the question \"${chineseMedicine.question.12}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.12}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.12}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 377958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 452042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;14",
        "after": [
          {
            "result": {
              "duration": 117917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4400344292,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.13}\" for the question \"${chineseMedicine.question.13}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.13}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.13}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 163417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;15",
        "after": [
          {
            "result": {
              "duration": 167916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6226461292,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.14}\" for the question \"${chineseMedicine.question.14}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.14}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.14}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 7802542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2394959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 105,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;16",
        "after": [
          {
            "result": {
              "duration": 81958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8040846000,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.15}\" for the question \"${chineseMedicine.question.15}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.15}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.15}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 526959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;17",
        "after": [
          {
            "result": {
              "duration": 676625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 256583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7241073541,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.16}\" for the question \"${chineseMedicine.question.16}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.16}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.16}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;18",
        "after": [
          {
            "result": {
              "duration": 262958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6365391500,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.17}\" for the question \"${chineseMedicine.question.17}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.17}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.17}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 109583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 117417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;19",
        "after": [
          {
            "result": {
              "duration": 108084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5887913916,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.18}\" for the question \"${chineseMedicine.question.18}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.18}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.18}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;20",
        "after": [
          {
            "result": {
              "duration": 584917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6414414375,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.19}\" for the question \"${chineseMedicine.question.19}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.19}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.19}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 58958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 53625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;21",
        "after": [
          {
            "result": {
              "duration": 206333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6350452791,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.20}\" for the question \"${chineseMedicine.question.20}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.20}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.20}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 60917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 111,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;22",
        "after": [
          {
            "result": {
              "duration": 2387042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9573822250,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.21}\" for the question \"${chineseMedicine.question.21}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.21}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.21}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 559583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 319625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;23",
        "after": [
          {
            "result": {
              "duration": 124084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4196321792,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.22}\" for the question \"${chineseMedicine.question.22}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.22}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.22}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;24",
        "after": [
          {
            "result": {
              "duration": 606417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5992085458,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.23}\" for the question \"${chineseMedicine.question.23}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.23}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.23}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1367000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 69209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 114,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;25",
        "after": [
          {
            "result": {
              "duration": 184625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9161219792,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.24}\" for the question \"${chineseMedicine.question.24}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.24}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.24}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 141083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 61750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 115,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;26",
        "after": [
          {
            "result": {
              "duration": 107583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5559308125,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.25}\" for the question \"${chineseMedicine.question.25}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.25}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.25}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 419000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 116,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;27",
        "after": [
          {
            "result": {
              "duration": 414958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7121387584,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.26}\" for the question \"${chineseMedicine.question.26}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.26}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.26}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 117,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;28",
        "after": [
          {
            "result": {
              "duration": 2966708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6000492292,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.27}\" for the question \"${chineseMedicine.question.27}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.27}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.27}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 118,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;29",
        "after": [
          {
            "result": {
              "duration": 195542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6092200792,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.28}\" for the question \"${chineseMedicine.question.28}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.28}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.28}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 628333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 119,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;30",
        "after": [
          {
            "result": {
              "duration": 479375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6621323750,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.29}\" for the question \"${chineseMedicine.question.29}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.29}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.29}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 414000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 120,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;31",
        "after": [
          {
            "result": {
              "duration": 730000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6655278708,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.30}\" for the question \"${chineseMedicine.question.30}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.30}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.30}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 415333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 780875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 121,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;32",
        "after": [
          {
            "result": {
              "duration": 263250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6065288958,
              "status": "passed"
            },
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.31}\" for the question \"${chineseMedicine.question.31}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.31}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.31}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 384833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 63625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 122,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;33",
        "after": [
          {
            "result": {
              "duration": 1677385625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2242958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14026148750,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My nose and forehead frequently get oily\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.32}\" for the question \"${chineseMedicine.question.32}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.32}\" for the question \"${chineseMedicine.question.32}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.32}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.32}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 114333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1157209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;34",
        "after": [
          {
            "result": {
              "duration": 835455917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1074500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11866269917,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I get pimples easily\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.33}\" for the question \"${chineseMedicine.question.33}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.33}\" for the question \"${chineseMedicine.question.33}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.33}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.33}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 138083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 938584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 124,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;35",
        "after": [
          {
            "result": {
              "duration": 2399746833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1210541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13074548667,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I get panda eyes (dark eye bags) easily\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.34}\" for the question \"${chineseMedicine.question.34}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.34}\" for the question \"${chineseMedicine.question.34}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.34}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.34}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 490667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1148125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 125,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;36",
        "after": [
          {
            "result": {
              "duration": 1694532584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1611583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12081717875,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My lip color is generally gloomy / purplish / blueish\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.35}\" for the question \"${chineseMedicine.question.35}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.35}\" for the question \"${chineseMedicine.question.35}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.35}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.35}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 145625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1628667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 126,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;37",
        "after": [
          {
            "result": {
              "duration": 2312136625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2043709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15764235792,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My lip color is reddish\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.36}\" for the question \"${chineseMedicine.question.36}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.36}\" for the question \"${chineseMedicine.question.36}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.36}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.36}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 503458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1174500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 127,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;38",
        "after": [
          {
            "result": {
              "duration": 781268417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2119333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10374617834,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My lip color is slightly pale or whiteish\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.37}\" for the question \"${chineseMedicine.question.37}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.37}\" for the question \"${chineseMedicine.question.37}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.37}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.37}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 923250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1366791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;39",
        "after": [
          {
            "result": {
              "duration": 3067075875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1312209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11124338584,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have puffy eyelids\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.38}\" for the question \"${chineseMedicine.question.38}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.38}\" for the question \"${chineseMedicine.question.38}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.38}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.38}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 800958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 897458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 129,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;40",
        "after": [
          {
            "result": {
              "duration": 762382208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1343750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11948075083,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have dry eyes or blurry vision\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.39}\" for the question \"${chineseMedicine.question.39}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.39}\" for the question \"${chineseMedicine.question.39}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.39}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.39}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 203625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1970083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;41",
        "after": [
          {
            "result": {
              "duration": 776634041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1846500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12289016709,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I tend to sneeze even if I am not sick\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.40}\" for the question \"${chineseMedicine.question.40}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.40}\" for the question \"${chineseMedicine.question.40}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.40}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.40}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 257917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1796959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 131,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;42",
        "after": [
          {
            "result": {
              "duration": 833093000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3360625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12731675208,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My nose gets clooged or runny even if I am not sick\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.41}\" for the question \"${chineseMedicine.question.41}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.41}\" for the question \"${chineseMedicine.question.41}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.41}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.41}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 221333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2011166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 132,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;43",
        "after": [
          {
            "result": {
              "duration": 2750452375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1417375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12377199708,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have a dry tongue\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.42}\" for the question \"${chineseMedicine.question.42}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.42}\" for the question \"${chineseMedicine.question.42}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.42}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.42}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 894125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1302792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;44",
        "after": [
          {
            "result": {
              "duration": 1917001959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1773584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11745130583,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have sticky saliva\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.43}\" for the question \"${chineseMedicine.question.43}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.43}\" for the question \"${chineseMedicine.question.43}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.43}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.43}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 567792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2287417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 134,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;45",
        "after": [
          {
            "result": {
              "duration": 1866074041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1772041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12204752333,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I tend to have a bitter taste in my mouth\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.44}\" for the question \"${chineseMedicine.question.44}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.44}\" for the question \"${chineseMedicine.question.44}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.44}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.44}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 444500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1097250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 135,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;46",
        "after": [
          {
            "result": {
              "duration": 778260750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6087166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12722647417,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"The surface of my tongue feels sticky\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.45}\" for the question \"${chineseMedicine.question.45}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.45}\" for the question \"${chineseMedicine.question.45}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.45}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.45}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 389292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1940584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 136,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;47",
        "after": [
          {
            "result": {
              "duration": 2100982250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1736708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12440684958,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I tend to have phlegm in my throat even if I am not sick\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.46}\" for the question \"${chineseMedicine.question.46}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.46}\" for the question \"${chineseMedicine.question.46}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.46}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.46}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 139959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 846375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 137,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;48",
        "after": [
          {
            "result": {
              "duration": 850657209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9762333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11941203166,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I tend to have throat irritating even if I am not sick\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.47}\" for the question \"${chineseMedicine.question.47}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.47}\" for the question \"${chineseMedicine.question.47}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.47}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.47}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 299416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1680458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;49",
        "after": [
          {
            "result": {
              "duration": 1472680333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1845375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14644667583,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have tightness in my chest\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.48}\" for the question \"${chineseMedicine.question.48}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.48}\" for the question \"${chineseMedicine.question.48}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.48}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.48}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 175125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 918417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 139,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;50",
        "after": [
          {
            "result": {
              "duration": 683121792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1728959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13857752667,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I have asthma or feel the need to occassionally take deep breaths\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.49}\" for the question \"${chineseMedicine.question.49}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.49}\" for the question \"${chineseMedicine.question.49}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.49}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.49}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 108625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1119459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 140,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;51",
        "after": [
          {
            "result": {
              "duration": 1480366417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1730958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10271238917,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"l feel conscious of sudden heart palpitations or increased heartbeat\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.50}\" for the question \"${chineseMedicine.question.50}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.50}\" for the question \"${chineseMedicine.question.50}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.50}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.50}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 139125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 861125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 141,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;52",
        "after": [
          {
            "result": {
              "duration": 3505307625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1284459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11413535750,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I feel pain at the side of my chest or breasts\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.51}\" for the question \"${chineseMedicine.question.51}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.51}\" for the question \"${chineseMedicine.question.51}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.51}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.51}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 105292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 779583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 142,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;53",
        "after": [
          {
            "result": {
              "duration": 1314513375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1041791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10858031291,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My stomach fat is tender\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.52}\" for the question \"${chineseMedicine.question.52}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.52}\" for the question \"${chineseMedicine.question.52}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.52}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.52}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 190708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1856917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 143,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;54",
        "after": [
          {
            "result": {
              "duration": 1494016042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1159667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12513406000,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My abdomen\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.53}\" for the question \"${chineseMedicine.question.53}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.53}\" for the question \"${chineseMedicine.question.53}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.53}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.53}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 596000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1910000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;55",
        "after": [
          {
            "result": {
              "duration": 3583801792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2385917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11576170666,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I frequently get diarhea or stomach pains after consuming cold food or beverages\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.54}\" for the question \"${chineseMedicine.question.54}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.54}\" for the question \"${chineseMedicine.question.54}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.54}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.54}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 444792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1172417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 145,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;56",
        "after": [
          {
            "result": {
              "duration": 748771000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1742334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11354528583,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I get constipations\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.55}\" for the question \"${chineseMedicine.question.55}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.55}\" for the question \"${chineseMedicine.question.55}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.55}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.55}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 160000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 934542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;57",
        "after": [
          {
            "result": {
              "duration": 2901645375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1444542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12102784708,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I feel that my feces are sticky and not clean\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.56}\" for the question \"${chineseMedicine.question.56}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.56}\" for the question \"${chineseMedicine.question.56}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.56}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.56}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 124166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1204041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 147,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;58",
        "after": [
          {
            "result": {
              "duration": 2899025542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1447084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11744969708,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"Apart from the first urination in the morning\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.57}\" for the question \"${chineseMedicine.question.57}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.57}\" for the question \"${chineseMedicine.question.57}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.57}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.57}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 130583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1150958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;59",
        "after": [
          {
            "result": {
              "duration": 814244333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1610625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11999446458,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"I feel feverish on my hands\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.58}\" for the question \"${chineseMedicine.question.58}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.58}\" for the question \"${chineseMedicine.question.58}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.58}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.58}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 194958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1284584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;60",
        "after": [
          {
            "result": {
              "duration": 3088335708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1191417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12954347292,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My feet and hands get cold easily\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.59}\" for the question \"${chineseMedicine.question.59}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.59}\" for the question \"${chineseMedicine.question.59}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.59}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.59}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 465416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1148917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 150,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;61",
        "after": [
          {
            "result": {
              "duration": 923644458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1342333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11343683292,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My body and limbs feel numb\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.60}\" for the question \"${chineseMedicine.question.60}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.60}\" for the question \"${chineseMedicine.question.60}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.60}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.60}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 542125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1766834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 151,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;62",
        "after": [
          {
            "result": {
              "duration": 1725773167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4858209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11630597417,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My face\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.61}\" for the question \"${chineseMedicine.question.61}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.61}\" for the question \"${chineseMedicine.question.61}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.61}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.61}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 177125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6512334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 152,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;63",
        "after": [
          {
            "result": {
              "duration": 1556271333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 910708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13085105166,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My body feels pain easily\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.62}\" for the question \"${chineseMedicine.question.62}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.62}\" for the question \"${chineseMedicine.question.62}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.62}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.62}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 143750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1493459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 153,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;64",
        "after": [
          {
            "result": {
              "duration": 954822750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1314750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10990768375,
              "error_message": "java.lang.AssertionError: Unable to find the Question //XCUIElementTypeStaticText[contains(@name,\"My scrotum feels hot (Limited to men answer)\")] and Answer //XCUIElementTypeOther[@name\u003d\"Occassionally\"]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.handleQnA(ChineseMedicineScreen.java:167)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.handleQnA(ChineseMedicineSteps.java:104)\n\tat ✽.And user selects \"${chineseMedicine.answer.63}\" for the question \"${chineseMedicine.question.63}\"(features/my/health/ChineseMedicine.feature:88)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "user selects \"${chineseMedicine.answer.63}\" for the question \"${chineseMedicine.question.63}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.63}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.63}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 151459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1884459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Verify the Assessment completion screen",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-assessment-completion-screen",
        "after": [
          {
            "result": {
              "duration": 1005739125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1940166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010410708,
              "status": "passed"
            },
            "line": 157,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37413695625,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Great!! expected [true] but found [false],\n\tthe expected text is: You\u0027ve completed the assessment expected [true] but found [false],\n\tthe expected text is: This assessment and health related advice are provided by \u0027Research Center of Big Data, College of Management, Taipei Medical University\u0027 in cooperation with medical doctors. It is only for personal health management reference and does not represent a medical diagnosis. If you feel unwell, please seek the medical doctor\u0027s advice for any health conditions! expected [true] but found [false],\n\tthe expected text is: Your body constitution will change based on your diets, lifestyle, and environment. It is recommended to do the Chinese Constitution Assessment at least every three months to know whether your constitution has improved so as to master your own health! expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(ChineseMedicineSteps.java:49)\n\tat ✽.Then User verify following texts are displayed in Chinese Medicine screen(features/my/health/ChineseMedicine.feature:158)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 158,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.header}"
                ],
                "line": 159
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.subTitle}"
                ],
                "line": 160
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.description1}"
                ],
                "line": 161
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.description2}"
                ],
                "line": 162
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 173625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1321959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 165,
        "name": "Verify the user can view the Assessment Record",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-user-can-view-the-assessment-record",
        "after": [
          {
            "result": {
              "duration": 1114775792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1032375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10645112166,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027Prudentials-MacBook-Pro.local\u0027, ip: \u00272401:7400:c802:5759:4d06:f256:df2:6ac3%en0\u0027, os.name: \u0027Mac OS X\u0027, os.arch: \u0027x86_64\u0027, os.version: \u002710.16\u0027, java.version: \u002711.0.10\u0027\nDriver info: io.appium.java_client.ios.IOSDriver\nCapabilities {autoDismissAlerts: false, automationName: XCUITest, browserName: , bundleId: com.prudential.pulse.uat, databaseEnabled: false, deviceName: iOS-Test, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 10000, noReset: false, platform: MAC, platformName: iOS, platformVersion: 14.4.1, takesScreenshot: true, udid: 00008101-001145000212001E, webStorageEnabled: false}\nSession ID: f45511af-ac0c-4940-ad1f-e7fe5c3ae18f\n*** Element info: {Using\u003dxpath, value\u003d//XCUIElementTypeOther[@name\u003d\"View Results\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElementByXPath(IOSDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:165)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.clickViewResultsButton(ChineseMedicineScreen.java:70)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.clickOnViewResults(ChineseMedicineSteps.java:121)\n\tat ✽.When user clicks on View Results button on Chinese Medicine Assessment screen(features/my/health/ChineseMedicine.feature:166)\n",
              "status": "failed"
            },
            "line": 166,
            "name": "user clicks on View Results button on Chinese Medicine Assessment screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnViewResults()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 167,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.assessment.header}"
                ],
                "line": 168
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.subHeader}"
                ],
                "line": 169
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status}"
                ],
                "line": 170
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.subStatus}"
                ],
                "line": 171
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status1}"
                ],
                "line": 172
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status2}"
                ],
                "line": 173
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status3}"
                ],
                "line": 174
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.constitution.advice}"
                ],
                "line": 175
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 432542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1567417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 178,
        "name": "Verify the Assessment Summary",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-assessment-summary",
        "after": [
          {
            "result": {
              "duration": 949104959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3033667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21625009584,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Assessment Summary expected [true] but found [false],\n\tthe expected text is: Your body has moderate deficiency of yang qi. You may easily feel weak and chills, and have cold limbs. This is a symptom of moderate yang deficiency.It is recommended that your eating habits be based on the principle of warmth, and you should eat more glutinous rice, black beans, yams, ginger and other foods, maintain the long-term regular habit of medium intensity exercise, and have daily care and acupoint care matching with four seasons, so that you can gradually improve your body constitution. expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(ChineseMedicineSteps.java:49)\n\tat ✽.Then User verify following texts are displayed in Chinese Medicine screen(features/my/health/ChineseMedicine.feature:179)\n",
              "status": "failed"
            },
            "line": 179,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.assessment.summary.title}"
                ],
                "line": 180
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.summary.description}"
                ],
                "line": 181
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 182,
            "name": "user clicks on View More button on Assessment Record screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnViewMore()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 502291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1278333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 189,
        "name": "Verify the \"Constitution\" Details of the Assessment",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-\"\u003ctitle\u003e\"-details-of-the-assessment;;2",
        "after": [
          {
            "result": {
              "duration": 2221903584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1021500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9191074375,
              "error_message": "java.lang.AssertionError: Unable to find the Condition Meaning of Yang-deficiency constitution.\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.verifyAssessmentDetails(ChineseMedicineScreen.java:196)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.verifyAssessmentDetails(ChineseMedicineSteps.java:132)\n\tat ✽.Then User verify Assessment Details for the \"${chineseMedicine.assessment.details.constitution}\" and \"${chineseMedicine.assessment.details.constitutionDescription}\"(features/my/health/ChineseMedicine.feature:186)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 186,
            "name": "User verify Assessment Details for the \"${chineseMedicine.assessment.details.constitution}\" and \"${chineseMedicine.assessment.details.constitutionDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.assessment.details.constitution}",
                  "offset": 40
                },
                {
                  "val": "${chineseMedicine.assessment.details.constitutionDescription}",
                  "offset": 97
                }
              ],
              "location": "ChineseMedicineSteps.verifyAssessmentDetails(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1003583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 190,
        "name": "Verify the \"Change In Tongue\" Details of the Assessment",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-\"\u003ctitle\u003e\"-details-of-the-assessment;;3",
        "after": [
          {
            "result": {
              "duration": 832814125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1695166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8391591958,
              "error_message": "java.lang.AssertionError: Unable to find the Condition Change in the tongue of Yang-deficiency constitution.\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat com.onepulse.app.screens.ChineseMedicineScreen.verifyAssessmentDetails(ChineseMedicineScreen.java:196)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ChineseMedicineSteps.verifyAssessmentDetails(ChineseMedicineSteps.java:132)\n\tat ✽.Then User verify Assessment Details for the \"${chineseMedicine.assessment.details.changeInTongue}\" and \"${chineseMedicine.assessment.details.changeInTongueDescription}\"(features/my/health/ChineseMedicine.feature:186)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 186,
            "name": "User verify Assessment Details for the \"${chineseMedicine.assessment.details.changeInTongue}\" and \"${chineseMedicine.assessment.details.changeInTongueDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.assessment.details.changeInTongue}",
                  "offset": 40
                },
                {
                  "val": "${chineseMedicine.assessment.details.changeInTongueDescription}",
                  "offset": 99
                }
              ],
              "location": "ChineseMedicineSteps.verifyAssessmentDetails(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      }
    ],
    "name": "Verify that user can access Chinese Medicine feature",
    "description": "",
    "id": "verify-that-user-can-access-chinese-medicine-feature",
    "keyword": "Feature",
    "uri": "features/my/health/ChineseMedicine.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@ChineseMedicine"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 360875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1700666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 9614333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 414833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 56833875,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 650000,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15472306833,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56837611459,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2017587708,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23471389833,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009640833,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8960599042,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36957909291,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2028457750,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8062756083,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38611910875,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008685042,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 139844147875,
              "status": "passed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23081471167,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4010805625,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 95125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 789500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 97084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4945335875,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17303902792,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    Then I click the Dietician in Health Screen"
              }
            ],
            "line": 30,
            "name": "I click the Dietician tab for my in Health Screen",
            "match": {
              "location": "DieticianSteps.clickOnMyDieticianTab()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 57667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Select the expert type as doctor and navigate to next screen",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;select-the-expert-type-as-doctor-and-navigate-to-next-screen",
        "after": [
          {
            "result": {
              "duration": 2112000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 576833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9888892208,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${choose.expertise.text}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${select.expert.type}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${what.expert.text}"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32853940875,
              "status": "passed"
            },
            "line": 37,
            "name": "I clicks on \"${doc.txt}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${doc.txt}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2439215917,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008388292,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3774427500,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${what.isyour.service.num.text}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${complete.details.text}"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5682079500,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterservice.num.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${entername.of.institution.text}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5652125,
              "status": "passed"
            },
            "line": 46,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "service num",
                  "05"
                ],
                "line": 47
              },
              {
                "cells": [
                  "issuing org",
                  "test org"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17720256875,
              "status": "passed"
            },
            "line": 49,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${service.num.text}",
                  "${service num}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${issuing.org.text}",
                  "${issuing org}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${valid.till.text}",
                  "01-01-2030"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5047840000,
              "status": "passed"
            },
            "line": 53,
            "name": "I click on field label \"${valid.till.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${valid.till.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2524249916,
              "status": "passed"
            },
            "line": 54,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 147000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 342375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 118958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10138853125,
              "status": "passed"
            },
            "line": 57,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${what.isyour.specialisation}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${specility.to.provide}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${choose.list.text}"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11340501833,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify following specialisation options are displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifySpecialisationOptionsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${mental.health.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${psychologist.text}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${general.physician.text}"
                ],
                "line": 64
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8923057167,
              "status": "passed"
            },
            "line": 65,
            "name": "I enter \"${physician.text}\" speciality on specilisation screen And select \"${general.physician.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${physician.text}",
                  "offset": 9
                },
                {
                  "val": "${general.physician.text}",
                  "offset": 75
                }
              ],
              "location": "DieticianSteps.searchAndSelectSpeciality(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5344260334,
              "status": "passed"
            },
            "line": 66,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4401504916,
              "status": "passed"
            },
            "line": 67,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.super.specialisation.text}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${other.specialisation.text}"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1928209,
              "status": "passed"
            },
            "line": 70,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "specialisation",
                  "Hypertension"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4497087458,
              "status": "passed"
            },
            "line": 72,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.super.specialisation.text}",
                  "${specialisation}"
                ],
                "line": 73
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4279709041,
              "status": "passed"
            },
            "line": 74,
            "name": "I click on field label \"${enter.super.specialisation.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${enter.super.specialisation.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4173083541,
              "status": "passed"
            },
            "line": 75,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 93042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5749147917,
              "status": "passed"
            },
            "line": 78,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${education.details.text}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${add.degree.text}"
                ],
                "line": 80
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6913414375,
              "status": "passed"
            },
            "line": 81,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.degree.name.text}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${enter.field.of.study.text}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${institution.name.enter.text}"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18307127792,
              "status": "passed"
            },
            "line": 85,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${degree1.text}",
                  "MBBS"
                ],
                "line": 86
              },
              {
                "cells": [
                  "${year.text}",
                  "2001"
                ],
                "line": 87
              },
              {
                "cells": [
                  "${university.text}",
                  "test university"
                ],
                "line": 88
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5692957416,
              "status": "passed"
            },
            "line": 89,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.field.of.study.text}",
                  "physician"
                ],
                "line": 90
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4467103667,
              "status": "passed"
            },
            "line": 91,
            "name": "I click on field label \"${education.details.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${education.details.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3635808375,
              "status": "passed"
            },
            "line": 92,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 94,
        "name": "Verify User should be able to navigate to Add experience page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-add-experience-page",
        "after": [
          {
            "result": {
              "duration": 51042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6336742708,
              "status": "passed"
            },
            "line": 95,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${add.experience.txt}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "${share.experience.details}"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1947547083,
              "status": "passed"
            },
            "line": 98,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterHospital.text}"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4088585250,
              "status": "passed"
            },
            "line": 100,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${profile.title.text}",
                  "Test"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7006624625,
              "status": "passed"
            },
            "line": 102,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${experience1.text}",
                  "Test University"
                ],
                "line": 103
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6292998667,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterLocation.text}",
                  "${country.name}"
                ],
                "line": 105
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6559394125,
              "status": "passed"
            },
            "line": 106,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5126036083,
              "status": "passed"
            },
            "line": 107,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4079802375,
              "status": "passed"
            },
            "line": 108,
            "name": "I click on field label \"${add.experience.txt}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${add.experience.txt}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2317957250,
              "status": "passed"
            },
            "line": 109,
            "name": "I click on checkbox next to text \"${currently.praticing.here}\" in dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${currently.praticing.here}",
                  "offset": 34
                }
              ],
              "location": "DieticianSteps.selectCurrentlyWorkingCheckBox(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3539561833,
              "status": "passed"
            },
            "line": 110,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 37583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4158753334,
              "status": "passed"
            },
            "line": 113,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${public.profile.tex}"
                ],
                "line": 114
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1063583,
              "status": "passed"
            },
            "line": 115,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "service offered",
                  "MBBS DOCTOR"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3254058042,
              "status": "passed"
            },
            "line": 117,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${service.offered.text}",
                  "${service offered}"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4519873500,
              "status": "passed"
            },
            "line": 119,
            "name": "I click on field label \"${service.offered.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${service.offered.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4492257959,
              "status": "passed"
            },
            "line": 120,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 122,
        "name": "Verify User should be able to navigate to achievement and awards screen",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-achievement-and-awards-screen",
        "after": [
          {
            "result": {
              "duration": 672084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3915723541,
              "status": "passed"
            },
            "line": 123,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${achievement.award.text}"
                ],
                "line": 124
              },
              {
                "cells": [
                  "${add.seminar.details.text}"
                ],
                "line": 125
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005635084,
              "status": "passed"
            },
            "line": 126,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.title.award.text}",
                  "TEST award"
                ],
                "line": 127
              },
              {
                "cells": [
                  "${enter.org.name.text}",
                  "Test"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4694282375,
              "status": "passed"
            },
            "line": 129,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${year.text}",
                  "2020"
                ],
                "line": 130
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3651506875,
              "status": "passed"
            },
            "line": 131,
            "name": "I click on field label \"${add.seminar.details.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${add.seminar.details.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3709997333,
              "status": "passed"
            },
            "line": 132,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 134,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 57750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4555343042,
              "status": "passed"
            },
            "line": 135,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${seminar.attended.text}"
                ],
                "line": 136
              },
              {
                "cells": [
                  "${add.seminar.details}"
                ],
                "line": 137
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10241795708,
              "status": "passed"
            },
            "line": 138,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.seminar.title}",
                  "TEST seminar"
                ],
                "line": 139
              },
              {
                "cells": [
                  "${enterLocation.text}",
                  "SINGAPORE"
                ],
                "line": 140
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5457539791,
              "status": "passed"
            },
            "line": 141,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${year.text}",
                  "2020"
                ],
                "line": 142
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2474970125,
              "status": "passed"
            },
            "line": 143,
            "name": "I click on field label \"${seminar.attended.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${seminar.attended.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5240593709,
              "status": "passed"
            },
            "line": 144,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "Verify User should be able to navigate to linked clinic page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-linked-clinic-page",
        "after": [
          {
            "result": {
              "duration": 539917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3532626333,
              "status": "passed"
            },
            "line": 147,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${linked.clinic.text}"
                ],
                "line": 148
              },
              {
                "cells": [
                  "${add.clinic.info.text}"
                ],
                "line": 149
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9468992125,
              "status": "passed"
            },
            "line": 150,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.name.of.clinic}",
                  "clinic1"
                ],
                "line": 151
              },
              {
                "cells": [
                  "${enterLocation.text}",
                  "SINGAPORE"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2723325334,
              "status": "passed"
            },
            "line": 153,
            "name": "I click on field label \"${linked.clinic.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${linked.clinic.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4809611709,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 595875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 1803792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5201181209,
              "status": "passed"
            },
            "line": 157,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${about.you.text}"
                ],
                "line": 158
              },
              {
                "cells": [
                  "${profile.photo.text}"
                ],
                "line": 159
              },
              {
                "cells": [
                  "${takephoto.instruction.text}"
                ],
                "line": 160
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4201858834,
              "status": "passed"
            },
            "line": 162,
            "name": "I verify following profile photo options are displayed in Dietician Screen",
            "match": {
              "location": "DieticianSteps.verifyPhotoOptionsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${uploadfile.text}"
                ],
                "line": 163
              },
              {
                "cells": [
                  "${takepicture.text}"
                ],
                "line": 164
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15368542000,
              "status": "passed"
            },
            "line": 165,
            "name": "I clicks on \"${takepicture.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${takepicture.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8615827750,
              "status": "passed"
            },
            "line": 166,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4790374875,
              "status": "passed"
            },
            "line": 167,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4179190375,
              "status": "passed"
            },
            "line": 168,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3007745583,
              "status": "passed"
            },
            "line": 169,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23285291875,
              "status": "passed"
            },
            "line": 170,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${confirmdetails.text}"
                ],
                "line": 171
              },
              {
                "cells": [
                  "${confirmdetails.text2}"
                ],
                "line": 172
              },
              {
                "cells": [
                  "${service num}"
                ],
                "line": 173
              },
              {
                "cells": [
                  "${issuing org}"
                ],
                "line": 174
              },
              {
                "cells": [
                  "${specialisation}"
                ],
                "line": 175
              },
              {
                "cells": [
                  "${service offered}"
                ],
                "line": 176
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7531515500,
              "status": "passed"
            },
            "line": 177,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005551625,
              "status": "passed"
            },
            "line": 178,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2372585417,
              "status": "passed"
            },
            "line": 179,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5952623167,
              "status": "passed"
            },
            "line": 180,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 134791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 218417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 182,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 709042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5005235875,
              "status": "passed"
            },
            "line": 183,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5325697042,
              "status": "passed"
            },
            "line": 184,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${conversation.history.text}"
                ],
                "line": 185
              },
              {
                "cells": [
                  "${no.appointmnt.now.text}"
                ],
                "line": 186
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2762437416,
              "status": "passed"
            },
            "line": 187,
            "name": "User verify following dynamic texts are displayed in Dietician screen",
            "match": {
              "location": "DieticianSteps.verifyDynamicTextOnDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${click.manage.your.availibility.text}"
                ],
                "line": 188
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27843192000,
              "status": "passed"
            },
            "line": 189,
            "name": "I clicks on \"${schedule.cal.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${schedule.cal.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5287904500,
              "status": "passed"
            },
            "line": 190,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${calendar.text}"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2193268208,
              "status": "passed"
            },
            "line": 192,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3442804292,
              "status": "passed"
            },
            "line": 193,
            "name": "I click the Select Your Availability icon in calendar screen",
            "match": {
              "location": "DieticianSteps.SelectAvailiablityScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37152007209,
              "status": "passed"
            },
            "line": 194,
            "name": "I clicks on \"10:00 AM\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "10:00 AM",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow for Doctor functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/health/Dietician_Doctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Dietician_doctor_my"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 722916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 78125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 4727000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 452042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 37217542,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 351375,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12024551375,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008402416,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65915434833,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009455375,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26667824208,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006274291,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8435715041,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007715250,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38442672875,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3581761666,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6928989042,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34447563541,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005098375,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 139984773083,
              "status": "passed"
            },
            "line": 25,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23676223833,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4009244417,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 721459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 86667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "User should be able to access my family vaccination calendar",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;user-should-be-able-to-access-my-family-vaccination-calendar",
        "after": [
          {
            "result": {
              "duration": 341958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36910507208,
              "status": "passed"
            },
            "line": 30,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006074833,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1321092250,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on vaccine calendar tile",
            "match": {
              "location": "VaccineCalendarSteps.iClicksOnVaccineCalTile()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005201875,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1994803333,
              "status": "passed"
            },
            "line": 34,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.title}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${vaccineCalendar.description}"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the user can Add Vaccine Information",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;verify-the-user-can-add-vaccine-information",
        "after": [
          {
            "result": {
              "duration": 54292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1539562584,
              "status": "passed"
            },
            "line": 40,
            "name": "I click on Add more button in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.clickAddMoreBtn()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2005308209,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9628683917,
              "status": "passed"
            },
            "line": 42,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.addMore.Title}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.relation}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.dob}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3403324167,
              "status": "passed"
            },
            "line": 47,
            "name": "User verifies following buttons are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalButtons(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.addMore.cancelButton}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.saveButton}"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 80167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 81459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "enter information on add vaccination popup",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;enter-information-on-add-vaccination-popup",
        "after": [
          {
            "result": {
              "duration": 76542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5374125,
              "status": "passed"
            },
            "line": 52,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "relation",
                  "Child"
                ],
                "line": 53
              },
              {
                "cells": [
                  "name",
                  "testing_one"
                ],
                "line": 54
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13594321708,
              "status": "passed"
            },
            "line": 55,
            "name": "I add following information in Vaccine Calendar add information screen",
            "match": {
              "location": "VaccineCalendarSteps.enterAddInformationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "${name}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Relation",
                  "${relation}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006711375,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1128722417,
              "status": "passed"
            },
            "line": 59,
            "name": "I click on \"${vaccineCalendar.addMore.saveButton}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.addMore.saveButton}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify the added item displayed on the Vaccine Schedule screen",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;verify-the-added-item-displayed-on-the-vaccine-schedule-screen",
        "after": [
          {
            "result": {
              "duration": 384750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2005223625,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3068934250,
              "status": "passed"
            },
            "line": 64,
            "name": "User verifies following dynamic texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyDynamicTextOnVaccineCal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${relation}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${name}"
                ],
                "line": 66
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2869322083,
              "status": "passed"
            },
            "line": 67,
            "name": "I click on \"${name} ${relation}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${name} ${relation}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2426186875,
              "status": "passed"
            },
            "line": 68,
            "name": "I click on \"${vaccineCalendar.continue.button}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.continue.button}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005148333,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22288481291,
              "status": "passed"
            },
            "line": 70,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.select.child.text}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${vaccine.text}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9107009917,
              "status": "passed"
            },
            "comments": [
              {
                "line": 73,
                "value": "#      | ${next.vaccine.due.text}             |"
              }
            ],
            "line": 74,
            "name": "User verifies following dynamic texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyDynamicTextOnVaccineCal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${name}"
                ],
                "line": 75
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20982760416,
              "status": "passed"
            },
            "comments": [
              {
                "line": 76,
                "value": "#And I verify the following texts \"Vaccine Schedule\" in Screen"
              }
            ],
            "line": 77,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccine.bcg.text}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${vaccine.hep.text}"
                ],
                "line": 79
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 361792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "Verify reminder options in vaccine schedule",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;verify-reminder-options-in-vaccine-schedule",
        "after": [
          {
            "result": {
              "duration": 1032792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 303500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9876848167,
              "status": "passed"
            },
            "line": 82,
            "name": "I click reminder icon for BCG vaccine",
            "match": {
              "location": "VaccineCalendarSteps.iClickReminderIconForBCGVaccine()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14999570416,
              "status": "passed"
            },
            "line": 83,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${reminder.popup.text}"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11294200125,
              "status": "passed"
            },
            "line": 85,
            "name": "I click NO option",
            "match": {
              "location": "VaccineCalendarSteps.iClickNOOption()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 355042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 182875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify change reminder functionality in vaccine schedule screen",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature;verify-change-reminder-functionality-in-vaccine-schedule-screen",
        "after": [
          {
            "result": {
              "duration": 43958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24643860333,
              "status": "passed"
            },
            "line": 88,
            "name": "I click Yes option",
            "match": {
              "location": "VaccineCalendarSteps.iClickYesOption()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can manage events via the Family Vaccine Calendar feature",
    "description": "",
    "id": "verify-that-user-can-manage-events-via-the-family-vaccine-calendar-feature",
    "keyword": "Feature",
    "uri": "features/my/health/FamilyVaccineCalendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@familyVaccine_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Vaccine"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 388834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 99000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1572166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10879734375,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7770500,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60027496000,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25064882917,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10008359958,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1724299542,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 130166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 640834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3486723875,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50011580958,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1977311000,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5009726125,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16148285666,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19768947791,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 23,
            "value": "#  Scenario: User should be able to access Dengue Alert screen"
          },
          {
            "line": 24,
            "value": "#    And I clicks on Dengue Alert tile"
          },
          {
            "line": 25,
            "value": "##   Add the permission grant implementation similar to \"I clicks on My Environment icon\" step"
          },
          {
            "line": 26,
            "value": "#    Then I verify following texts are displayed"
          },
          {
            "line": 27,
            "value": "#      |${dengueAlert.home.title}|"
          },
          {
            "line": 28,
            "value": "#      |${dengueAlert.home.description}|"
          },
          {
            "line": 29,
            "value": "#      |${dengueAlert.home.T\u0026Cconcent}|"
          },
          {
            "line": 30,
            "value": "#      |${dengueAlert.home.aime}|"
          },
          {
            "line": 31,
            "value": "#      And User verifies the T\u0026C link is accessible"
          },
          {
            "line": 32,
            "value": "#      |${dengueAlert.home.T\u0026CLink}|"
          },
          {
            "line": 33,
            "value": "#      When the user accepts the T\u0026C"
          },
          {
            "line": 34,
            "value": "#      And click on Proceed button"
          },
          {
            "line": 35,
            "value": "#      |${dengueAlert.home.proceedButto}|"
          },
          {
            "line": 38,
            "value": "#    If it is required to verify the outbreak \u0026 cases values for other countries, then repeat the Outbreak \u0026 Cases Scenarios"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 338000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "Verify the map can be expanded",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;verify-the-map-can-be-expanded",
        "after": [
          {
            "result": {
              "duration": 934000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 529375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44241084833,
              "status": "passed"
            },
            "line": 41,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22975800042,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on Dengue Alert tile",
            "match": {
              "location": "DengueAlertSteps.clickDengueAlertTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4767349459,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on the mapImage",
            "match": {
              "location": "DengueAlertSteps.clickMap()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2099084,
              "status": "passed"
            },
            "line": 44,
            "name": "I click on map back button",
            "match": {
              "location": "DengueAlertSteps.clickMapBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 84042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "User should be able to vew the Dengue Outbreak - Malaysia",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;user-should-be-able-to-vew-the-dengue-outbreak---malaysia",
        "after": [
          {
            "result": {
              "duration": 2691291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16741840792,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify the following texts \"Dengue Alert\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Dengue Alert",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Malaysia"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Outbreaks"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21689997166,
              "status": "passed"
            },
            "line": 50,
            "name": "I verify following dynamic static text is displayed in Dengue Alert Screen",
            "match": {
              "location": "DengueAlertSteps.isDynamicStaticTextDisplayedOnDengueAlertScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.outbreak.new}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.total}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.deaths}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5978237583,
              "status": "passed"
            },
            "line": 56,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.outbreak.total.title}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6685105916,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#    Verify the value displayed in this section matches with the value displayed in the summary section"
              },
              {
                "line": 59,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 60,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9325558417,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zonal.title}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${dengueAlert.zonal.country}"
                ],
                "line": 63
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28514788125,
              "status": "passed"
            },
            "comments": [
              {
                "line": 64,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 65,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone1}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${dengueAlert.zone2}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${dengueAlert.zone3}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${dengueAlert.zone4}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${dengueAlert.zone5}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${dengueAlert.zone6}"
                ],
                "line": 71
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7160171459,
              "status": "passed"
            },
            "line": 72,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 49003781042,
              "status": "passed"
            },
            "line": 73,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone7}"
                ],
                "line": 74
              },
              {
                "cells": [
                  "${dengueAlert.zone8}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${dengueAlert.zone9}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${dengueAlert.zone10}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${dengueAlert.zone11}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${dengueAlert.zone12}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${dengueAlert.zone13}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${dengueAlert.zone14}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${dengueAlert.zone15}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${dengueAlert.zone16}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 614791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 752042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "User should be able to vew the Dengue Cases - Malaysia",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;user-should-be-able-to-vew-the-dengue-cases---malaysia",
        "after": [
          {
            "result": {
              "duration": 195667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 32814023000,
              "status": "passed"
            },
            "line": 87,
            "name": "I scroll up till \"${dengue.alert.map}\" element displayed",
            "match": {
              "arguments": [
                {
                  "val": "${dengue.alert.map}",
                  "offset": 18
                }
              ],
              "location": "BaseSteps.scrollTillElementDisplayed(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9305937417,
              "status": "passed"
            },
            "line": 88,
            "name": "I select \"Cases\" from outbreaks dropdown",
            "match": {
              "arguments": [
                {
                  "val": "Cases",
                  "offset": 10
                }
              ],
              "location": "DengueAlertSteps.selectFromOutBreakDropdown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28480513459,
              "status": "passed"
            },
            "line": 89,
            "name": "I verify following dynamic static text is displayed in Dengue Alert Screen",
            "match": {
              "location": "DengueAlertSteps.isDynamicStaticTextDisplayedOnDengueAlertScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.cases.new}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${dengueAlert.cases.total}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.deaths}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 94
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5311303417,
              "status": "passed"
            },
            "line": 95,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.cases.total.title}"
                ],
                "line": 96
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10312306208,
              "status": "passed"
            },
            "comments": [
              {
                "line": 97,
                "value": "#    Verify the value displayed in this section matches with the value displayed in the summary section"
              },
              {
                "line": 98,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 99,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zonal.title}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${dengueAlert.zonal.country}"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6490979333,
              "status": "passed"
            },
            "line": 102,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 28075751666,
              "status": "passed"
            },
            "comments": [
              {
                "line": 103,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 104,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone1}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${dengueAlert.zone2}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${dengueAlert.zone3}"
                ],
                "line": 107
              },
              {
                "cells": [
                  "${dengueAlert.zone4}"
                ],
                "line": 108
              },
              {
                "cells": [
                  "${dengueAlert.zone5}"
                ],
                "line": 109
              },
              {
                "cells": [
                  "${dengueAlert.zone6}"
                ],
                "line": 110
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7029954875,
              "status": "passed"
            },
            "line": 111,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 45805127167,
              "status": "passed"
            },
            "line": 112,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone7}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${dengueAlert.zone8}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "${dengueAlert.zone9}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${dengueAlert.zone10}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${dengueAlert.zone11}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${dengueAlert.zone12}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${dengueAlert.zone13}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "${dengueAlert.zone14}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${dengueAlert.zone15}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "${dengueAlert.zone16}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can access Dengue Alert feature",
    "description": "",
    "id": "verify-that-user-can-access-dengue-alert-feature",
    "keyword": "Feature",
    "uri": "features/my/home/DengueAlert.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@dengueAlert"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 128375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 180125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 6956084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 389000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28758792,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 96042,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11051636541,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009715416,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 56989775834,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006569292,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23762786125,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005158625,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7994764625,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006638375,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36304771750,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2417010000,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6412882125,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37104398125,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002843709,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 136477807250,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20497364625,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4007092375,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 119958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 350667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Navigate to PRU Shoppe screen",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;navigate-to-pru-shoppe-screen",
        "after": [
          {
            "result": {
              "duration": 47750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010062417,
              "status": "passed"
            },
            "line": 29,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify User should be able to see the infectious disease cover screen options",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-screen-options",
        "after": [
          {
            "result": {
              "duration": 2628333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 59459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2737852709,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5006202125,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1392985875,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on pru infectious disease cover tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToInfectiousDisease()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5005253792,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19759402583,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.cover.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.1}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.2}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.3}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.4}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21349739583,
              "status": "passed"
            },
            "line": 42,
            "name": "user click on following button \"${show.more.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.more.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11062217625,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.cover.info.5}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.6}"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22598858208,
              "status": "passed"
            },
            "line": 46,
            "name": "user click on following button \"${show.less.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.less.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31207657000,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.disclosure.text.1}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.2}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.3}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.4}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.5}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.6}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.7}"
                ],
                "line": 54
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3297187000,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${your.details.text}"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6554878667,
              "status": "passed"
            },
            "comments": [
              {
                "line": 57,
                "value": "#      | ${scan.your.id.text} |"
              },
              {
                "line": 58,
                "value": "#      | ${nric.no.text}      |"
              }
            ],
            "line": 59,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13833718417,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.name.as.nric.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${infectious.disease.gender.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${infectious.disease.dob}"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 501416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2713500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to see the infectious disease cover Screen options",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-screen-options",
        "after": [
          {
            "result": {
              "duration": 1141542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30607883292,
              "status": "passed"
            },
            "line": 66,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.residential.text}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${my.country.of.residence}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${my.resedential.status}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${my.country.code}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${my.mobile.phone.number}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${my.referral.code}"
                ],
                "line": 73
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6523605833,
              "status": "passed"
            },
            "line": 74,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13068406917,
              "status": "passed"
            },
            "line": 75,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${payment.summary.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${insurance.premium.text}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${total.premium.text}"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7111016958,
              "status": "passed"
            },
            "line": 79,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 419167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 160500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;2",
        "after": [
          {
            "result": {
              "duration": 1940583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5388693708,
              "status": "passed"
            },
            "line": 83,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.1}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.1}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@prushoppeMY"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 500375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;3",
        "after": [
          {
            "result": {
              "duration": 77250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5563492208,
              "status": "passed"
            },
            "line": 83,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.2}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.2}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@prushoppeMY"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 528958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;4",
        "after": [
          {
            "result": {
              "duration": 3209875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5494864250,
              "status": "passed"
            },
            "line": 83,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.3}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.3}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@prushoppeMY"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;5",
        "after": [
          {
            "result": {
              "duration": 52167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5501459250,
              "status": "passed"
            },
            "line": 83,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.4}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.4}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@prushoppeMY"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 923875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 91,
        "name": "verify that user can see agreement and proceed button",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-that-user-can-see-agreement-and-proceed-button",
        "after": [
          {
            "result": {
              "duration": 1195750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 51576806500,
              "status": "passed"
            },
            "line": 92,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.tnc.3.1}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.1}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.2}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.3}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.4}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.1}"
                ],
                "line": 98
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.2}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.3}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.4}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.5}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.6}"
                ],
                "line": 103
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3797582084,
              "status": "passed"
            },
            "line": 104,
            "name": "I verify proceed button is displayed on pru shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyProceedBtn()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Pru infectious disease cover functionality on one pulse App",
    "description": "",
    "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruInfectiousDiseaseCover.feature",
    "tags": [
      {
        "line": 1,
        "name": "@infectiousDiseaseCover_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@prushoppeMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 117375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 1156208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10312010041,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6619792,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62164626250,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24947765542,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5013905125,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1677971250,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 85083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 44708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1341292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 396667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5116060583,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53404592958,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1558686416,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012713167,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13137403209,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24886617500,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 89250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 74708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify user can access his policies from Pru Shoppe My Policies screen",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-user-can-access-his-policies-from-pru-shoppe-my-policies-screen",
        "after": [
          {
            "result": {
              "duration": 3523306333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2035667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4383581583,
              "status": "passed"
            },
            "line": 23,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006631625,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1147175375,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on my policies tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToMyPoliciesScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005117083,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9432224542,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMy Coverage text is displayed on page  expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/my/home/prushopee/PruShoppeCoverage.feature:27)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.title}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${myCoverage.information}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${myCoverage.InformationDescription}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 207667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6595958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Click on Link policy and verify screen to add policy number",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;click-on-link-policy-and-verify-screen-to-add-policy-number",
        "after": [
          {
            "result": {
              "duration": 5504166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31422608125,
              "status": "passed"
            },
            "line": 33,
            "name": "I clicks on \"${myCoverage.linkPolicyButton}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.linkPolicyButton}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2022474584,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1760675541,
              "status": "passed"
            },
            "line": 35,
            "name": "I hide one pulse app mobile keyboard",
            "match": {
              "location": "BaseSteps.hideKeyboard()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6833154208,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.title}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description1}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the error message when the Policy Number is blank",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-blank",
        "after": [
          {
            "result": {
              "duration": 25083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1391579334,
              "status": "passed"
            },
            "line": 42,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1268253166,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2354833500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    When I click on \"${myCoverage.policyNumber.saveButton}\" button on app"
              },
              {
                "line": 45,
                "value": "#    When I click on \"${myCoverage.policyNumber.saveButton}\" button on app"
              }
            ],
            "line": 46,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 463209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the error message when the Policy Number is invalid or incorrect",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-invalid-or-incorrect",
        "after": [
          {
            "result": {
              "duration": 3195808541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1959416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5871202875,
              "status": "passed"
            },
            "line": 50,
            "name": "I enter \"1234\" as the Policy number",
            "match": {
              "arguments": [
                {
                  "val": "1234",
                  "offset": 9
                }
              ],
              "location": "PruShoppeSteps.enterPolicyNumber(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3996395834,
              "status": "passed"
            },
            "line": 51,
            "name": "I hide one pulse app mobile keyboard",
            "match": {
              "location": "BaseSteps.hideKeyboard()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3998948000,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005269667,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10533875125,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPolicy number not found text is displayed on page  expected [true] but found [false]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.Then I verify following texts are displayed(features/my/home/prushopee/PruShoppeCoverage.feature:54)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 54,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 652375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1557292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify the error message when the Cancel Button",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-cancel-button",
        "after": [
          {
            "result": {
              "duration": 3319373292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 1225125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1198260417,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on policy number cancel button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumCancelBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46260211583,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\n\tat org.testng.Assert.assertTrue(Assert.java:42)\n\tat org.testng.Assert.assertTrue(Assert.java:52)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.landingPageValidation(LoginSteps.java:92)\n\tat ✽.Then user should be landed to \"Home\" screen(features/my/home/prushopee/PruShoppeCoverage.feature:59)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 59,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Pru Shoppe My Coverage functionality on one pulse App",
    "description": "",
    "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruShoppeCoverage.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PruShoppe_my_coverage"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@prushoppeMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 142625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9697292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 5017000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 643916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8820901125,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6771583,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64055034500,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23793752833,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10026712167,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2425318375,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 69250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 561167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5002448333,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72682055500,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1362749875,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5011720084,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8497466750,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22311082250,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 551917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10735185667,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Wealth Channel tile for Malaysia",
            "match": {
              "location": "WealthSteps.clickWealthChannelTileMalaysia()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6165495375,
              "status": "passed"
            },
            "line": 24,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 25
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8393675208,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following tile texts are displayed on wealth channel screen",
            "match": {
              "location": "WealthSteps.verifyTileTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Investing 123"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Equip yourself with the basic investment tools"
                ],
                "line": 28
              },
              {
                "cells": [
                  "First Steps"
                ],
                "line": 29
              },
              {
                "cells": [
                  "The importance of investor education"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6885091625,
              "status": "passed"
            },
            "line": 31,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7450024959,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following tile texts are displayed on wealth channel screen",
            "match": {
              "location": "WealthSteps.verifyTileTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Remove The Weeds"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Dispel investment myths to achieve desired investment outcomes"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Mutual Funds"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Make mutual funds your first investment stop"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44084,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 46792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7195177250,
              "status": "passed"
            },
            "line": 39,
            "name": "I click on \"Mutual Funds\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005451166,
              "status": "passed"
            },
            "line": 40,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2341699000,
              "status": "passed"
            },
            "line": 41,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Mutual Funds"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5780326875,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify following tile texts are displayed on wealth channel screen",
            "match": {
              "location": "WealthSteps.verifyTileTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Make mutual funds your first investment stop"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15159286584,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 1312125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 350625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15910460542,
              "status": "passed"
            },
            "line": 51,
            "name": "I read the \"Mutual Funds\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7296211416,
              "status": "passed"
            },
            "line": 52,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7459031333,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify \"Mutual Funds\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7117980334,
              "status": "passed"
            },
            "line": 54,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 80083,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 412041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7254230542,
              "status": "passed"
            },
            "line": 57,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12400790000,
              "status": "passed"
            },
            "line": 58,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38208,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 45333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6412044166,
              "status": "passed"
            },
            "line": 61,
            "name": "I read the \"Mutual Funds\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16645058542,
              "status": "passed"
            },
            "line": 62,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7207235667,
              "status": "passed"
            },
            "line": 63,
            "name": "I verify \"Mutual Funds\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 358000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 1036459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30094047958,
              "status": "passed"
            },
            "line": 66,
            "name": "I click on \"Mutual Funds\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 538125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 81042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 52167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3006026500,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13405191250,
              "status": "passed"
            },
            "line": 70,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 72
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 73
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 747708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 92708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7325105792,
              "status": "passed"
            },
            "line": 76,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8076949209,
              "status": "passed"
            },
            "line": 77,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 79,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 38167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6185536917,
              "status": "passed"
            },
            "line": 80,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5634256667,
              "status": "passed"
            },
            "line": 81,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 74791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 83,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 2220500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 483375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42570631000,
              "status": "passed"
            },
            "line": 84,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 580500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 55875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 102000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 520375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3344860959,
              "status": "passed"
            },
            "line": 87,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6371074209,
              "status": "passed"
            },
            "line": 88,
            "name": "I click on \"Mutual Funds\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5971997500,
              "status": "passed"
            },
            "line": 89,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_wealth_channel"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 17625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 75583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4195715083,
              "status": "passed"
            },
            "line": 66,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006153875,
              "status": "passed"
            },
            "line": 67,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 64,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 64,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 51500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 704025917,
              "status": "passed"
            },
            "line": 71,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 72
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 69,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 69,
            "name": "@NotificationCenter_my"
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenterPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 49625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 787791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 452375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11349714666,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9668084,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64491756625,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24084572958,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016371292,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2933058250,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 167666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 56000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1030750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 555584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5084044833,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71992676250,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1373894833,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009026541,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15184800584,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22592235209,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 814000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 172625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 228583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20734116167,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 529416,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 267875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 37195703333,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 420584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 61042,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 104959,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8309520958,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 95833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 44250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 2047375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24823101917,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 154000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 27655988167,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in onepulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      }
    ]
  }
]