[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 155758757,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 344517227,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 125780,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28671,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19887422268,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3929059,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23647072415,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11018964804,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001097785,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11042792323,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4712416541,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1670399398,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66748,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 58429,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 52249,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14819,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2217798094,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17139993010,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 221561025,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000421643,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8073985523,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14057471037,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51613,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 43057,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 61939,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11648,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7794628358,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000239598,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22900271710,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11088980119,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000269928,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11120167851,
              "status": "passed"
            },
            "line": 31,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4649079426,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3544689759,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17510762750,
              "status": "passed"
            },
            "line": 34,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 36
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4302606088,
              "status": "passed"
            },
            "line": 37,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 299157138,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 726899617,
              "status": "passed"
            },
            "comments": [
              {
                "line": 39,
                "value": "## need to check validation message"
              }
            ],
            "line": 40,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 209837125,
              "status": "passed"
            },
            "comments": [
              {
                "line": 41,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 42,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3514370360,
              "status": "passed"
            },
            "line": 43,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 739208754,
              "status": "passed"
            },
            "line": 45,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 924341217,
              "status": "passed"
            },
            "line": 46,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 64209,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46326,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 43495,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12146,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10325435,
              "status": "passed"
            },
            "line": 49,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139235,
              "status": "passed"
            },
            "line": 50,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 51
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7877773910,
              "status": "passed"
            },
            "line": 53,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22716437349,
              "status": "passed"
            },
            "line": 54,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11087072859,
              "status": "passed"
            },
            "line": 55,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000283920,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10994857320,
              "status": "passed"
            },
            "line": 57,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4645583816,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3489983428,
              "status": "passed"
            },
            "line": 59,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17348136832,
              "status": "passed"
            },
            "line": 60,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 62
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4296890921,
              "status": "passed"
            },
            "line": 63,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 274098746,
              "status": "passed"
            },
            "line": 64,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1198742294,
              "status": "passed"
            },
            "line": 65,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 199583191,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3463868802,
              "status": "passed"
            },
            "line": 67,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 698642275,
              "status": "passed"
            },
            "line": 69,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1573497496,
              "status": "passed"
            },
            "line": 70,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38655,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31542,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 51673,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16436,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 181637,
              "status": "passed"
            },
            "line": 73,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3576905553,
              "status": "passed"
            },
            "line": 74,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 75
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 741565566,
              "status": "passed"
            },
            "line": 76,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000324574,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25640573085,
              "status": "passed"
            },
            "line": 78,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265535717,
              "status": "passed"
            },
            "comments": [
              {
                "line": 79,
                "value": "#    Then I wait for 30 sec"
              },
              {
                "line": 80,
                "value": "#    Given I create connection for api service"
              },
              {
                "line": 81,
                "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
              },
              {
                "line": 82,
                "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
              }
            ],
            "line": 83,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000262712,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 7 sec",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 573189623,
              "status": "passed"
            },
            "comments": [
              {
                "line": 85,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 86,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63466,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42862,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 51984,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12437,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1578205,
              "status": "passed"
            },
            "line": 89,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72374,
              "status": "passed"
            },
            "line": 90,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8452897020,
              "status": "passed"
            },
            "line": 91,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000260158,
              "status": "passed"
            },
            "line": 92,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23150247474,
              "status": "passed"
            },
            "line": 93,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10708533411,
              "status": "passed"
            },
            "line": 94,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000256550,
              "status": "passed"
            },
            "line": 95,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7419257181,
              "status": "passed"
            },
            "line": 96,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000249157,
              "status": "passed"
            },
            "line": 97,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6355423533,
              "status": "passed"
            },
            "line": 98,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 102
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 545616710,
              "status": "passed"
            },
            "line": 103,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28628120656,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000301323,
              "status": "passed"
            },
            "line": 105,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000240714,
              "status": "passed"
            },
            "comments": [
              {
                "line": 106,
                "value": "#    Then I click skip button"
              }
            ],
            "line": 107,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10166105712,
              "status": "passed"
            },
            "line": 108,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 109
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218338680,
              "status": "passed"
            },
            "line": 110,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1398971588,
              "status": "passed"
            },
            "line": 111,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 908460218,
              "status": "passed"
            },
            "line": 112,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6554022466,
              "status": "passed"
            },
            "line": 113,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3201356733,
              "status": "passed"
            },
            "line": 114,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1170869999,
              "status": "passed"
            },
            "line": 115,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5808906405,
              "status": "passed"
            },
            "line": 116,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 839991575,
              "status": "passed"
            },
            "line": 117,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000268641,
              "status": "passed"
            },
            "line": 118,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 430731955,
              "status": "passed"
            },
            "comments": [
              {
                "line": 119,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 120,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1198736197,
              "status": "passed"
            },
            "line": 121,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 968267275,
              "status": "passed"
            },
            "line": 122,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1718570741,
              "status": "passed"
            },
            "line": 123,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999271159,
              "status": "passed"
            },
            "line": 124,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1910625919,
              "status": "passed"
            },
            "line": 125,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1040957571,
              "status": "passed"
            },
            "line": 126,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3145904716,
              "status": "passed"
            },
            "line": 127,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1061833491,
              "status": "passed"
            },
            "line": 128,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000267786,
              "status": "passed"
            },
            "line": 129,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 550044418,
              "status": "passed"
            },
            "line": 130,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 478850584,
              "status": "passed"
            },
            "line": 131,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1641337672,
              "status": "passed"
            },
            "line": 132,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 632568917,
              "status": "passed"
            },
            "line": 133,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2528290051,
              "status": "passed"
            },
            "line": 134,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 656750468,
              "status": "passed"
            },
            "line": 135,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8780597984,
              "status": "passed"
            },
            "line": 136,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4129138037,
              "status": "passed"
            },
            "comments": [
              {
                "line": 137,
                "value": "# And I click the continue button"
              }
            ],
            "line": 138,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12994867962,
              "status": "passed"
            },
            "line": 139,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 384954053,
              "status": "passed"
            },
            "line": 140,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18671782597,
              "status": "passed"
            },
            "line": 141,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000236905,
              "status": "passed"
            },
            "line": 142,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32762321525,
              "status": "passed"
            },
            "line": 143,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 144
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 148
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 149
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 150
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 151
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 78495,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 74121,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 154,
        "name": "Verify the Login Functionality using \"Continue with Google\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-google\"",
        "after": [
          {
            "result": {
              "duration": 3967856613,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25262,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8209173239,
              "status": "passed"
            },
            "line": 155,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9238087328,
              "status": "passed"
            },
            "line": 156,
            "name": "user click on \"CONTINUE WITH GOOGLE\" with Google button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH GOOGLE",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickcontinuewithGoogle_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71733,
              "status": "passed"
            },
            "line": 157,
            "name": "click the continue button in login screen",
            "match": {
              "location": "LoginSteps.clicknewontinuebuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31739910097,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 87800a29-2807-4bf0-877d-6e8c6ebca6ae\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Add another account\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseLoginScreen.EnterEmail_Id(PulseLoginScreen.java:967)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.EnterEmail_Id(LoginSteps.java:368)\n\tat ✽.And I click the \"Email\"  in Continue with Gmail(features/PulseLoginTest.feature:158)\n",
              "status": "failed"
            },
            "line": 158,
            "name": "I click the \"Email\"  in Continue with Gmail",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterEmail_Id(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${facebook.text}"
                ],
                "line": 159
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 160
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 162,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42788,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29371,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 164,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 958996611,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27886,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8008608482,
              "status": "passed"
            },
            "line": 165,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28735170757,
              "status": "passed"
            },
            "line": 166,
            "name": "user click on \"CONTINUE WITH Facebook\" with Facebook button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH Facebook",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickFacebookt_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53722,
              "status": "passed"
            },
            "line": 167,
            "name": "click the continue button in facebook screen",
            "match": {
              "location": "LoginSteps.clickcontinueFacebook()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34067172086,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c840ee27-f31c-46bd-bac2-1cb77267dc56\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[contains(@text,\u0027Log in to your Facebook\u0027)]/following::android.widget.EditText[2]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:263)\n\tat com.onepulse.app.screens.PulseLoginScreen.EnterFacebookLogin(PulseLoginScreen.java:1048)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.EnterFacebookLogin(LoginSteps.java:386)\n\tat ✽.And I click the \"Email\"  in Continue with Facebook(features/PulseLoginTest.feature:168)\n",
              "status": "failed"
            },
            "line": 168,
            "name": "I click the \"Email\"  in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 169
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 170
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAA36ElEQVR4Xu2dh3tU15n//V+tsyXJJrup3t38silO1okdJzZ2bAy4xYCxTTE23YAAIRBCHfXee++9S6M2VZpRBwym+P2d7zu649EdSaggMRze93m+z9x77rnn3PI573nvuWWeIzExze05c4KYmG4mkItpbwK5mPYmkItpbwK5mPYmkItpbwK5mPYmkItpb0815F9//TV1dXXR4OAg3b9/37zYZx6PhzIyMiguLo7Ky8vp22+/NWeh4uJiXr6cHA6HOTvbnTt3aG5ujh4+fGhe9MwYjuWDBw/MycsaztFyx34t5na7+VhvxLYd8nv37gUAiR2/e/duQNpqBwRwHzhwgN566y3as2cPff755zQ5OWnORv39/bRz5056/fXXfSorK+MG4m+nTp1aksdfqMvfsF1oFGgwzc3NlJOTQyMjI0vyPAuGxn/t2jW6ceMGZWZmLnu+0ADy8vLok08+4fPw4YcfsuNYCdiZmRkqKSlZkobju2vXLvr000+pqalpybK12LZC3tfXR5cuXaKQkBAaHx/nNHjB0NBQioqKouzsbF/e6OhoBmk5A6Dvv/8+H6jGxkZu5e3t7XTy5Mkl+XDQkXb48GE6ceIEHTx4kKEF0MnJyUvyrgfympoablA4gS0tLZyWn5/Pnv1ZstjYWHYiOJalpaU0OjpqzkIREREBxxP6+OOPA3oAAH7hwgVKTExcko7GAcjhzC5evLhk2VpsWyFHC56enqbh4WFKT0+nmJgY3jF496GhIQYb1tHRwcsKCgpMJXits7OT3n77bfrmm2+44SDv+fPn6c0331ziodE7oAHhoKIxAHrUi4N16NAhvxLXB7nhaVA+4IYhJMJ2P0uG497T08Mg19bWcthoNpfLRbt3715yPHfs2EENDQ1L8hmAz8/PBzggQA4HCIcV9JBbrVYKCwtjj4ruHXDD8JuUlESpqal069YtCg8P5+W5ubmmErw2MDCwBHLj4Blphk1NTfmWwfvC8589e5bnjx496lfi+iA3ehh4bngzmNPppO7ubv9s2lt9fT07HDiPyMjIgDDUMBy/N954w3c809LSliwH4HBG+EXPjobhb4AcIeb169eDH3IY4AXQMIvFQgsLCxyz4ffMmTPs5eEZENIARKMh+BsOJhoKYM/KyvId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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 172,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 50437,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46566,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 51553,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9593,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 669088,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57461,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8225564460,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000879831,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22932888820,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000252518,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10999749176,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000261761,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7116304391,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000278988,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 197362321,
              "status": "passed"
            },
            "line": 17,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7019144207,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 365847660,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28772265118,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000277317,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10675831620,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 229220764,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1381082723,
              "status": "passed"
            },
            "line": 29,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 889779692,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6573617955,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3211294598,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1204913720,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5768986362,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 848927450,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2335848710,
              "status": "passed"
            },
            "line": 36,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 709075324,
              "status": "passed"
            },
            "line": 37,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 930103168,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1710487355,
              "status": "passed"
            },
            "line": 39,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1033020727,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1810160701,
              "status": "passed"
            },
            "line": 41,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1042497577,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3055312467,
              "status": "passed"
            },
            "line": 43,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1046010598,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1905638460,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 478707381,
              "status": "passed"
            },
            "line": 46,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1754148620,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 48,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 589619738,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2614114104,
              "status": "passed"
            },
            "line": 50,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 601641017,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8609816530,
              "status": "passed"
            },
            "line": 52,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4166036298,
              "status": "passed"
            },
            "comments": [
              {
                "line": 53,
                "value": "#And I click the continue button"
              }
            ],
            "line": 54,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13884432368,
              "status": "passed"
            },
            "line": 55,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000254288,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 477592621,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18894227063,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000222054,
              "status": "passed"
            },
            "line": 59,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1672066712,
              "status": "passed"
            },
            "line": 60,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 61
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 205737185,
              "status": "passed"
            },
            "line": 62,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000253884,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13724531727,
              "status": "passed"
            },
            "line": 64,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@registration01Jun"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49487,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34783,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 42025,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9206,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8493155339,
              "status": "passed"
            },
            "line": 68,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000226511,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22825851134,
              "status": "passed"
            },
            "line": 70,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000250877,
              "status": "passed"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10478168338,
              "status": "passed"
            },
            "line": 72,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000250151,
              "status": "passed"
            },
            "line": 73,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7129239165,
              "status": "passed"
            },
            "line": 74,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000233275,
              "status": "passed"
            },
            "line": 75,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 658595793,
              "status": "passed"
            },
            "line": 76,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 913681329,
              "status": "passed"
            },
            "line": 77,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 81
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 82,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 83,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 84,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 57346,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 39902,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9580,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 252426628,
              "status": "passed"
            },
            "line": 88,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1480449883,
              "status": "passed"
            },
            "line": 89,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 93
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47182,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26728,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 95362,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15157,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1821245678,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 98
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 537284673,
              "status": "passed"
            },
            "line": 99,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 863898853,
              "status": "passed"
            },
            "line": 100,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37178,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26113,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 105,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 181006,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15307,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1902797625,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 98
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 427563831,
              "status": "passed"
            },
            "line": 99,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 867787071,
              "status": "passed"
            },
            "line": 100,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 106,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25480,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 47847,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13088,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8375021497,
              "status": "passed"
            },
            "line": 109,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000250991,
              "status": "passed"
            },
            "line": 110,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22916232979,
              "status": "passed"
            },
            "line": 111,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000242750,
              "status": "passed"
            },
            "line": 112,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11027505255,
              "status": "passed"
            },
            "line": 113,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000284952,
              "status": "passed"
            },
            "line": 114,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11127728552,
              "status": "passed"
            },
            "line": 115,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7002532343,
              "status": "passed"
            },
            "line": 116,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000263903,
              "status": "passed"
            },
            "line": 117,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6990912287,
              "status": "passed"
            },
            "line": 118,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 119
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 122
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 379695116,
              "status": "passed"
            },
            "line": 123,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1199477088,
              "status": "passed"
            },
            "line": 124,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 125
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52933,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35466,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 103312,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14595,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3575618,
              "status": "passed"
            },
            "line": 129,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65184,
              "status": "passed"
            },
            "line": 130,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7952692543,
              "status": "passed"
            },
            "line": 131,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000227519,
              "status": "passed"
            },
            "line": 132,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22941612127,
              "status": "passed"
            },
            "line": 133,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000221516,
              "status": "passed"
            },
            "line": 134,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11026972628,
              "status": "passed"
            },
            "line": 135,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000288049,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11153586617,
              "status": "passed"
            },
            "line": 137,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6950722065,
              "status": "passed"
            },
            "line": 138,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000218587,
              "status": "passed"
            },
            "line": 139,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7696179271,
              "status": "passed"
            },
            "line": 140,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 141
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 142
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 144
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 427094085,
              "status": "passed"
            },
            "line": 145,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29671238641,
              "status": "passed"
            },
            "line": 146,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000230141,
              "status": "passed"
            },
            "line": 147,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 98035793,
              "status": "passed"
            },
            "line": 148,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10204927858,
              "status": "passed"
            },
            "line": 149,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 150
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189421997,
              "status": "passed"
            },
            "line": 151,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000262033,
              "status": "passed"
            },
            "line": 152,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 207867062,
              "status": "passed"
            },
            "line": 153,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 514563,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 357167,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Verify the Gender screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-gender-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 435040,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 168178,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10420945056,
              "status": "passed"
            },
            "line": 156,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 157
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187142303,
              "status": "passed"
            },
            "line": 158,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000413562,
              "status": "passed"
            },
            "line": 159,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 444914318,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 913472249,
              "status": "passed"
            },
            "line": 161,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 294901129,
              "status": "passed"
            },
            "line": 162,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 910345487,
              "status": "passed"
            },
            "line": 163,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000249263,
              "status": "passed"
            },
            "line": 164,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 431655997,
              "status": "passed"
            },
            "line": 165,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 733752414,
              "status": "passed"
            },
            "line": 166,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5864065301,
              "status": "passed"
            },
            "line": 167,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3205024389,
              "status": "passed"
            },
            "line": 168,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1123598529,
              "status": "passed"
            },
            "line": 169,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000282937,
              "status": "passed"
            },
            "line": 170,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 501939991,
              "status": "passed"
            },
            "line": 171,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 741804220,
              "status": "passed"
            },
            "line": 172,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5491109142,
              "status": "passed"
            },
            "line": 173,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 848385319,
              "status": "passed"
            },
            "line": 174,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000244722,
              "status": "passed"
            },
            "line": 175,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 812911368,
              "status": "passed"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 862749677,
              "status": "passed"
            },
            "line": 177,
            "name": "verify validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 653339504,
              "status": "passed"
            },
            "line": 178,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 983356233,
              "status": "passed"
            },
            "line": 179,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000240265,
              "status": "passed"
            },
            "line": 180,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 657467623,
              "status": "passed"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 852570831,
              "status": "passed"
            },
            "line": 182,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 388723609,
              "status": "passed"
            },
            "line": 183,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 969260452,
              "status": "passed"
            },
            "line": 184,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000230575,
              "status": "passed"
            },
            "line": 185,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 727682264,
              "status": "passed"
            },
            "line": 186,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 929712828,
              "status": "passed"
            },
            "line": 187,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 70359,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28139,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 190,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 49063,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11025,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 470610,
              "status": "passed"
            },
            "line": 191,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35105,
              "status": "passed"
            },
            "line": 192,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8311772060,
              "status": "passed"
            },
            "line": 193,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000241232,
              "status": "passed"
            },
            "line": 194,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22995280491,
              "status": "passed"
            },
            "line": 195,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000240342,
              "status": "passed"
            },
            "line": 196,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11162368395,
              "status": "passed"
            },
            "line": 197,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000231500,
              "status": "passed"
            },
            "line": 198,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10781210972,
              "status": "passed"
            },
            "line": 199,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6948666647,
              "status": "passed"
            },
            "line": 200,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000226365,
              "status": "passed"
            },
            "line": 201,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7664157084,
              "status": "passed"
            },
            "line": 202,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 203
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 204
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 205
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 206
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 443230940,
              "status": "passed"
            },
            "line": 207,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90000284276,
              "status": "passed"
            },
            "line": 208,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3309333005,
              "status": "passed"
            },
            "line": 209,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27331271709,
              "status": "passed"
            },
            "line": 210,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000240578,
              "status": "passed"
            },
            "line": 211,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8547909785,
              "status": "passed"
            },
            "line": 212,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseRegistration"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 51647,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32018,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 33047,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8394103958,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 203347,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22906611470,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11216553691,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000219002,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4864539950,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36659,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23314,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 39885,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9441,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3470838167,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17506998258,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 452050621,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000804263,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8992478452,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13160208278,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40127,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21373,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 33846,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7279,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11043433384,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4621742075,
              "status": "passed"
            },
            "line": 25,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000305816,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32323,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22405,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 31615,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11270,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21596710013,
              "status": "passed"
            },
            "line": 29,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9756919581,
              "status": "passed"
            },
            "line": 30,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 154366,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23715,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 40193,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10248,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2169771783,
              "status": "passed"
            },
            "line": 33,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 578186421,
              "status": "passed"
            },
            "line": 34,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 602700458,
              "status": "passed"
            },
            "line": 35,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39867,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28778,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 169639,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10718,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 613436,
              "status": "passed"
            },
            "line": 38,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65082,
              "status": "passed"
            },
            "line": 39,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4262216175,
              "status": "passed"
            },
            "line": 42,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12595586007,
              "status": "passed"
            },
            "comments": [
              {
                "line": 45,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 46,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 47,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 48,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 49,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33222,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21225,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 170958,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15560,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13807842901,
              "status": "passed"
            },
            "line": 52,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1557622653,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48544,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29127,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 41675,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10343,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3512439549,
              "status": "passed"
            },
            "line": 61,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20056893456,
              "status": "passed"
            },
            "line": 62,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000305152,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1782028538,
              "status": "passed"
            },
            "line": 64,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 233095695,
              "status": "passed"
            },
            "line": 69,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 522770070,
              "status": "passed"
            },
            "line": 70,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42842,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29405,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 49189,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9098,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2807343336,
              "status": "passed"
            },
            "line": 73,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000361175,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 38331,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27951,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 41110,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9973,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8363180613,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 136980,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23228870817,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10888093109,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000243007,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4724982196,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29897,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 38935,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10863,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3470301557,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17480804017,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 378393276,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000371810,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8557274727,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13250072748,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34702,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21774,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 35576,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12423,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13165214470,
              "status": "passed"
            },
            "line": 24,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33609118725,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 26,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6220130277,
              "status": "passed"
            },
            "line": 27,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1227034912,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2534348859,
              "status": "passed"
            },
            "line": 29,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10192800506,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46045,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31621,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 32505,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7479,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18342126419,
              "status": "passed"
            },
            "line": 33,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1355236379,
              "status": "passed"
            },
            "line": 34,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41904,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28189,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 44981,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11188,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 418283408,
              "status": "passed"
            },
            "line": 37,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9334978270,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20785,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 32015,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8770,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 450253038,
              "status": "passed"
            },
            "line": 41,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8411018038,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33472,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21806,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 31222,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7071,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 434104930,
              "status": "passed"
            },
            "line": 45,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1998637340,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31323,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49557,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 33309,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7221,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 450490405,
              "status": "passed"
            },
            "line": 49,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40980,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32885,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 33803,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6995,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2089534453,
              "status": "passed"
            },
            "line": 53,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11543696659,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1092801805,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3075719268,
              "status": "passed"
            },
            "line": 56,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46411,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23121,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 33331,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7277,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9388007978,
              "status": "passed"
            },
            "line": 59,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44060,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17063,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 32592,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6809,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17924055658,
              "status": "passed"
            },
            "line": 62,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31853,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22587,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 37740,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9560,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2633324002,
              "status": "passed"
            },
            "line": 65,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21438,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 39895,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8562,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 372262628,
              "status": "passed"
            },
            "line": 68,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37442,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 40776,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8581,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2003484674,
              "status": "passed"
            },
            "line": 71,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@ClinicLocator"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 50046,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21854,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36903,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7281,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 628255,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43065,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8280404603,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22968544351,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000259759,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10680777448,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000218161,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7122348160,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9381189035,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 455909942,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29357143929,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000235657,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69754628592,
              "status": "passed"
            },
            "line": 22,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13904130676,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000234459,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 59202,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24151,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 48019,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9514,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14053407064,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000296069,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38027495497,
              "status": "passed"
            },
            "line": 30,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000254231,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39346,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22076,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 34920,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6635,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 870758593,
              "status": "passed"
            },
            "line": 34,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 370028243,
              "status": "passed"
            },
            "line": 39,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000331611,
              "status": "passed"
            },
            "line": 40,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41378,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 46609,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10288,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 557991972,
              "status": "passed"
            },
            "comments": [
              {
                "line": 43,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 44,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 45,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 184698,
              "status": "passed"
            },
            "line": 49,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6916339516,
              "status": "passed"
            },
            "line": 50,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1009325830,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 80464,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21673,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 40732,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7498,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1893944717,
              "status": "passed"
            },
            "line": 57,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1655957689,
              "status": "passed"
            },
            "line": 63,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 64
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1066254647,
              "status": "passed"
            },
            "line": 65,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1052190759,
              "status": "passed"
            },
            "line": 66,
            "name": "I clicks on \"${before.meal.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${before.meal.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997094951,
              "status": "passed"
            },
            "line": 67,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37546,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20993,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 746123340,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19772,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000268446,
              "status": "passed"
            },
            "line": 70,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3210100379,
              "status": "passed"
            },
            "line": 71,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 72
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 73
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 931299276,
              "status": "passed"
            },
            "line": 74,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7599130973,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nParacetamol added successfully! text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/health/MedicineReminder.feature:75)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 75,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 76
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 77,
            "value": "#      | ${add.another.med}                   |"
          },
          {
            "line": 78,
            "value": "#      | ${notNow.text}                       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16179,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 778005890,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15268,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 100657981275,
              "status": "passed"
            },
            "line": 81,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173622,
              "status": "passed"
            },
            "line": 82,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12006241459,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 19962e6c-a0fa-4d69-befb-eb37467c883e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.TextView[contains(@text,\u0027Medicine Info\u0027)])[2]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseHealthScreen.enterDetailsInAddMedScreen(PulseHealthScreen.java:306)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MedicineReminderSteps.enterInfoInAddMedicineScreen(MedicineReminderSteps.java:30)\n\tat ✽.And I enter following details in add medicine screen(features/health/MedicineReminder.feature:83)\n",
              "status": "failed"
            },
            "line": 83,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 89
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 93,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 95
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 96,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43898,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15443,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 800158386,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 35840270817,
              "status": "passed"
            },
            "line": 99,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8361479146,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nMedicine Reminder text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:100)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 100,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28353,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22765,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "navigate to health screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;navigate-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 804143125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15324,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8390611712,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 19962e6c-a0fa-4d69-befb-eb37467c883e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Medicine Reminder\u0027)]/preceding::android.widget.ImageView[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.DieticianScreen.SelectBack_Icon(DieticianScreen.java:396)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.Back_MedicalRemainder(DieticianSteps.java:195)\n\tat ✽.And I click the Back button in medical remainder(features/health/MedicineReminder.feature:104)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 104,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27550,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14981,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify User should be able to navigate to calendar page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-calendar-page",
        "after": [
          {
            "result": {
              "duration": 799567618,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19982,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000247342,
              "status": "passed"
            },
            "line": 107,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3617789822,
              "status": "passed"
            },
            "line": 108,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 20397815303,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 19962e6c-a0fa-4d69-befb-eb37467c883e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Medicine Reminder\u0027]//../../parent::android.view.ViewGroup/preceding::android.view.ViewGroup[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseHealthScreen.clickCalendarTile(PulseHealthScreen.java:242)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnCalendarButton(LocationSteps.java:96)\n\tat ✽.Then I click on Calendar tile(features/health/MedicineReminder.feature:109)\n",
              "status": "failed"
            },
            "line": 109,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 110,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 111
              },
              {
                "cells": [
                  "${Medicine_Info}"
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 42717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20794,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 33247,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6415,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8725339874,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 144991,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23207994461,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10899531660,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000251283,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10848731373,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4643212915,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41626,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20521,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7820,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3505696442,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17425265949,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 348578117,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000295046,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8313902775,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13950786288,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 32398,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6498,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22111458275,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000287529,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1107566598,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51494,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21398,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 1763105422,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20107,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8491353928,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17862878114,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nThere are no events available at the moment text is displayed on page , Stay tuned for events on health and fitness text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\n\tat ✽.And I verify following texts are displayed(features/home/MyEvents.feature:32)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40129,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30497,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 51631,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9497,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8563828605,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2427642660,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to login using email account"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And user click on \"CONTINUE WITH GOOGLE\" with Google button"
          },
          {
            "line": 7,
            "value": "#    And I click the \"Email\"  in Continue with Gmail"
          },
          {
            "line": 8,
            "value": "#      | Emailid  | ${facebook.text} |"
          },
          {
            "line": 9,
            "value": "#      | Password  | pulsesgqa@123 |"
          },
          {
            "line": 10,
            "value": "#    Then user should be landed home screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 30601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15065,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 45049,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7016,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8241796333,
              "status": "passed"
            },
            "line": 13,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139682,
              "status": "passed"
            },
            "line": 14,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22831183724,
              "status": "passed"
            },
            "line": 15,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11100573756,
              "status": "passed"
            },
            "line": 16,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000236311,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4422306369,
              "status": "passed"
            },
            "line": 18,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26850,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15605,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42648,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9157,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 83534,
              "status": "passed"
            },
            "line": 21,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3514913194,
              "status": "passed"
            },
            "line": 22,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18095415015,
              "status": "passed"
            },
            "line": 23,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 25
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 346422424,
              "status": "passed"
            },
            "line": 26,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000392689,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8287151649,
              "status": "passed"
            },
            "line": 28,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14256936518,
              "status": "passed"
            },
            "line": 29,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42062,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22672,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 35785,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6457,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21136286267,
              "status": "passed"
            },
            "line": 32,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000331517,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1157130312,
              "status": "passed"
            },
            "line": 34,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17864889984,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 43,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 44,
            "value": "#    And I Like the post"
          },
          {
            "line": 45,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 46,
            "value": "#    And I Like the post"
          },
          {
            "line": 48,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 49,
            "value": "#    And I share the post"
          },
          {
            "line": 50,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 53,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 54,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 55,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 58,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 59,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 36876,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15827,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 48720,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10769,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7564731682,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000319729,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35991,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21619,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 39859,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10814,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13169236377,
              "status": "passed"
            },
            "line": 66,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29038,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16584,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 1521196375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5368208919,
              "status": "passed"
            },
            "line": 72,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7772240128,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5bc75637-97c5-4093-83f8-1ac6f23a6fcb\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Like\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.WealthScreen.clickLikeButton(WealthScreen.java:166)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iLikeThePost(WealthSteps.java:75)\n\tat ✽.And I Like the post(features/home/MyHealthContent.feature:73)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 73520,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21370,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 1485962723,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19647,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12676976325,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5bc75637-97c5-4093-83f8-1ac6f23a6fcb\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Share\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.WealthScreen.clickShareButton(WealthScreen.java:194)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iShareThePost(WealthSteps.java:90)\n\tat ✽.And I share the post(features/home/MyHealthContent.feature:76)\n",
              "status": "failed"
            },
            "line": 76,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 77,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32586,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21190,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 79,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 1446565511,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19091,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18310393896,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5bc75637-97c5-4093-83f8-1ac6f23a6fcb\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[contains(@text,\u0027First Steps\u0027)]/preceding::android.widget.ImageView}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.WealthScreen.clickFullViewBackButton(WealthScreen.java:157)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iNavigateToStoryPostPage(WealthSteps.java:70)\n\tat ✽.Then I navigate to story post page(features/home/MyHealthContent.feature:80)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 80,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on one pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 32098,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 51609,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9564,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 965346,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41181,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8604269247,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000235537,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22796806327,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000213528,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11211609597,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000247135,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7113840110,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000227471,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7368373628,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 342457644,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28519235391,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000337826,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69347887427,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13416797952,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000233657,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31122,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15512,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 62262,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9477,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 459272883,
              "status": "passed"
            },
            "line": 30,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000334344,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 28,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32579,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20059,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 44479,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6856,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171580227,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 36
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 33,
            "name": "@NotificationCenter_my"
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@notificationiOS"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 32439,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 37098,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6794,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8855675513,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109833,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23027112506,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10995767654,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000205902,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4757547426,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25974,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15912,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45815,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8635,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 90125,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3458952650,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17548977092,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 345761564,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000265155,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9510407788,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14073948683,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34943,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20673,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 42545,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8847,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12213205463,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 798887540,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4210030551,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29462,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20077,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 43362,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8223,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 218860191,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8708662283,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 436400150,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 41,
                    "value": "#   | ${not.connected.wearable}  |"
                  }
                ],
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243219285,
              "status": "passed"
            },
            "line": 44,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22690,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21157,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 41323,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9324,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8653120746,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 91103,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22873898187,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11189906560,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000212427,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4741062675,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29971,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20878,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 35852,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10248,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 409624,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3439987828,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17607723483,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 329031124,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000343552,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8861650544,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13407909137,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27823,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16326,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 34246,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6239,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000254930,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#  Given User has pulse app"
              }
            ],
            "line": 25,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5766610877,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 27,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000231331,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 320095385,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8578143742,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24589,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20939,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 44458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9984,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 284194963,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3945227112,
              "status": "passed"
            },
            "line": 37,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185580168,
              "status": "passed"
            },
            "line": 38,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1454897930,
              "status": "passed"
            },
            "line": 39,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 41,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 27015,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16055,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000258780,
              "status": "passed"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 297242121,
              "status": "passed"
            },
            "line": 44,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4452005705,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5485493681,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15806333557,
              "status": "passed"
            },
            "line": 47,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3454669877,
              "status": "passed"
            },
            "line": 48,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3431917875,
              "status": "passed"
            },
            "line": 50,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1668523373,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3524913327,
              "status": "passed"
            },
            "line": 53,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 54
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40818,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14454,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 46747,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10784,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9035989408,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000332795,
              "status": "passed"
            },
            "line": 59,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8777850151,
              "status": "passed"
            },
            "line": 60,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3236748914,
              "status": "passed"
            },
            "line": 61,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3852904675,
              "status": "passed"
            },
            "line": 62,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2894626583,
              "status": "passed"
            },
            "line": 63,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 64
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 952104866,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7616661977,
              "status": "passed"
            },
            "line": 66,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36702,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22716,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 40356,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7211,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4800873973,
              "status": "passed"
            },
            "line": 69,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4070139740,
              "status": "passed"
            },
            "line": 70,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4200383244,
              "status": "passed"
            },
            "line": 71,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9653893443,
              "status": "passed"
            },
            "line": 72,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24771,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15763,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 808567404,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18832,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15603907023,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e50c8078-f8ca-44a8-80d2-6357da6f44ed\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:510)\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickSkipfeedbutton(MyCommunitiesScreen.java:647)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickSkipbutton(MyCommunitiesSteps.java:208)\n\tat ✽.Then I click skip button in feeds screen(features/home/mycommunities/PulseMyCommunities.feature:76)\n",
              "status": "failed"
            },
            "line": 76,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 88
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 89,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26450,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15981,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 91,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 836414851,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15000231535,
              "status": "passed"
            },
            "comments": [
              {
                "line": 92,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 93,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7766831672,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e50c8078-f8ca-44a8-80d2-6357da6f44ed\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Category\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1706)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat ✽.And I clicks on \"${category.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:94)\n",
              "status": "failed"
            },
            "line": 94,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "I clicks on \"Mental Health\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Mental Health",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 103
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 104,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22712,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 901022709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7816615477,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: e50c8078-f8ca-44a8-80d2-6357da6f44ed\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1706)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat ✽.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:107)\n",
              "status": "failed"
            },
            "line": 107,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 110,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27507,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15264,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 45611,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10328,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8268494643,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 116717,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22957740545,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11069655045,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000269385,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4674985415,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31327,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21407,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 44161,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8997,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 141104,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"pulse123456@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse123456@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3487126597,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17692764697,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 372975029,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000348988,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7807302006,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14167423517,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27596,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23493,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 40150,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5588522146,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000300238,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 657745044,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8619787445,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000225892,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19092,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14449,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pluse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 46422,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8378,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4684529317,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3031417952,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2825072468,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 253058598,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4154463691,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9895114985,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9801012688,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000236883,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3486101444,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 248808775,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1566905169,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2915362171,
              "status": "passed"
            },
            "line": 51,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pluse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22611,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15082,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 43585,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8492,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9245501044,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98262,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${pulse.legal.privacy.login.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.legal.privacy.login.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 56
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23025062187,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10718901402,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000296967,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4766616221,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29955,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20479,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 41830,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6769,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3511982325,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17500077844,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 359516492,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000404337,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8445659303,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14138878785,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20984,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15246,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 31869,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7781,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12351676769,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21279,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14871,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify the Legacy and Privacy should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-legacy-and-privacy-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 36790,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8214,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3887577058,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2500060945,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${icon.privacyNotice}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${icon.regulatory}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${app.version.text}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24559,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18708,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the Terms and condition screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-terms-and-condition-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 36196,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9120,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 296713341,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on \"${Terms.conditions.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${Terms.conditions.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13527748816,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2404087885,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1433110400,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the Back icon in Terms and conditions screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInTermsConditionScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23184,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22673,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 45628,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7003,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3243084459,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13503754920,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2284190561,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2427717779,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 45,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19363,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15369,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pulse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 51316,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8429,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000230663,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 337085158,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1662758865,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3183746568,
              "status": "passed"
            },
            "line": 50,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${clinicalSafety.text}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${ai.healthcare.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${localisation.text}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${privacy.date.protection.text}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${concern.reporting.text}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One pulse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/LegalAndPrivacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalandprivacy_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 20941,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15306,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 10,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 43450,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7818,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8573974768,
              "status": "passed"
            },
            "line": 11,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92988,
              "status": "passed"
            },
            "line": 12,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22971398777,
              "status": "passed"
            },
            "line": 13,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10661812269,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000236508,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4856340128,
              "status": "passed"
            },
            "line": 16,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23760,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19653,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 18,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 43109,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8761,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3503537103,
              "status": "passed"
            },
            "line": 19,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17101586130,
              "status": "passed"
            },
            "line": 20,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 326235268,
              "status": "passed"
            },
            "line": 23,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000275963,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8540299263,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14064985585,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25978,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21052,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Navigate to account screen and verify all the options",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen-and-verify-all-the-options",
        "after": [
          {
            "result": {
              "duration": 32066,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9172,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12230500369,
              "status": "passed"
            },
            "line": 29,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2005411371,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3549863589,
              "status": "passed"
            },
            "line": 31,
            "name": "user should verify following options on account screen",
            "match": {
              "location": "ManageProfileSteps.userShouldVerifyOptionsOnAccountScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.wearable.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${my.notification.text}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${icon.mySettings}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${my.feedback.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${icon.legal\u0026Privacy}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${sign.out.button.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${logs.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23186,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14914,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify wearable screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-wearable-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 1525589571,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25135,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 288280496,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on \"${my.wearable.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.wearable.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000319264,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16529043262,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nthe expected text is: //android.widget.TextView[contains(@text,\u0027Fitbit\u0027)]/following::android.view.ViewGroup[1], the expected text is: //android.widget.TextView[contains(@text,\u0027Garmin\u0027)]/following::android.view.ViewGroup[1]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(ManageProfileSteps.java:172)\n\tat ✽.Then I verify following text are displayed under My Wearables screen(features/my/MyAccount/PulseMyAccount.feature:45)\n",
              "status": "failed"
            },
            "line": 45,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${wearables.fitbit}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${wearables.garmin}"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 51,
            "name": "I verify following wearables are displayed as per the device",
            "match": {
              "location": "ManageProfileSteps.verifyWearables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${apple.health.text}##${wearables.googleFit}"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26908,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29879,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "navigate back to account screen from my wearable screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-wearable-screen",
        "after": [
          {
            "result": {
              "duration": 63214,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13024,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 369754776,
              "status": "passed"
            },
            "line": 55,
            "name": "user navigate back to the Home screen from My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.backNavigationMyWearablesHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000301427,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30630,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21530,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 80638,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6284,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11685787688,
              "status": "passed"
            },
            "line": 59,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000259169,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19113,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15403,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify reward screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-reward-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 34882,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5467,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 381386032,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on \"${my.rewards.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.rewards.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000299053,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2972296536,
              "status": "passed"
            },
            "line": 65,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.title}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${myRewards.badges}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${myRewards.vouchers}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${myRewards.discover}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${my.rewards.text}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22732,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "User access My Rewards FAQ",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;user-access-my-rewards-faq",
        "after": [
          {
            "result": {
              "duration": 34080,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7549,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4174734347,
              "status": "passed"
            },
            "line": 73,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000226291,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 412810283,
              "status": "passed"
            },
            "line": 75,
            "name": "User verify following texts are displayed in My Rewards screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnRewardsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.title}"
                ],
                "line": 76
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25969,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20415,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;2",
        "after": [
          {
            "result": {
              "duration": 34681,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5875,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 287236736,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.1}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 326105649,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1210878063,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.1.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.1.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 320661569,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.1}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.1}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20458,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14518,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;3",
        "after": [
          {
            "result": {
              "duration": 37916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5769,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1748023993,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.2}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 344267820,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1059073968,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.2.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.2.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 385274003,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.2}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.2}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26936,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14518,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;4",
        "after": [
          {
            "result": {
              "duration": 37563,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7887,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1099997463,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.3}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 321458313,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1207133309,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.3.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.3.ans.1}##${myRewards.faq.3.ans.2}##${myRewards.faq.3.ans.3}##${myRewards.faq.3.ans.4}##${myRewards.faq.3.ans.5}##${myRewards.faq.3.ans.6}##${myRewards.faq.3.ans.7}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 360304432,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.3}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.3}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 90,
            "value": "#      | ${myRewards.faq.4.2}##${myRewards.faq.4.3} | ${myRewards.faq.4.ans}                                                                                                                                                               | ${myRewards.faq.4.subtext} | ${myRewards.faq.4.ans}         |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28986,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19961,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 91,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;5",
        "after": [
          {
            "result": {
              "duration": 38878,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7965,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1277126274,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.5}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 352046940,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1263248690,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.5.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.5.ans.1}##${myRewards.faq.5.ans.2}##${myRewards.faq.5.ans.3}##${myRewards.faq.5.ans.4}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 311476441,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.5}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.5}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27324,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20263,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;6",
        "after": [
          {
            "result": {
              "duration": 36826,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7252,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1093836576,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.6}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 368645185,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1082505938,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.6.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.6.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 363413377,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.6}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.6}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26461,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20319,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 93,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;7",
        "after": [
          {
            "result": {
              "duration": 31648,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6006,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1224326406,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.7}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 380076913,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1063695942,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.7.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.7.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 349485182,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.7}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.7}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23545,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18339,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 94,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;8",
        "after": [
          {
            "result": {
              "duration": 34434,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6615,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1009264036,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.8}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 383146677,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1063474736,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.8.ans.subtext}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8.ans.subtext}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.8.ans.1}##${myRewards.faq.8.ans.2}##${myRewards.faq.8.ans.3}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 351443262,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.8}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.8}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23614,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18857,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 95,
        "name": "Verify the FAQ on my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-faq-on-my-rewards-screen;;9",
        "after": [
          {
            "result": {
              "duration": 37048,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6439,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1403877273,
              "status": "passed"
            },
            "line": 79,
            "name": "User verify following faqs and answers \"${myRewards.faq.9}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9}"
                ],
                "line": 80
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 359052215,
              "status": "passed"
            },
            "line": 81,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1006616948,
              "status": "passed"
            },
            "line": 82,
            "name": "User verify following faqs and answers \"${myRewards.faq.9.ans}\" are displayed in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9.ans}",
                  "offset": 40
                }
              ],
              "location": "ManageProfileSteps.verifyFAQOnRewardsScreen(String,DataTable)"
            },
            "matchedColumns": [
              1,
              3
            ],
            "rows": [
              {
                "cells": [
                  "${myRewards.faq.9.ans}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 317112787,
              "status": "passed"
            },
            "line": 84,
            "name": "I expand faq \"${myRewards.faq.9}\" in My Rewards screen",
            "match": {
              "arguments": [
                {
                  "val": "${myRewards.faq.9}",
                  "offset": 14
                }
              ],
              "location": "ManageProfileSteps.expandFAQOnRewardsScreen(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@MyAccount_my"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22759,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14482,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 97,
        "name": "navigate back to account screen from my rewards screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-my-rewards-screen",
        "after": [
          {
            "result": {
              "duration": 30619,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6024,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38625472871,
              "status": "passed"
            },
            "line": 98,
            "name": "I click on back button on my reward screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInRewardScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000273658,
              "status": "passed"
            },
            "line": 99,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29376,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21427,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 101,
        "name": "Verify Notification screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-notification-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 28423,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5677,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 357649042,
              "status": "passed"
            },
            "line": 102,
            "name": "I click on \"${my.notification.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.notification.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2158513350,
              "status": "passed"
            },
            "line": 103,
            "name": "User verify following texts are displayed in My Notification screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnNotificationScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 104
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19431,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14946,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "navigate back to account screen from Notification screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-notification-screen",
        "after": [
          {
            "result": {
              "duration": 30739,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5210,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 319258187,
              "status": "passed"
            },
            "line": 107,
            "name": "I click on back button on notification screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000303673,
              "status": "passed"
            },
            "line": 108,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23784,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20529,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify my feedback screen in Account tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 28344,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5589,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 877950280,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on \"${my.feedback.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.feedback.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2231709679,
              "status": "passed"
            },
            "line": 112,
            "name": "User verify following texts are displayed in My feedback screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyFeedbackScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${feedback.static.text}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${feedback.improvement}"
                ],
                "line": 114
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1984164256,
              "status": "passed"
            },
            "line": 115,
            "name": "User verify following feedback options are displayed in My feedback screen",
            "match": {
              "location": "ManageProfileSteps.verifyFeedbackOptionOnMyFeedbackScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${aime.text}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${health.article.text}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${bmi.text.uppercase}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${wrinkle.text}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "${health.assessment.text}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${babylon.symptom.checker}"
                ],
                "line": 121
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 314762796,
              "status": "passed"
            },
            "line": 122,
            "name": "I verify following edit box sample text is displayed in account screen",
            "match": {
              "location": "ManageProfileSteps.verifySampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${share.thought.text}"
                ],
                "line": 123
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17504,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15357,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 126,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 31149,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20161,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 377248770,
              "status": "passed"
            },
            "line": 127,
            "name": "I select \"5\" star in feedback screen",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 10
                }
              ],
              "location": "ManageProfileSteps.selectStarInFeedbackForm(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2193240695,
              "status": "passed"
            },
            "line": 128,
            "name": "I enter feedback",
            "match": {
              "location": "ManageProfileSteps.enterFeedback(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Feedback",
                  "Test_12345"
                ],
                "line": 129
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4816512136,
              "status": "passed"
            },
            "line": 130,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000308715,
              "status": "passed"
            },
            "line": 131,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44450,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 59348,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 38860,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6023,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 797965156,
              "status": "passed"
            },
            "line": 134,
            "name": "I click on \"${pulsePersonalised.text}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${pulsePersonalised.text}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000284361,
              "status": "passed"
            },
            "line": 135,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1682208143,
              "status": "passed"
            },
            "line": 136,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulsePersonalised.text}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${data.privacy.text}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1609369271,
              "status": "passed"
            },
            "line": 139,
            "name": "I verify data and privacy consent in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyDataAndPrivacyConsent(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pulse.personalised.consent.text1}"
                ],
                "line": 140
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text2}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text3}"
                ],
                "line": 142
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text4}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text5}"
                ],
                "line": 144
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text6}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "${pulse.personalised.consent.text7}"
                ],
                "line": 146
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27135,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "Save the consent with data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-with-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 36369,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7239,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 245861945,
              "status": "passed"
            },
            "line": 149,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4416552888,
              "status": "passed"
            },
            "line": 150,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2071739875,
              "status": "passed"
            },
            "line": 151,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 152
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8311492101,
              "status": "passed"
            },
            "line": 153,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23473,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15777,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Save the consent without data privacy check",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;save-the-consent-without-data-privacy-check",
        "after": [
          {
            "result": {
              "duration": 38339,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7889,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1802990197,
              "status": "passed"
            },
            "line": 156,
            "name": "I select the data privacy checkbox",
            "match": {
              "location": "ManageProfileSteps.dataPrivacyCheckbox()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3558597405,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2017815822,
              "status": "passed"
            },
            "line": 158,
            "name": "User verify following texts are displayed in pulse personalised screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnPulsePersonalisedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${consent.success.msg.text}"
                ],
                "line": 159
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8260073803,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27662,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 163,
        "name": "navigate back to account screen from pulse personalised screen",
        "description": "",
        "id": "verify-my-accounts-options-in-account-screen;navigate-back-to-account-screen-from-pulse-personalised-screen",
        "after": [
          {
            "result": {
              "duration": 75912,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6048,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8549388242,
              "status": "passed"
            },
            "line": 164,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000281383,
              "status": "passed"
            },
            "line": 165,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My accounts options in Account screen",
    "description": "1)My wearable\n2)My Rewards\n3)My Notifications\n4)My Feedback\n5)Pulse Personalised",
    "id": "verify-my-accounts-options-in-account-screen",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/PulseMyAccount.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyAccount_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27510,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20439,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 292380,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9246,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8882731346,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 164378,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23273313454,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10938516678,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000210819,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4733318470,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26449,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20655,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 32566,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6495,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3514428555,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17682915453,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 281607495,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000321649,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7696240934,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13680657733,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24432,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18645,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Navigate to account screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;navigate-to-account-screen",
        "after": [
          {
            "result": {
              "duration": 32566,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5874,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11882849791,
              "status": "passed"
            },
            "line": 24,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14885,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify my setting screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-my-setting-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 29438,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5452,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000236160,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 461443705,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on \"${icon.mySettings}\" link in Account screen",
            "match": {
              "arguments": [
                {
                  "val": "${icon.mySettings}",
                  "offset": 12
                }
              ],
              "location": "ManageProfileSteps.clickOnAccountOption(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000202189,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 30,
            "value": "##below steps are not working in Android"
          },
          {
            "line": 31,
            "value": "#    Then User verify following texts are displayed in My Setting screen"
          },
          {
            "line": 32,
            "value": "#      | ${country.text}          |"
          },
          {
            "line": 33,
            "value": "#      | ${country.name}          |"
          },
          {
            "line": 34,
            "value": "#      | ${language.text}         |"
          },
          {
            "line": 35,
            "value": "#      | ${lang.name.text}        |"
          },
          {
            "line": 36,
            "value": "#      | ${change.password.text}  |"
          },
          {
            "line": 37,
            "value": "##      | ${enable.face.auth.text} | 7 |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15243,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "navigate back to account screen from my setting screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;navigate-back-to-account-screen-from-my-setting-screen",
        "after": [
          {
            "result": {
              "duration": 36885,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7212,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 373892791,
              "status": "passed"
            },
            "line": 40,
            "name": "I click on back button on my settings screen to navigate to account screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInMySettingScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000259927,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/my/MyAccount/PulseMySetting.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettings_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "## fitness tab is not available in ios device"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 23905,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18496,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 26334,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7789,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8907587868,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 122459,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22883275390,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10669060181,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000209195,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4767879247,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20667,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15656,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35695,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8276,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3553698466,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17792410956,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 325683525,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000722772,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8076255436,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14030237705,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30448,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22080,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 1497151956,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15705,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12440061193,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 750890847,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify My Wearables tile on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${fitness.myWearables}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${fitness.myWearables.description}"
                ],
                "line": 27
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 391924918,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Connect Now button on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18381962481,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nthe expected text is: //android.widget.TextView[contains(@text,\u0027Fitbit\u0027)]/following::android.view.ViewGroup[1], the expected text is: //android.widget.TextView[contains(@text,\u0027Garmin\u0027)]/following::android.view.ViewGroup[1]\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(ManageProfileSteps.java:172)\n\tat ✽.Then I verify following text are displayed under My Wearables screen(features/my/MyWearable.feature:29)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 29,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${wearables.fitbit}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.garmin}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/my/MyWearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@myWearables_my"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27366,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19409,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 36675,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6669,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 574216,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32891,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8990687789,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000200374,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23325428843,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000224151,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10895342896,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000234351,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7007513874,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000269863,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6730134346,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 320789248,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28587960332,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000236114,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10493932920,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 203623359,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1479373836,
              "status": "passed"
            },
            "line": 27,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 921220441,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6647648518,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3189039217,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1101791307,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5801896244,
              "status": "passed"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 872852814,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2292738106,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 930679479,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1758599764,
              "status": "passed"
            },
            "line": 36,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1024418446,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1750622068,
              "status": "passed"
            },
            "line": 38,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 954761861,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3195259753,
              "status": "passed"
            },
            "line": 40,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 951148872,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2613903899,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 456082967,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737091486,
              "status": "passed"
            },
            "line": 44,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 523249144,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4274743789,
              "status": "passed"
            },
            "line": 46,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 496844502,
              "status": "passed"
            },
            "line": 47,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4321180976,
              "status": "passed"
            },
            "line": 48,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13479496369,
              "status": "passed"
            },
            "line": 49,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11978918849,
              "status": "passed"
            },
            "line": 50,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16207338600,
              "status": "passed"
            },
            "line": 51,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12140506752,
              "status": "passed"
            },
            "line": 52,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6833915251,
              "status": "passed"
            },
            "line": 53,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2289925345,
              "status": "passed"
            },
            "line": 54,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey",
    "keyword": "Feature",
    "uri": "features/my/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28994,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19027,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 25559,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5575,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8371542982,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 97228,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22918047685,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10589726684,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000301247,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4900688561,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22982,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14769,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 27878,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5243,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3462876311,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18000713420,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 349865593,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000294842,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8434702220,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13339313646,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13092339189,
              "status": "passed"
            },
            "line": 23,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39608671768,
              "status": "passed"
            },
            "line": 24,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19312,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16713,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 47292,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10729,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5336689106,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10078116557,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25766,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18772,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify the HRA Activity Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-report",
        "after": [
          {
            "result": {
              "duration": 32193,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7368,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30838394595,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.deseaseRisk}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.deseaseRiskDescription}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.deseaseRisk.statement1}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.deseaseRisk.statement2}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.deseaseRisk.statement3}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement3}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement4}"
                ],
                "line": 52
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20657,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify the HRA Activity Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-report",
        "after": [
          {
            "result": {
              "duration": 34056,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6656,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6307685799,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20661,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 30051,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7110,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29327200681,
              "status": "passed"
            },
            "line": 62,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 73
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27684,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19954,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 43791,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7267,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 26258792915,
              "status": "passed"
            },
            "line": 77,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine.description}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${babylon.hraReport.redMeat}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${babylon.hraReport.redMeat.description}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24513,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19692,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 34193,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11852,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9618282331,
              "status": "passed"
            },
            "line": 90,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${babylon.hraReport.change5}"
                ],
                "line": 96
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20213,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14687,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 36406,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7380,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5767995550,
              "status": "passed"
            },
            "line": 99,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3364760144,
              "status": "passed"
            },
            "line": 100,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15388970006,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${babylon.hraReport.body.blood}"
                ],
                "line": 103
              },
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${babylon.hraReport.body.thyroid}"
                ],
                "line": 107
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3392987600,
              "status": "passed"
            },
            "line": 108,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24543,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19020,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 28605,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6094,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3363334812,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2412693456,
              "status": "passed"
            },
            "line": 112,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 114
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37115620114,
              "status": "passed"
            },
            "line": 115,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 606016196,
              "status": "passed"
            },
            "line": 116,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 117
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3312505540,
              "status": "passed"
            },
            "line": 118,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002086812,
              "status": "passed"
            },
            "line": 119,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDesease}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 121
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3357601105,
              "status": "passed"
            },
            "line": 122,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21796,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20073,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 125,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 30348,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5844,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3393788874,
              "status": "passed"
            },
            "line": 126,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 891636732,
              "status": "passed"
            },
            "line": 127,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 128
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 129
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3453844977,
              "status": "passed"
            },
            "line": 130,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1233202786,
              "status": "passed"
            },
            "line": 131,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 132
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 133
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3288502053,
              "status": "passed"
            },
            "line": 134,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1765754533,
              "status": "passed"
            },
            "line": 135,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDesease}"
                ],
                "line": 136
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 137
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4637998906,
              "status": "passed"
            },
            "line": 138,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16647,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16184,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 141,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 30792,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6119,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4247466475,
              "status": "passed"
            },
            "line": 142,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1455955445,
              "status": "passed"
            },
            "line": 143,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 144
              },
              {
                "cells": [
                  "${babylon.start.assesment}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 146
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 265188971,
              "status": "passed"
            },
            "line": 147,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2389807273,
              "status": "passed"
            },
            "line": 148,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 149
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3237107630,
              "status": "passed"
            },
            "line": 150,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/my/health/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 26302,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18618,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 36966,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7808,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9081851596,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90861,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23224609351,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10933108315,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000240487,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4705187033,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 12,
            "value": "#    Then I verify below language options on toggle bar as per specified lbu on login page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 20507,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20026,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35689,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7590,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3501369591,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18049287189,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 414479205,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000299319,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7549870453,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14318494223,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24828,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 44764,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "User should be able to access Calendar screen",
        "description": "",
        "id": "verify-that-user-can-access-calendar-under-health-section;user-should-be-able-to-access-calendar-screen",
        "after": [
          {
            "result": {
              "duration": 33975,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8071,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000293898,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13435654481,
              "status": "passed"
            },
            "line": 27,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4218008095,
              "status": "passed"
            },
            "line": 28,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13449551947,
              "status": "passed"
            },
            "line": 29,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000217412,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 978018785,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${calendar.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${no.events.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 457092667,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on events dropdown button in calendar screen",
            "match": {
              "location": "LocationSteps.iClicksOnEventsButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29070891906,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify the following texts \"Calendar events\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Calendar events",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${medicine.reminders.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${appointments.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${vaccination.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${workout.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${pulse.tv.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${policy.remainder.text}"
                ],
                "line": 41
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can access calendar under health section",
    "description": "",
    "id": "verify-that-user-can-access-calendar-under-health-section",
    "keyword": "Feature",
    "uri": "features/my/health/Calendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@my_calendar"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21293,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42227,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9676,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 800663,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19244,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9316923068,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000213241,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22907340783,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000197426,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10777925764,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000217817,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6942979868,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000201492,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7266577009,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "TestFirstName"
                ],
                "line": 18
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 21
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 405402600,
              "status": "passed"
            },
            "line": 22,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28621091600,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000223297,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10571019116,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 26
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 195817961,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1496763182,
              "status": "passed"
            },
            "line": 28,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 908652294,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6619391570,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3177682855,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1102186815,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5891769487,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 811642765,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2375996481,
              "status": "passed"
            },
            "line": 35,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652787491,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 976793836,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1659959333,
              "status": "passed"
            },
            "line": 38,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 995134775,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1745159185,
              "status": "passed"
            },
            "line": 40,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 986280277,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3152015746,
              "status": "passed"
            },
            "line": 42,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1161684912,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2030798680,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 496152816,
              "status": "passed"
            },
            "line": 45,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1901852173,
              "status": "passed"
            },
            "line": 46,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 568665292,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2724691491,
              "status": "passed"
            },
            "line": 48,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 628809588,
              "status": "passed"
            },
            "line": 49,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4143452901,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14084014661,
              "status": "passed"
            },
            "line": 51,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22109,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19410,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "User should be able to access Chinese Medicine screen",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-access-chinese-medicine-screen",
        "after": [
          {
            "result": {
              "duration": 36134,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7056,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13282250028,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5067823578,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on Chinese Medicine button",
            "match": {
              "location": "ChineseMedicineSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3251526034,
              "status": "passed"
            },
            "line": 57,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.welcomeMessage}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${FirstName}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${chineseMedicine.statement}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${chineseMedicine.pruLife}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${chineseMedicine.pruLife.research}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3239154074,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on Continue button on Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21627,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16320,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify the carousel on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-carousel-on-chinese-medicine-journey;;2",
        "after": [
          {
            "result": {
              "duration": 27558,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5654,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2838402250,
              "status": "passed"
            },
            "line": 67,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page1.text}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${chineseMedicine.skipButton}"
                ],
                "line": 69
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1790267899,
              "status": "passed"
            },
            "line": 70,
            "name": "I swipe to Right for chinese medicine on carousal \"${chineseMedicine.page1.partialText}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.page1.partialText}",
                  "offset": 51
                }
              ],
              "location": "ChineseMedicineSteps.swipeLeftOrRightInChineseMed(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20790,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16839,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify the carousel on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-carousel-on-chinese-medicine-journey;;3",
        "after": [
          {
            "result": {
              "duration": 33443,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8161,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 469435944,
              "status": "passed"
            },
            "line": 67,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page2.text}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${chineseMedicine.skipButton}"
                ],
                "line": 69
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1830577802,
              "status": "passed"
            },
            "line": 70,
            "name": "I swipe to Right for chinese medicine on carousal \"${chineseMedicine.page2.partialText}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.page2.partialText}",
                  "offset": 51
                }
              ],
              "location": "ChineseMedicineSteps.swipeLeftOrRightInChineseMed(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17225,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "Verify the carousel on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-carousel-on-chinese-medicine-journey;;4",
        "after": [
          {
            "result": {
              "duration": 28898,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5814,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 515244227,
              "status": "passed"
            },
            "line": 67,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "matchedColumns": [
              0,
              2
            ],
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.page3.text}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${chineseMedicine.startAssessmentBtn}"
                ],
                "line": 69
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2555314299,
              "status": "passed"
            },
            "line": 70,
            "name": "I swipe to Right for chinese medicine on carousal \"${chineseMedicine.page3.partialText}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.page3.partialText}",
                  "offset": 51
                }
              ],
              "location": "ChineseMedicineSteps.swipeLeftOrRightInChineseMed(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21573,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15055,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 78,
        "name": "User should be able to complete Chinese Medicine profile",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;user-should-be-able-to-complete-chinese-medicine-profile",
        "after": [
          {
            "result": {
              "duration": 36934,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8793,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3207846018,
              "status": "passed"
            },
            "line": 79,
            "name": "I click on Start Assessment button on Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnStartAssessment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5000293409,
              "status": "passed"
            },
            "line": 80,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 884285049,
              "status": "passed"
            },
            "line": 81,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.profile.title}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${chineseMedicine.profile.description}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${chineseMedicine.profile.mandatoryFields}"
                ],
                "line": 84
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31791215882,
              "status": "passed"
            },
            "line": 85,
            "name": "change Chinese Medicine user profile details",
            "match": {
              "location": "ChineseMedicineSteps.editChineseMedUserProfile(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "City",
                  "${chineseMedicine.profile.cityValue}"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Smoking Habits",
                  "${chineseMedicine.profile.smokingHabitsValue}"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Drinking Habits",
                  "${chineseMedicine.profile.drinkingHabitsValue}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Exercise Habits",
                  "${chineseMedicine.profile.exerciseHabitsValue}"
                ],
                "line": 89
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3984161537,
              "status": "passed"
            },
            "line": 90,
            "name": "I click on Next button on Chinese Medicine Profile screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnNext()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2409991978,
              "status": "passed"
            },
            "line": 91,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.answer.option1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option2}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option3}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option4}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${chineseMedicine.answer.option5}"
                ],
                "line": 96
              },
              {
                "comments": [
                  {
                    "line": 97,
                    "value": "#      | ${chinese.medicine.NextButton}    |"
                  },
                  {
                    "line": 98,
                    "value": "#      | ${chinese.medicine.PreviousButton}|"
                  }
                ],
                "cells": [
                  "${chineseMedicine.statement.1}"
                ],
                "line": 99
              }
            ],
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27731,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20889,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;2",
        "after": [
          {
            "result": {
              "duration": 32514,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6730,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2664986563,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.1}\" for the question \"${chineseMedicine.question.1}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.1}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.1}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23027,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18763,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;3",
        "after": [
          {
            "result": {
              "duration": 27607,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7239,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3142763392,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.2}\" for the question \"${chineseMedicine.question.2}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.2}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.2}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25379,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20447,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;4",
        "after": [
          {
            "result": {
              "duration": 35217,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8707,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2541853067,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.3}\" for the question \"${chineseMedicine.question.3}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.3}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.3}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30834,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15504,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;5",
        "after": [
          {
            "result": {
              "duration": 34393,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5508,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3381324437,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.4}\" for the question \"${chineseMedicine.question.4}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.4}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.4}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18552,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20849,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;6",
        "after": [
          {
            "result": {
              "duration": 32186,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7043,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2550719948,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.5}\" for the question \"${chineseMedicine.question.5}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.5}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.5}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19796,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 111,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;7",
        "after": [
          {
            "result": {
              "duration": 36358,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5949,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3250948766,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.6}\" for the question \"${chineseMedicine.question.6}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.6}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.6}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17688,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15051,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;8",
        "after": [
          {
            "result": {
              "duration": 36706,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8783,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2572628509,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.7}\" for the question \"${chineseMedicine.question.7}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.7}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.7}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14937,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;9",
        "after": [
          {
            "result": {
              "duration": 37091,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9503,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3333069755,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.8}\" for the question \"${chineseMedicine.question.8}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.8}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.8}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20934,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21737,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 114,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;10",
        "after": [
          {
            "result": {
              "duration": 26414,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5169,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2674624203,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.9}\" for the question \"${chineseMedicine.question.9}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.9}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.9}",
                  "offset": 61
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17627,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14351,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 115,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;11",
        "after": [
          {
            "result": {
              "duration": 34324,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7188,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3302226541,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.10}\" for the question \"${chineseMedicine.question.10}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.10}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.10}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29773,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20970,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 116,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;12",
        "after": [
          {
            "result": {
              "duration": 32691,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6449,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2578149140,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.11}\" for the question \"${chineseMedicine.question.11}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.11}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.11}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22571,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18847,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 117,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;13",
        "after": [
          {
            "result": {
              "duration": 35263,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8976,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3392833990,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.12}\" for the question \"${chineseMedicine.question.12}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.12}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.12}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44952,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20643,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 118,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;14",
        "after": [
          {
            "result": {
              "duration": 27907,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2535428469,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.13}\" for the question \"${chineseMedicine.question.13}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.13}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.13}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17951,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14736,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 119,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;15",
        "after": [
          {
            "result": {
              "duration": 25481,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5514,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2569295328,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.14}\" for the question \"${chineseMedicine.question.14}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.14}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.14}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20628,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 120,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;16",
        "after": [
          {
            "result": {
              "duration": 48112,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8961,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2512810338,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.15}\" for the question \"${chineseMedicine.question.15}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.15}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.15}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21489,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14530,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 121,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;17",
        "after": [
          {
            "result": {
              "duration": 37132,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7012,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2598211396,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.16}\" for the question \"${chineseMedicine.question.16}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.16}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.16}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20611,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14409,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 122,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;18",
        "after": [
          {
            "result": {
              "duration": 36717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8922,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2582535971,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.17}\" for the question \"${chineseMedicine.question.17}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.17}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.17}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27398,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20674,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;19",
        "after": [
          {
            "result": {
              "duration": 48810,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8107,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2600258178,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.18}\" for the question \"${chineseMedicine.question.18}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.18}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.18}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28879,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15309,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 124,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;20",
        "after": [
          {
            "result": {
              "duration": 34956,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6637,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3241553064,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.19}\" for the question \"${chineseMedicine.question.19}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.19}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.19}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25560,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14477,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 125,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;21",
        "after": [
          {
            "result": {
              "duration": 37553,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8086,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2581155993,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.20}\" for the question \"${chineseMedicine.question.20}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.20}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.20}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28440,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15388,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 126,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;22",
        "after": [
          {
            "result": {
              "duration": 33593,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6528,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3370305098,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.21}\" for the question \"${chineseMedicine.question.21}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.21}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.21}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23953,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19298,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 127,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;23",
        "after": [
          {
            "result": {
              "duration": 32565,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5778,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2534151595,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.22}\" for the question \"${chineseMedicine.question.22}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.22}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.22}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27218,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15807,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;24",
        "after": [
          {
            "result": {
              "duration": 37036,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8219,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3272692655,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.23}\" for the question \"${chineseMedicine.question.23}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.23}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.23}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19741,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15070,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 129,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;25",
        "after": [
          {
            "result": {
              "duration": 30123,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8033,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2503068877,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.24}\" for the question \"${chineseMedicine.question.24}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.24}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.24}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24767,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13937,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;26",
        "after": [
          {
            "result": {
              "duration": 35794,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3421003036,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.25}\" for the question \"${chineseMedicine.question.25}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.25}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.25}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23463,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18618,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 131,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;27",
        "after": [
          {
            "result": {
              "duration": 37504,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6634,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2533800855,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.26}\" for the question \"${chineseMedicine.question.26}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.26}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.26}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29298,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14690,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 132,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;28",
        "after": [
          {
            "result": {
              "duration": 29215,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5729,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3270570422,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.27}\" for the question \"${chineseMedicine.question.27}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.27}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.27}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21363,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;29",
        "after": [
          {
            "result": {
              "duration": 54656,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8788,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2675534048,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.28}\" for the question \"${chineseMedicine.question.28}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.28}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.28}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22136,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21425,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 134,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;30",
        "after": [
          {
            "result": {
              "duration": 28031,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5589,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3908340940,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.29}\" for the question \"${chineseMedicine.question.29}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.29}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.29}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21630,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20097,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 135,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;31",
        "after": [
          {
            "result": {
              "duration": 26977,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8063,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2633835008,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.30}\" for the question \"${chineseMedicine.question.30}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.30}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.30}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18079,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20666,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 136,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;32",
        "after": [
          {
            "result": {
              "duration": 26980,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5729,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3276810699,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.31}\" for the question \"${chineseMedicine.question.31}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.31}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.31}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23126,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18628,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 137,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;33",
        "after": [
          {
            "result": {
              "duration": 27848,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5718,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2521321611,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.32}\" for the question \"${chineseMedicine.question.32}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.32}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.32}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20836,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16350,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;34",
        "after": [
          {
            "result": {
              "duration": 29695,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6172,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3307606415,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.33}\" for the question \"${chineseMedicine.question.33}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.33}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.33}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21115,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15193,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 139,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;35",
        "after": [
          {
            "result": {
              "duration": 26303,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5603,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2711165303,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.34}\" for the question \"${chineseMedicine.question.34}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.34}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.34}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27335,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17453,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 140,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;36",
        "after": [
          {
            "result": {
              "duration": 36086,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8035,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3226569236,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.35}\" for the question \"${chineseMedicine.question.35}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.35}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.35}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23060,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18213,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 141,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;37",
        "after": [
          {
            "result": {
              "duration": 26608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5844,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2561048661,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.36}\" for the question \"${chineseMedicine.question.36}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.36}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.36}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17266,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14338,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 142,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;38",
        "after": [
          {
            "result": {
              "duration": 27313,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5847,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3452484869,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.37}\" for the question \"${chineseMedicine.question.37}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.37}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.37}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18064,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 143,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;39",
        "after": [
          {
            "result": {
              "duration": 32310,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7420,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2664394604,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.38}\" for the question \"${chineseMedicine.question.38}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.38}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.38}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25232,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15679,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;40",
        "after": [
          {
            "result": {
              "duration": 36940,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3423763161,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.39}\" for the question \"${chineseMedicine.question.39}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.39}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.39}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20594,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 145,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;41",
        "after": [
          {
            "result": {
              "duration": 32011,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6586,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2508273168,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.40}\" for the question \"${chineseMedicine.question.40}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.40}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.40}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27703,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17977,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;42",
        "after": [
          {
            "result": {
              "duration": 33486,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6854,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3275152641,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.41}\" for the question \"${chineseMedicine.question.41}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.41}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.41}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23333,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18043,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 147,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;43",
        "after": [
          {
            "result": {
              "duration": 27091,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5624,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2608863083,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.42}\" for the question \"${chineseMedicine.question.42}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.42}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.42}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17181,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14593,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;44",
        "after": [
          {
            "result": {
              "duration": 37336,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5932,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3373219446,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.43}\" for the question \"${chineseMedicine.question.43}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.43}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.43}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20353,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19882,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;45",
        "after": [
          {
            "result": {
              "duration": 30220,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5996,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2568417105,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.44}\" for the question \"${chineseMedicine.question.44}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.44}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.44}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17279,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15033,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 150,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;46",
        "after": [
          {
            "result": {
              "duration": 28326,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5932,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2552502407,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.45}\" for the question \"${chineseMedicine.question.45}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.45}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.45}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21529,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14839,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 151,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;47",
        "after": [
          {
            "result": {
              "duration": 37362,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2598466058,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.46}\" for the question \"${chineseMedicine.question.46}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.46}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.46}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14426,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 152,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;48",
        "after": [
          {
            "result": {
              "duration": 26508,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8374,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2608387579,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.47}\" for the question \"${chineseMedicine.question.47}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.47}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.47}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25889,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20152,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 153,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;49",
        "after": [
          {
            "result": {
              "duration": 31803,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8451,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2572614601,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.48}\" for the question \"${chineseMedicine.question.48}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.48}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.48}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28090,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20518,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 154,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;50",
        "after": [
          {
            "result": {
              "duration": 33936,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7240,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2516849392,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.49}\" for the question \"${chineseMedicine.question.49}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.49}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.49}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23687,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19819,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;51",
        "after": [
          {
            "result": {
              "duration": 37220,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6560,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2994603834,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.50}\" for the question \"${chineseMedicine.question.50}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.50}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.50}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20663,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15577,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;52",
        "after": [
          {
            "result": {
              "duration": 27673,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5320,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2584959688,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.51}\" for the question \"${chineseMedicine.question.51}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.51}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.51}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21233,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14778,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 157,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;53",
        "after": [
          {
            "result": {
              "duration": 33148,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7133,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3192823931,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.52}\" for the question \"${chineseMedicine.question.52}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.52}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.52}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26254,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19879,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 158,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;54",
        "after": [
          {
            "result": {
              "duration": 44705,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9128,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2599873603,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.53}\" for the question \"${chineseMedicine.question.53}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.53}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.53}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62550,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 76114,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;55",
        "after": [
          {
            "result": {
              "duration": 37154,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3279631003,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.54}\" for the question \"${chineseMedicine.question.54}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.54}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.54}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27574,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20585,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 160,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;56",
        "after": [
          {
            "result": {
              "duration": 35737,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6770,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2590687167,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.55}\" for the question \"${chineseMedicine.question.55}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.55}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.55}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21461,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15173,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 161,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;57",
        "after": [
          {
            "result": {
              "duration": 26643,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3274096906,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.56}\" for the question \"${chineseMedicine.question.56}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.56}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.56}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21827,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18613,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;58",
        "after": [
          {
            "result": {
              "duration": 48466,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8186,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2663568810,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.57}\" for the question \"${chineseMedicine.question.57}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.57}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.57}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28691,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42633,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 163,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;59",
        "after": [
          {
            "result": {
              "duration": 36407,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7825,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2550677320,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.58}\" for the question \"${chineseMedicine.question.58}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.58}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.58}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28257,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20069,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 164,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;60",
        "after": [
          {
            "result": {
              "duration": 35921,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6913,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2593817712,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.59}\" for the question \"${chineseMedicine.question.59}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.59}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.59}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21617,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22846,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 165,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;61",
        "after": [
          {
            "result": {
              "duration": 27098,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5514,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2545527251,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.60}\" for the question \"${chineseMedicine.question.60}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.60}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.60}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19424,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14104,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 166,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;62",
        "after": [
          {
            "result": {
              "duration": 35288,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8751,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2564262582,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.61}\" for the question \"${chineseMedicine.question.61}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.61}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.61}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23582,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15694,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 167,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;63",
        "after": [
          {
            "result": {
              "duration": 34268,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7713,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2524161094,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.62}\" for the question \"${chineseMedicine.question.62}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.62}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.62}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31877,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21671,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 168,
        "name": "Verify the Q\u0026A on Chinese Medicine journey",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-q\u0026a-on-chinese-medicine-journey;;64",
        "after": [
          {
            "result": {
              "duration": 32101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5944,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3191496537,
              "status": "passed"
            },
            "line": 103,
            "name": "user selects \"${chineseMedicine.answer.63}\" for the question \"${chineseMedicine.question.63}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.answer.63}",
                  "offset": 14
                },
                {
                  "val": "${chineseMedicine.question.63}",
                  "offset": 62
                }
              ],
              "location": "ChineseMedicineSteps.handleQnA(String,String)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16997,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15170,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 171,
        "name": "Verify the Assessment completion screen",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-assessment-completion-screen",
        "after": [
          {
            "result": {
              "duration": 33435,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3878251284,
              "status": "passed"
            },
            "line": 172,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.header}"
                ],
                "line": 173
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.subTitle}"
                ],
                "line": 174
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.description1}"
                ],
                "line": 175
              },
              {
                "cells": [
                  "${chineseMedicine.viewAssessment.description2}"
                ],
                "line": 176
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22779,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18352,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify the user can view the Assessment Record",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-user-can-view-the-assessment-record",
        "after": [
          {
            "result": {
              "duration": 33554,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9109,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3251939292,
              "status": "passed"
            },
            "line": 180,
            "name": "user clicks on View Results button on Chinese Medicine Assessment screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnViewResults()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2189361171,
              "status": "passed"
            },
            "line": 181,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.assessment.header}"
                ],
                "line": 182
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.subHeader}"
                ],
                "line": 183
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status}"
                ],
                "line": 184
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.subStatus}"
                ],
                "line": 185
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status1}"
                ],
                "line": 186
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status2}"
                ],
                "line": 187
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.status3}"
                ],
                "line": 188
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.constitution.advice}"
                ],
                "line": 189
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28570,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16108,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 192,
        "name": "Verify the Assessment Summary",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-assessment-summary",
        "after": [
          {
            "result": {
              "duration": 29290,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5655,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 559258677,
              "status": "passed"
            },
            "line": 193,
            "name": "User verify following texts are displayed in Chinese Medicine screen",
            "match": {
              "location": "ChineseMedicineSteps.verifyFollowingTextsDisplayedInChineseMedScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${chineseMedicine.assessment.summary.title}"
                ],
                "line": 194
              },
              {
                "cells": [
                  "${chineseMedicine.assessment.summary.description}"
                ],
                "line": 195
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3255599377,
              "status": "passed"
            },
            "line": 196,
            "name": "user clicks on View More button on Assessment Record screen",
            "match": {
              "location": "ChineseMedicineSteps.clickOnViewMore()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17828,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14813,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 203,
        "name": "Verify the \"Constitution\" Details of the Assessment",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-\"\u003ctitle\u003e\"-details-of-the-assessment;;2",
        "after": [
          {
            "result": {
              "duration": 26696,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3037412380,
              "status": "passed"
            },
            "line": 200,
            "name": "User verify Assessment Details for the \"${chineseMedicine.assessment.details.constitution}\" and \"${chineseMedicine.assessment.details.constitutionDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.assessment.details.constitution}",
                  "offset": 40
                },
                {
                  "val": "${chineseMedicine.assessment.details.constitutionDescription}",
                  "offset": 97
                }
              ],
              "location": "ChineseMedicineSteps.verifyAssessmentDetails(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29531,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20113,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 204,
        "name": "Verify the \"Change In Tongue\" Details of the Assessment",
        "description": "",
        "id": "verify-that-user-can-access-chinese-medicine-feature;verify-the-\"\u003ctitle\u003e\"-details-of-the-assessment;;3",
        "after": [
          {
            "result": {
              "duration": 36227,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8543,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3698089022,
              "status": "passed"
            },
            "line": 200,
            "name": "User verify Assessment Details for the \"${chineseMedicine.assessment.details.changeInTongue}\" and \"${chineseMedicine.assessment.details.changeInTongueDescription}\"",
            "match": {
              "arguments": [
                {
                  "val": "${chineseMedicine.assessment.details.changeInTongue}",
                  "offset": 40
                },
                {
                  "val": "${chineseMedicine.assessment.details.changeInTongueDescription}",
                  "offset": 99
                }
              ],
              "location": "ChineseMedicineSteps.verifyAssessmentDetails(String,String)"
            },
            "matchedColumns": [
              1,
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@ChineseMedicine"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      }
    ],
    "name": "Verify that user can access Chinese Medicine feature",
    "description": "",
    "id": "verify-that-user-can-access-chinese-medicine-feature",
    "keyword": "Feature",
    "uri": "features/my/health/ChineseMedicine.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@ChineseMedicine"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22127,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36198,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7241,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 851891,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19359,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8898976905,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23406898084,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000199293,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10837114369,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000222510,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7007200314,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7900175334,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 317270219,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28713902918,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000204861,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 68480570613,
              "status": "passed"
            },
            "line": 22,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13837099366,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000251017,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21523,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18572,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 27825,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14068214553,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10696577622,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19879,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15007,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Select the expert type as doctor and navigate to next screen",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;select-the-expert-type-as-doctor-and-navigate-to-next-screen",
        "after": [
          {
            "result": {
              "duration": 32178,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6543,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2661686097,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${choose.expertise.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${select.expert.type}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${what.expert.text}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 185304407,
              "status": "passed"
            },
            "line": 35,
            "name": "I clicks on \"${doc.txt}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${doc.txt}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 190712773,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000288295,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 351620955,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${what.isyour.service.num.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${complete.details.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 317977485,
              "status": "passed"
            },
            "line": 41,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterservice.num.text}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${entername.of.institution.text}"
                ],
                "line": 43
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 115375,
              "status": "passed"
            },
            "line": 44,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "service num",
                  "05"
                ],
                "line": 45
              },
              {
                "cells": [
                  "issuing org",
                  "test org"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5436859872,
              "status": "passed"
            },
            "line": 47,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${service.num.text}",
                  "${service num}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${issuing.org.text}",
                  "${issuing org}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${valid.till.text}",
                  "01-01-2030"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 760874737,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on field label \"${valid.till.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${valid.till.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 236271404,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16540,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14929,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 1717132538,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17223,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2095471981,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${what.isyour.specialisation}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${specility.to.provide}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${choose.list.text}"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24445363594,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nMental Health text is displayed on page , Psychologist text is displayed on page , General Physician text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifySpecialisationOptionsInDieticianScreen(DieticianSteps.java:319)\n\tat ✽.Then I verify following specialisation options are displayed in dietician screen(features/my/health/Dietician_Doctor.feature:59)\n",
              "status": "failed"
            },
            "line": 59,
            "name": "I verify following specialisation options are displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifySpecialisationOptionsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${mental.health.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${psychologist.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${general.physician.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I enter \"${physician.text}\" speciality on specilisation screen And select \"${general.physician.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${physician.text}",
                  "offset": 9
                },
                {
                  "val": "${general.physician.text}",
                  "offset": 75
                }
              ],
              "location": "DieticianSteps.searchAndSelectSpeciality(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.super.specialisation.text}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${other.specialisation.text}"
                ],
                "line": 67
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "specialisation",
                  "Hypertension"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.super.specialisation.text}",
                  "${specialisation}"
                ],
                "line": 71
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I click on field label \"${enter.super.specialisation.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${enter.super.specialisation.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25196,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20291,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 1749417648,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14324,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15144309513,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nEducational Details text is displayed on page , Add your degree, diploma, certificates here text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.And I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:76)\n",
              "status": "failed"
            },
            "line": 76,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${education.details.text}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${add.degree.text}"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.degree.name.text}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${enter.field.of.study.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${institution.name.enter.text}"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${degree1.text}",
                  "MBBS"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${year.text}",
                  "2001"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${university.text}",
                  "test university"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.field.of.study.text}",
                  "physician"
                ],
                "line": 88
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "I click on field label \"${education.details.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${education.details.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 90,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17541,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15110,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify User should be able to navigate to Add experience page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-add-experience-page",
        "after": [
          {
            "result": {
              "duration": 1707993534,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12116,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15433043518,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nAdd Experience text is displayed on page , Please share with us your experience details. text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.And I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:93)\n",
              "status": "failed"
            },
            "line": 93,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${add.experience.txt}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${share.experience.details}"
                ],
                "line": 95
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I verify following edit field sample text in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyEditSampleTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterHospital.text}"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${profile.title.text}",
                  "Test"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${experience1.text}",
                  "Test University"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enterLocation.text}",
                  "${country.name}"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "I click on field label \"${add.experience.txt}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${add.experience.txt}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "I click on checkbox next to text \"${currently.praticing.here}\" in dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${currently.praticing.here}",
                  "offset": 34
                }
              ],
              "location": "DieticianSteps.selectCurrentlyWorkingCheckBox(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 108,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17622,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14863,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 1777775795,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17339,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 370018587,
              "status": "passed"
            },
            "line": 111,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${public.profile.tex}"
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109878,
              "status": "passed"
            },
            "line": 113,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "service offered",
                  "MBBS DOCTOR"
                ],
                "line": 114
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18202970902,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 400d63d5-2e92-4b20-951d-e3004e7fc8e9\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.TextView[@text\u003d\u0027Services Offered\u0027]/following::android.widget.EditText)[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:263)\n\tat com.onepulse.app.screens.DieticianScreen.enterDetailsDieticianScreen(DieticianScreen.java:518)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.enterInfoInDieticianScreen(DieticianSteps.java:283)\n\tat ✽.And I enter following details in dietician screen(features/my/health/Dietician_Doctor.feature:115)\n",
              "status": "failed"
            },
            "line": 115,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${service.offered.text}",
                  "${service offered}"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "I click on field label \"${service.offered.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${service.offered.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 118,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22280,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18696,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 120,
        "name": "Verify User should be able to navigate to achievement and awards screen",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-achievement-and-awards-screen",
        "after": [
          {
            "result": {
              "duration": 1810585488,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17366,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16049202113,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nAchievements \u0026 Awards text is displayed on page , Add seminar details whether you attended as a participant or as a speaker. text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.And I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:121)\n",
              "status": "failed"
            },
            "line": 121,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${achievement.award.text}"
                ],
                "line": 122
              },
              {
                "cells": [
                  "${add.seminar.details.text}"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.title.award.text}",
                  "TEST award"
                ],
                "line": 125
              },
              {
                "cells": [
                  "${enter.org.name.text}",
                  "Test"
                ],
                "line": 126
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${year.text}",
                  "2020"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "I click on field label \"${add.seminar.details.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${add.seminar.details.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 130,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25049,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20711,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 132,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 1609594493,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17436,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15597989926,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nSeminar(s) Attended text is displayed on page , Add seminar details whether you attended as a participant or as a speaker. text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.And I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:133)\n",
              "status": "failed"
            },
            "line": 133,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${seminar.attended.text}"
                ],
                "line": 134
              },
              {
                "cells": [
                  "${add.seminar.details}"
                ],
                "line": 135
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.seminar.title}",
                  "TEST seminar"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${enterLocation.text}",
                  "SINGAPORE"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I enter following details in dietician screen",
            "match": {
              "location": "DieticianSteps.enterInfoInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${year.text}",
                  "2020"
                ],
                "line": 140
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I click on field label \"${seminar.attended.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${seminar.attended.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 142,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17110,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify User should be able to navigate to linked clinic page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-linked-clinic-page",
        "after": [
          {
            "result": {
              "duration": 1654330080,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17426,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15073931152,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nLinked Clinics/Hospitals text is displayed on page , Add Clinics and Hospitals details where you practice text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.Given I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:145)\n",
              "status": "failed"
            },
            "line": 145,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${linked.clinic.text}"
                ],
                "line": 146
              },
              {
                "cells": [
                  "${add.clinic.info.text}"
                ],
                "line": 147
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 148,
            "name": "I enter following details in edit text field in dietician screen",
            "match": {
              "location": "DieticianSteps.enterDetailsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${enter.name.of.clinic}",
                  "clinic1"
                ],
                "line": 149
              },
              {
                "cells": [
                  "${enterLocation.text}",
                  "SINGAPORE"
                ],
                "line": 150
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "I click on field label \"${linked.clinic.text}\" to close keyboard on dietician screen",
            "match": {
              "arguments": [
                {
                  "val": "${linked.clinic.text}",
                  "offset": 24
                }
              ],
              "location": "DieticianSteps.clickOnFieldLabelOnDieticianScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 152,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15574,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 154,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 1612566914,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18533,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24345585426,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nAbout You text is displayed on page , Profile Photo text is displayed on page , Please take/upload your profile photo text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.Given I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:155)\n",
              "status": "failed"
            },
            "line": 155,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${about.you.text}"
                ],
                "line": 156
              },
              {
                "cells": [
                  "${profile.photo.text}"
                ],
                "line": 157
              },
              {
                "cells": [
                  "${takephoto.instruction.text}"
                ],
                "line": 158
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 160,
            "name": "I verify following profile photo options are displayed in Dietician Screen",
            "match": {
              "location": "DieticianSteps.verifyPhotoOptionsInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${uploadfile.text}"
                ],
                "line": 161
              },
              {
                "cells": [
                  "${takepicture.text}"
                ],
                "line": 162
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 163,
            "name": "I clicks on \"${takepicture.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${takepicture.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 164,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${confirmdetails.text}"
                ],
                "line": 169
              },
              {
                "cells": [
                  "${confirmdetails.text2}"
                ],
                "line": 170
              },
              {
                "cells": [
                  "${service num}"
                ],
                "line": 171
              },
              {
                "cells": [
                  "${issuing org}"
                ],
                "line": 172
              },
              {
                "cells": [
                  "${specialisation}"
                ],
                "line": 173
              },
              {
                "cells": [
                  "${service offered}"
                ],
                "line": 174
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 178,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21028,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15038,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 180,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 1720302030,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12528,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000207715,
              "status": "passed"
            },
            "line": 181,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15497778685,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nConversation History text is displayed on page , No Appointments Now text is displayed on page \n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyStaticTextInDieticianScreen(DieticianSteps.java:263)\n\tat ✽.And I verify following text is displayed in dietician screen(features/my/health/Dietician_Doctor.feature:182)\n",
              "status": "failed"
            },
            "line": 182,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${conversation.history.text}"
                ],
                "line": 183
              },
              {
                "cells": [
                  "${no.appointmnt.now.text}"
                ],
                "line": 184
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "User verify following dynamic texts are displayed in Dietician screen",
            "match": {
              "location": "DieticianSteps.verifyDynamicTextOnDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${click.manage.your.availibility.text}"
                ],
                "line": 186
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "I clicks on \"${schedule.cal.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${schedule.cal.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 188,
            "name": "I verify following text is displayed in dietician screen",
            "match": {
              "location": "DieticianSteps.VerifyStaticTextInDieticianScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${calendar.text}"
                ],
                "line": 189
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 190,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 191,
            "name": "I click the Select Your Availability icon in calendar screen",
            "match": {
              "location": "DieticianSteps.SelectAvailiablityScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 192,
            "name": "I clicks on \"10:00 AM\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "10:00 AM",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow for Doctor functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-for-doctor-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/health/Dietician_Doctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Dietician_doctor_my"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 16536,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14284,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 39385,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7702,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 552342,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19355,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8942569116,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000216036,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23859701423,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000234988,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11057187550,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000225675,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6997305218,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000222007,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7408918563,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 421495843,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28588219447,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000243703,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 69939764844,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13725043543,
              "status": "passed"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000226965,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30094,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to access my family vaccination calendar",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;user-should-be-able-to-access-my-family-vaccination-calendar",
        "after": [
          {
            "result": {
              "duration": 25879,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5194,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12748978045,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000279457,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 462267261,
              "status": "passed"
            },
            "line": 31,
            "name": "I click on vaccine calendar tile",
            "match": {
              "location": "VaccineCalendarSteps.iClicksOnVaccineCalTile()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000264656,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 533453852,
              "status": "passed"
            },
            "line": 33,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.title}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${vaccineCalendar.description}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19457,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15330,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify the user can Add Vaccine Information",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;verify-the-user-can-add-vaccine-information",
        "after": [
          {
            "result": {
              "duration": 32671,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6993,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 178652773,
              "status": "passed"
            },
            "line": 39,
            "name": "I click on Add more button in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.clickAddMoreBtn()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000256542,
              "status": "passed"
            },
            "line": 40,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 584808329,
              "status": "passed"
            },
            "line": 41,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.addMore.Title}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.relation}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.name}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.dob}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 337028913,
              "status": "passed"
            },
            "line": 46,
            "name": "User verifies following buttons are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalButtons(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.addMore.cancelButton}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${vaccineCalendar.addMore.saveButton}"
                ],
                "line": 48
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21867,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16480,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "enter information on add vaccination popup",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;enter-information-on-add-vaccination-popup",
        "after": [
          {
            "result": {
              "duration": 34949,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7063,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73167,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "relation",
                  "Child"
                ],
                "line": 52
              },
              {
                "cells": [
                  "name",
                  "testing_one"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2765741384,
              "status": "passed"
            },
            "line": 54,
            "name": "I add following information in Vaccine Calendar add information screen",
            "match": {
              "location": "VaccineCalendarSteps.enterAddInformationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "${name}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Relation",
                  "${relation}"
                ],
                "line": 56
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000299527,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 176912384,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on \"${vaccineCalendar.addMore.saveButton}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.addMore.saveButton}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27743,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19862,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the added item displayed on the Vaccine Schedule screen",
        "description": "",
        "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature;verify-the-added-item-displayed-on-the-vaccine-schedule-screen",
        "after": [
          {
            "result": {
              "duration": 36557,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6131,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000236696,
              "status": "passed"
            },
            "line": 62,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 405465553,
              "status": "passed"
            },
            "line": 63,
            "name": "User verifies following dynamic texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyDynamicTextOnVaccineCal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${relation}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${name}"
                ],
                "line": 65
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 184981601,
              "status": "passed"
            },
            "line": 66,
            "name": "I click on \"${name} ${relation}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${name} ${relation}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 177540668,
              "status": "passed"
            },
            "line": 67,
            "name": "I click on \"${vaccineCalendar.continue.button}\" button in Vaccine Calendar screen",
            "match": {
              "arguments": [
                {
                  "val": "${vaccineCalendar.continue.button}",
                  "offset": 12
                }
              ],
              "location": "VaccineCalendarSteps.clickBtnOnVaccineScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000210427,
              "status": "passed"
            },
            "line": 68,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3114802414,
              "status": "passed"
            },
            "line": 69,
            "name": "User verifies following texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyVaccineCalText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${vaccineCalendar.select.child.text}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${vaccine.text}"
                ],
                "line": 71
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1785699432,
              "status": "passed"
            },
            "comments": [
              {
                "line": 72,
                "value": "#      | ${next.vaccine.due.text}             |"
              }
            ],
            "line": 73,
            "name": "User verifies following dynamic texts are displayed in Vaccine Calendar screen",
            "match": {
              "location": "VaccineCalendarSteps.verifyDynamicTextOnVaccineCal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${name}"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can manage events via the Family Vaccine Vaccine Calendar feature",
    "description": "",
    "id": "verify-that-user-can-manage-events-via-the-family-vaccine-vaccine-calendar-feature",
    "keyword": "Feature",
    "uri": "features/my/health/FamilyVaccineCalendar.feature",
    "tags": [
      {
        "line": 1,
        "name": "@familyVaccine_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 26165,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15616,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 37070,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6694,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9129498961,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88431,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23228109033,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10864380592,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000220462,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4757336667,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23206,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15685,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36129,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8881,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3477367653,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18051019548,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 322124077,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000259261,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8436088396,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13842180892,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 23,
            "value": "#  Scenario: User should be able to access Dengue Alert screen"
          },
          {
            "line": 24,
            "value": "#    And I clicks on Dengue Alert tile"
          },
          {
            "line": 25,
            "value": "##   Add the permission grant implementation similar to \"I clicks on My Environment icon\" step"
          },
          {
            "line": 26,
            "value": "#    Then I verify following texts are displayed"
          },
          {
            "line": 27,
            "value": "#      |${dengueAlert.home.title}|"
          },
          {
            "line": 28,
            "value": "#      |${dengueAlert.home.description}|"
          },
          {
            "line": 29,
            "value": "#      |${dengueAlert.home.T\u0026Cconcent}|"
          },
          {
            "line": 30,
            "value": "#      |${dengueAlert.home.aime}|"
          },
          {
            "line": 31,
            "value": "#      And User verifies the T\u0026C link is accessible"
          },
          {
            "line": 32,
            "value": "#      |${dengueAlert.home.T\u0026CLink}|"
          },
          {
            "line": 33,
            "value": "#      When the user accepts the T\u0026C"
          },
          {
            "line": 34,
            "value": "#      And click on Proceed button"
          },
          {
            "line": 35,
            "value": "#      |${dengueAlert.home.proceedButto}|"
          },
          {
            "line": 38,
            "value": "#    If it is required to verify the outbreak \u0026 cases values for other countries, then repeat the Outbreak \u0026 Cases Scenarios"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 26621,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16923,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "Verify the map can be expanded",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;verify-the-map-can-be-expanded",
        "after": [
          {
            "result": {
              "duration": 2570197331,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15247,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18435803177,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 578446a9-a3fa-4b1c-8fbf-ba229cbe3700\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"That\u0027s all for now!\"]/parent::android.view.ViewGroup/preceding::android.view.ViewGroup[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.DengueAlertScreen.clickDengueAlertTile(DengueAlertScreen.java:37)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DengueAlertSteps.clickDengueAlertTile(DengueAlertSteps.java:21)\n\tat ✽.And I clicks on Dengue Alert tile(features/my/home/DengueAlert.feature:41)\n",
              "status": "failed"
            },
            "line": 41,
            "name": "I clicks on Dengue Alert tile",
            "match": {
              "location": "DengueAlertSteps.clickDengueAlertTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click on the mapImage",
            "match": {
              "location": "DengueAlertSteps.clickMap()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 43,
            "name": "I click on map back button",
            "match": {
              "location": "DengueAlertSteps.clickMapBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28134,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18987,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 45,
        "name": "User should be able to vew the Dengue Outbreak - Malaysia",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;user-should-be-able-to-vew-the-dengue-outbreak---malaysia",
        "after": [
          {
            "result": {
              "duration": 2289159717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16580,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 475990494209,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nMalaysia text is displayed on page Dengue Alert, Outbreaks text is displayed on page Dengue Alert, New Outbreaks text is displayed on page Dengue Alert, (This Week) text is displayed on page Dengue Alert, Total Outbreaks text is displayed on page Dengue Alert, Deaths text is displayed on page Dengue Alert, (This Week) text is displayed on page Dengue Alert\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(CustomerConnectSteps.java:89)\n\tat ✽.Then I verify the following texts \"Dengue Alert\" in Screen(features/my/home/DengueAlert.feature:46)\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I verify the following texts \"Dengue Alert\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Dengue Alert",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Malaysia"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Outbreaks"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.new}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.total}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.deaths}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.outbreak.total.title}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 56,
                "value": "#    Verify the value displayed in this section matches with the value displayed in the summary section"
              },
              {
                "line": 57,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 58,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zonal.title}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${dengueAlert.zonal.country}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 62,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 63,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone1}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${dengueAlert.zone2}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${dengueAlert.zone3}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${dengueAlert.zone4}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${dengueAlert.zone5}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${dengueAlert.zone6}"
                ],
                "line": 69
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 71,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone7}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${dengueAlert.zone8}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "${dengueAlert.zone9}"
                ],
                "line": 74
              },
              {
                "cells": [
                  "${dengueAlert.zone10}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${dengueAlert.zone11}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${dengueAlert.zone12}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${dengueAlert.zone13}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${dengueAlert.zone14}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${dengueAlert.zone15}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${dengueAlert.zone16}"
                ],
                "line": 81
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24340,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19118,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 84,
        "name": "User should be able to vew the Dengue Cases - Malaysia",
        "description": "",
        "id": "verify-that-user-can-access-dengue-alert-feature;user-should-be-able-to-vew-the-dengue-cases---malaysia",
        "after": [
          {
            "result": {
              "duration": 2404046038,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25227,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 162414647397,
              "status": "passed"
            },
            "line": 85,
            "name": "I scroll up till \"${dengue.alert.map}\" element displayed",
            "match": {
              "arguments": [
                {
                  "val": "${dengue.alert.map}",
                  "offset": 18
                }
              ],
              "location": "BaseSteps.scrollTillElementDisplayed(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8277792166,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 578446a9-a3fa-4b1c-8fbf-ba229cbe3700\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Outbreaks\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.DengueAlertScreen.selectFromOutBreakDropdown(DengueAlertScreen.java:51)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DengueAlertSteps.selectFromOutBreakDropdown(DengueAlertSteps.java:26)\n\tat ✽.And I select \"Cases\" from outbreaks dropdown(features/my/home/DengueAlert.feature:86)\n",
              "status": "failed"
            },
            "line": 86,
            "name": "I select \"Cases\" from outbreaks dropdown",
            "match": {
              "arguments": [
                {
                  "val": "Cases",
                  "offset": 10
                }
              ],
              "location": "DengueAlertSteps.selectFromOutBreakDropdown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.cases.new}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "${dengueAlert.cases.total}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.deaths}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${dengueAlert.outbreak.thisWeek}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${dengueAlert.cases.total.title}"
                ],
                "line": 93
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 94,
                "value": "#    Verify the value displayed in this section matches with the value displayed in the summary section"
              },
              {
                "line": 95,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 96,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zonal.title}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "${dengueAlert.zonal.country}"
                ],
                "line": 98
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 100,
                "value": "#      Validate the dropdown value selection - Current values\u003d Weekly (dengueAlert.outbreak.dropdownValue1)"
              }
            ],
            "line": 101,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone1}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${dengueAlert.zone2}"
                ],
                "line": 103
              },
              {
                "cells": [
                  "${dengueAlert.zone3}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${dengueAlert.zone4}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${dengueAlert.zone5}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${dengueAlert.zone6}"
                ],
                "line": 107
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 109,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${dengueAlert.zone7}"
                ],
                "line": 110
              },
              {
                "cells": [
                  "${dengueAlert.zone8}"
                ],
                "line": 111
              },
              {
                "cells": [
                  "${dengueAlert.zone9}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "${dengueAlert.zone10}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${dengueAlert.zone11}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "${dengueAlert.zone12}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${dengueAlert.zone13}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${dengueAlert.zone14}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${dengueAlert.zone15}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${dengueAlert.zone16}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can access Dengue Alert feature",
    "description": "",
    "id": "verify-that-user-can-access-dengue-alert-feature",
    "keyword": "Feature",
    "uri": "features/my/home/DengueAlert.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@dengueAlert"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 29528,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24327,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 74104,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7681,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 579985,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37824,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9498653586,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000216415,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22872862261,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000214304,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10579848503,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000213939,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7211885668,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000230780,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7707911194,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 327418302,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28713633581,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000224546,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 70225940959,
              "status": "passed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13595518568,
              "status": "passed"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000223110,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22648,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23036,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Navigate to PRU Shoppe screen",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;navigate-to-pru-shoppe-screen",
        "after": [
          {
            "result": {
              "duration": 25741,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10644499839,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25015,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15856,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to see the infectious disease cover screen options",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-screen-options",
        "after": [
          {
            "result": {
              "duration": 36615,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6680,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 153796645,
              "status": "passed"
            },
            "line": 31,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000303729,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 293517879,
              "status": "passed"
            },
            "line": 33,
            "name": "I click on pru infectious disease cover tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToInfectiousDisease()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000219863,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1484841726,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.cover.text}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.1}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.2}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.3}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.4}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 325515568,
              "status": "passed"
            },
            "line": 41,
            "name": "user click on following button \"${show.more.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.more.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1768530340,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.cover.info.5}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${infectious.disease.cover.info.6}"
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 310348408,
              "status": "passed"
            },
            "line": 45,
            "name": "user click on following button \"${show.less.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.less.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2747584043,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.disclosure.text.1}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.2}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.3}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.4}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.5}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.6}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${infectious.disease.disclosure.text.7}"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272194054,
              "status": "passed"
            },
            "line": 54,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${your.details.text}"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4115918824,
              "status": "passed"
            },
            "comments": [
              {
                "line": 56,
                "value": "#      | ${scan.your.id.text} |"
              },
              {
                "line": 57,
                "value": "#      | ${nric.no.text}      |"
              }
            ],
            "line": 58,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1032599769,
              "status": "passed"
            },
            "line": 59,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.name.as.nric.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${infectious.disease.gender.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${infectious.disease.dob}"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20257,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15467,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "Verify User should be able to see the infectious disease cover Screen options",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-screen-options",
        "after": [
          {
            "result": {
              "duration": 35415,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7010,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3201273128,
              "status": "passed"
            },
            "line": 65,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.residential.text}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${my.country.of.residence}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${my.resedential.status}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${my.country.code}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${my.mobile.phone.number}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${my.referral.code}"
                ],
                "line": 72
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4193566498,
              "status": "passed"
            },
            "line": 73,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1626931728,
              "status": "passed"
            },
            "line": 74,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${payment.summary.text}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${insurance.premium.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${total.premium.text}"
                ],
                "line": 77
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4049589473,
              "status": "passed"
            },
            "line": 78,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22757,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19237,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 85,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;2",
        "after": [
          {
            "result": {
              "duration": 39264,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7785,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2280050277,
              "status": "passed"
            },
            "line": 82,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.1}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.1}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@prushoppe"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21406,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;3",
        "after": [
          {
            "result": {
              "duration": 38506,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7266,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2325698421,
              "status": "passed"
            },
            "line": 82,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.2}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.2}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@prushoppe"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57952,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22785,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;4",
        "after": [
          {
            "result": {
              "duration": 30370,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2348199724,
              "status": "passed"
            },
            "line": 82,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.3}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.3}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@prushoppe"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24479,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16213,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be able to see the infectious disease cover term and condition",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-infectious-disease-cover-term-and-condition;;5",
        "after": [
          {
            "result": {
              "duration": 29753,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5402,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3072452452,
              "status": "passed"
            },
            "line": 82,
            "name": "User accept the term and conitions \"${infectious.disease.tnc.4}\" in infectious disease cover Screen",
            "match": {
              "arguments": [
                {
                  "val": "${infectious.disease.tnc.4}",
                  "offset": 36
                }
              ],
              "location": "PruShoppeSteps.acceptInfectiousDiseaseTerms(String)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "Given "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@prushoppe"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@infectiousDiseaseCover_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16743,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16433,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "verify that user can see agreement and proceed button",
        "description": "",
        "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app;verify-that-user-can-see-agreement-and-proceed-button",
        "after": [
          {
            "result": {
              "duration": 27382,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6228,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2753750037,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${infectious.disease.tnc.3.1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.1}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.2}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.3}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${infectious.disease.tnc.4.4}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.1}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.2}"
                ],
                "line": 98
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.3}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.4}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.5}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "${infectious.disease.agreement.text.6}"
                ],
                "line": 102
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 252035358,
              "status": "passed"
            },
            "line": 103,
            "name": "I verify proceed button is displayed on pru shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyProceedBtn()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Pru infectious disease cover functionality on one pulse App",
    "description": "",
    "id": "verify-pru-infectious-disease-cover-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruInfectiousDiseaseCover.feature",
    "tags": [
      {
        "line": 1,
        "name": "@infectiousDiseaseCover_my"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@prushoppe"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 24469,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16307,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 56884,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8319,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9709731152,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 112007,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23005155965,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11628510682,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000228131,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4741827084,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21223,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15394,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 34783,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7342,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3531942268,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18089995872,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 325526594,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000318975,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8825791448,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13232984638,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24788,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19127,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify user can access his policies from Pru Shoppe My Policies screen",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-user-can-access-his-policies-from-pru-shoppe-my-policies-screen",
        "after": [
          {
            "result": {
              "duration": 35395,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8964,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11419701519,
              "status": "passed"
            },
            "line": 23,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000270627,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 629610769,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on my policies tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToMyPoliciesScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003507357,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1859641307,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.title}"
                ],
                "line": 28
              },
              {
                "cells": [
                  "${myCoverage.information}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${myCoverage.InformationDescription}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27570,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15256,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Click on Link policy and verify screen to add policy number",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;click-on-link-policy-and-verify-screen-to-add-policy-number",
        "after": [
          {
            "result": {
              "duration": 32755,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9832,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 303032676,
              "status": "passed"
            },
            "line": 33,
            "name": "I clicks on \"${myCoverage.linkPolicyButton}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${myCoverage.linkPolicyButton}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000285219,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1523270050,
              "status": "passed"
            },
            "line": 35,
            "name": "I hide one pulse app mobile keyboard",
            "match": {
              "location": "BaseSteps.hideKeyboard()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 899726679,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.title}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${myCoverage.policyNumber.description1}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27929,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20166,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the error message when the Policy Number is blank",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-blank",
        "after": [
          {
            "result": {
              "duration": 34899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6298,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 333204547,
              "status": "passed"
            },
            "line": 42,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 814878622,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2166984205,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    When I click on \"${myCoverage.policyNumber.saveButton}\" button on app"
              },
              {
                "line": 45,
                "value": "#    When I click on \"${myCoverage.policyNumber.saveButton}\" button on app"
              }
            ],
            "line": 46,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26284,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15423,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the error message when the Policy Number is invalid or incorrect",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-policy-number-is-invalid-or-incorrect",
        "after": [
          {
            "result": {
              "duration": 36664,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6557,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1007276289,
              "status": "passed"
            },
            "line": 50,
            "name": "I enter \"1234\" as the Policy number",
            "match": {
              "arguments": [
                {
                  "val": "1234",
                  "offset": 9
                }
              ],
              "location": "PruShoppeSteps.enterPolicyNumber(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 506773284,
              "status": "passed"
            },
            "line": 51,
            "name": "I hide one pulse app mobile keyboard",
            "match": {
              "location": "BaseSteps.hideKeyboard()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 419076902,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on policy number save button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumSaveBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000234285,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4603033922,
              "status": "passed"
            },
            "line": 54,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${myCoverage.policyNumber.errorMessage}"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20307,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15563,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify the error message when the Cancel Button",
        "description": "",
        "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app;verify-the-error-message-when-the-cancel-button",
        "after": [
          {
            "result": {
              "duration": 36566,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8427,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 325372661,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on policy number cancel button on my policies screen",
            "match": {
              "location": "PruShoppeSteps.clickPolicyNumCancelBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13405651656,
              "status": "passed"
            },
            "line": 59,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Pru Shoppe My Coverage functionality on one pulse App",
    "description": "",
    "id": "verify-pru-shoppe-my-coverage-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/home/prushopee/PruShoppeCoverage.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PruShoppe_my_coverage"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@prushoppe"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 25538,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16638,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 34135,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7157,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9323232392,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 113996,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23028177200,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11267748108,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000209353,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4745997685,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52768,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19558,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 37904,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8704,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3500706650,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17609634189,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 348071945,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000297576,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8841652064,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13367965157,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20571,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15635,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 25468,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7887,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17020726600,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Wealth Channel tile for Malaysia",
            "match": {
              "location": "WealthSteps.clickWealthChannelTileMalaysia()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4022885803,
              "status": "passed"
            },
            "line": 24,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Investing 123"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Equip yourself with the basic investment tools"
                ],
                "line": 27
              },
              {
                "cells": [
                  "First Steps"
                ],
                "line": 28
              },
              {
                "cells": [
                  "The importance of investor education"
                ],
                "line": 29
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3854410273,
              "status": "passed"
            },
            "line": 30,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1131038490,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Remove The Weeds"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Dispel investment myths to achieve desired investment outcomes"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Mutual Funds"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Make mutual funds your first investment stop"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26342,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18837,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 38696,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10236,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5320577114,
              "status": "passed"
            },
            "line": 38,
            "name": "I click on \"Mutual Funds\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3692067330,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Mutual Funds"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Make mutual funds your first investment stop"
                ],
                "line": 41
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 999584457,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25191,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20146,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 85848,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7219,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5213466423,
              "status": "passed"
            },
            "line": 48,
            "name": "I read the \"Mutual Funds\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5351438457,
              "status": "passed"
            },
            "line": 49,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5192148712,
              "status": "passed"
            },
            "line": 50,
            "name": "I verify \"Mutual Funds\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6004472027,
              "status": "passed"
            },
            "line": 51,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16663,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16415,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 31240,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7163,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5375155320,
              "status": "passed"
            },
            "line": 54,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5490065283,
              "status": "passed"
            },
            "line": 55,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19358,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14217,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 27130,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7196,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5179480503,
              "status": "passed"
            },
            "line": 58,
            "name": "I read the \"Mutual Funds\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8826843398,
              "status": "passed"
            },
            "line": 59,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5191880044,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify \"Mutual Funds\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22933,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18766,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 28650,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34550,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7017566006,
              "status": "passed"
            },
            "line": 63,
            "name": "I click on \"Mutual Funds\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24495,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19014,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 31904,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8358,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000220988,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1080618849,
              "status": "passed"
            },
            "line": 67,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18821,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14359,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 30754,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8655,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5416918954,
              "status": "passed"
            },
            "line": 73,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5336641186,
              "status": "passed"
            },
            "line": 74,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22642,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18862,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 23307,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5262,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5410966646,
              "status": "passed"
            },
            "line": 77,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10988048709,
              "status": "passed"
            },
            "line": 78,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17789,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15649,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8164,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20369140505,
              "status": "passed"
            },
            "line": 81,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20596,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14771,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 83,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 21734,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9150,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3639579369,
              "status": "passed"
            },
            "line": 84,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5431257515,
              "status": "passed"
            },
            "line": 85,
            "name": "I click on \"Mutual Funds\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Mutual Funds",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5313852011,
              "status": "passed"
            },
            "line": 86,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/my/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_wealth_channel"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21561,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14484,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 23248,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6597,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9630560108,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 115660,
              "status": "passed"
            },
            "line": 7,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76257,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22866351956,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11413841738,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000273757,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4717693133,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21530,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16126,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 30086,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7908,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3513363816,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17721702613,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 323074470,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000260491,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8230533749,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14598124304,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22020,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19671,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 23568,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6497,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13835994983,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17023,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15351,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 1471644917,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15864,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13115662426,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4d3f3c2b-90d4-4a86-aaad-3d3e29ffa137\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Invite Your Friends Via\u0027]/following::android.view.ViewGroup[5]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseLoginScreen.clickContactsIcon(PulseLoginScreen.java:679)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.iVerifyTheContactsShareIcon(LoginSteps.java:301)\n\tat ✽.Then I verify the contacts share icon(features/share/ShareWithFriends.feature:30)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21914,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 1250665760,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13287,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13087190250,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4d3f3c2b-90d4-4a86-aaad-3d3e29ffa137\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Invite Your Friends Via\u0027]/following::android.view.ViewGroup[7]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseLoginScreen.clickMessengerIcon(PulseLoginScreen.java:1157)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.iVerifyTheFbMessengerShareIcon(LoginSteps.java:412)\n\tat ✽.Then I verify the fb messenger share icon(features/share/ShareWithFriends.feature:33)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16721,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14256,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 1294103733,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15606,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28967737456,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4d3f3c2b-90d4-4a86-aaad-3d3e29ffa137\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Invite Your Friends Via\u0027]/following::android.view.ViewGroup[9]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseLoginScreen.clickViberIcon(PulseLoginScreen.java:702)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.iVerifyTheViberShareIcon(LoginSteps.java:318)\n\tat ✽.Then I verify the Viber share icon(features/share/ShareWithFriends.feature:36)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42251,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20779,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 1333982145,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29013764783,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratch_HPPXi.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 09211FDD4001ZY}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 09211FDD4001ZY, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 09211FDD4001ZY, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, udid: 09211FDD4001ZY, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4d3f3c2b-90d4-4a86-aaad-3d3e29ffa137\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Invite Your Friends Via\u0027]/following::android.view.ViewGroup[11]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor22.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:166)\n\tat com.onepulse.app.screens.PulseLoginScreen.clickLineIcon(PulseLoginScreen.java:696)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.iVerifyTheLineShareIcon(LoginSteps.java:313)\n\tat ✽.Then I verify the Line share icon(features/share/ShareWithFriends.feature:39)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in onepulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@SharewithfriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  }
]