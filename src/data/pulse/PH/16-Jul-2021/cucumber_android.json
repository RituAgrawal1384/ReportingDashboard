[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 150556900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 419707600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 216900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 72100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11632953000,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6350300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17366351800,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23210561600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5012229500,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4886303400,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 90500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 60400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 56900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3577983100,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10575404700,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 268729500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005085900,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12087661100,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14175124400,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5010914400,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 61300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 60700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 130700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13236770900,
              "status": "passed"
            },
            "line": 26,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4818563100,
              "status": "passed"
            },
            "line": 27,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5002110200,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 84900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 116800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22220813500,
              "status": "passed"
            },
            "line": 31,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10035175300,
              "status": "passed"
            },
            "line": 32,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 115700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1737170600,
              "status": "passed"
            },
            "line": 35,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 718471000,
              "status": "passed"
            },
            "line": 36,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1194850200,
              "status": "passed"
            },
            "line": 37,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 92200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 71100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8947500,
              "status": "passed"
            },
            "line": 40,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 147700,
              "status": "passed"
            },
            "line": 41,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3938798200,
              "status": "passed"
            },
            "line": 44,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13729936600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 48,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 49,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 50,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 51,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 1308201500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7620182500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: aeb9328d-52f7-4f66-aeaf-6c28f2303a8a\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027years\u0027)]/following::android.view.ViewGroup[1]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickeditProfileLink(PulseManageProfileScreen.java:181)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickEditProfileLink(EditProfileSteps.java:37)\r\n\tat ✽.Given user click on Edit profile link(features/editProfile/PulseEditProfileTest.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 55800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 856933700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3731570700,
              "status": "passed"
            },
            "line": 65,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23978789300,
              "status": "passed"
            },
            "line": 66,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2018679400,
              "status": "passed"
            },
            "line": 67,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1358491300,
              "error_message": "java.lang.AssertionError: actual value is Automation-91618066622 expected [Automation-456160713744] but found [Automation-91618066622]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.verifyDefaultValuesOnBabylonRegPage(PulseManageProfileScreen.java:518)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(EditProfileSteps.java:156)\r\n\tat ✽.Then I verify the default values in babylon registration page is updated as below(features/editProfile/PulseEditProfileTest.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 74,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 58400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 100300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 46300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1719715000,
              "status": "passed"
            },
            "line": 77,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5010238500,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 52000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 67700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 118500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10583726100,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 250100,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15975940600,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22894340400,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007637300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4962728000,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 91800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 85700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 63400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3527655300,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10627431000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 267475100,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013557700,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12406153900,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14333193600,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 115400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 60000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2003761300,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22025394800,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5018604300,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 974261700,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 88400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 1500777700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8620172500,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8405929900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tYou do not have any events in your archive. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/MyEvents.feature:32)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 49600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8624691100,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11962915500,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 58700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 84200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10885489500,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16479048500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22700389300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3002164100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4850058100,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 844500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 435200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 616100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 385600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 237300,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3559396700,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10520956600,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 263584200,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10008475100,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11025635900,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14640898500,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 84500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008508100,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25100302200,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8013756900,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 489020400,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18119695200,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 37,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 38,
            "value": "#    And I Like the post"
          },
          {
            "line": 39,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 40,
            "value": "#    And I Like the post"
          },
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 43,
            "value": "#    And I share the post"
          },
          {
            "line": 44,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 46,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 47,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 48,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 49,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 53,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 164600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 63900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 50800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7433823400,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10013002400,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 82700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 13109800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4327242500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01c5a653-f5e3-4e44-9df8-dc0462c6e342\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.isStaticTextDisplayedOncommunitiesScreen(CustomerConnectScreen.java:187)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(CustomerConnectSteps.java:88)\r\n\tat ✽.And I verify the following texts \"My Health Content\" in Screen(features/home/MyHealthContent.feature:60)\r\n",
              "status": "failed"
            },
            "line": 60,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 29190400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 55729400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01c5a653-f5e3-4e44-9df8-dc0462c6e342\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Like\u0027]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickLikeButton(WealthScreen.java:175)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iLikeThePost(WealthSteps.java:75)\r\n\tat ✽.And I Like the post(features/home/MyHealthContent.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 67,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 93300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 23667100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5035058000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01c5a653-f5e3-4e44-9df8-dc0462c6e342\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Share\u0027]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickShareButton(WealthScreen.java:215)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iShareThePost(WealthSteps.java:90)\r\n\tat ✽.And I share the post(features/home/MyHealthContent.feature:71)\r\n",
              "status": "failed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 86800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 17721300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3093078400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01c5a653-f5e3-4e44-9df8-dc0462c6e342\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[contains(@text,\u0027First Steps\u0027)]/preceding::android.widget.ImageView}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickFullViewBackButton(WealthScreen.java:165)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iNavigateToStoryPostPage(WealthSteps.java:70)\r\n\tat ✽.Then I navigate to story post page(features/home/MyHealthContent.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 81900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 42900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10470691600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15386564100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22449772100,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3010888300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4909731300,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 49900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 148000,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3649248000,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10949790700,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 257149500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006348700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11305516900,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15199806400,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 50400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 53700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12661357500,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1148006400,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4365542700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 68100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 54100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 278867900,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9272379700,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 586307600,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@my_challengesSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 58100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 63300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 453600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52400,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10515922100,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16237278500,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010132300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23756270800,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008052800,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7979610300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 325342600,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10007645600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31876827700,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5003922200,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10689483600,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013101500,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8606876400,
              "status": "passed"
            },
            "line": 25,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 624008200,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5473395700,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 357793100,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1481222800,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6046891000,
              "status": "passed"
            },
            "line": 30,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1133540100,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5003414900,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1810083500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 33,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1323076800,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 875717600,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 992304400,
              "status": "passed"
            },
            "line": 37,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1415641300,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4053302500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 39,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 40,
                "value": "#    And I click the continue button"
              },
              {
                "line": 41,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              }
            ],
            "line": 42,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2391461600,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    And I see that \"Welcome to Pulse\" text is displayed"
              },
              {
                "line": 45,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 46,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3920454600,
              "status": "passed"
            },
            "line": 47,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3013486500,
              "status": "passed"
            },
            "line": 48,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 476722100,
              "status": "passed"
            },
            "line": 49,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 886998300,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999356700,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5534742200,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Activate icon in registration screen",
            "match": {
              "location": "RegistrationSteps.clickActivateIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4013024900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 53,
                "value": "#    And I enter NRIC number last 4 digits \"122F\""
              },
              {
                "line": 54,
                "value": "#   # And I click the continue button"
              }
            ],
            "line": 55,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4015439800,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14058913300,
              "status": "passed"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4006552000,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@Dietician_NegativePH"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "#    Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 64,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 57600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 797907500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 859744100,
              "status": "passed"
            },
            "line": 67,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15831778100,
              "status": "passed"
            },
            "line": 68,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18459064000,
              "status": "passed"
            },
            "line": 69,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8202677000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 395572a2-c022-443f-9a78-beb5f694123d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Doctor\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Doctor\" in app screen(features/ph/Dietician_NegativeFlow.feature:70)\r\n",
              "status": "failed"
            },
            "line": 70,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 74
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 76
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "124-12-2025"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAAVcUlEQVR4Xu3d93tUZdrAcX/Y/2B/fLe677pIEcFCXYUFBEXcfe26a7kERXdXrCtIU2SlVylKh1BDsQC6BKQooBgivSOY0NJDEhISCMn9PvcTg8mZMzCwIYl3vvd1fSScOTMTTr7nmTPxglz3z//5hQCWXRfcAFhD5DCPyGEekcM8Iod5RA7ziBzmETnM+8lH/nbrNjL1me7ybvs/yYu/+GXE7deKPtfUZ56RDTNnyropU2XE3fdE7IPY6LF85frfSa9f/TritgqD2rSVfs1vidgeixqP/PU/NJBX//f3Edv1D/rSr39z8fdvNGzk/+DB/Srvv/aDKXL61CkpKyuT3NRUSVy2TF76zW+r7Ne7cRPZsnixDOvc5eK2oZ06ydfx8dK3WbMq++qBXDZoUFVvD5L+t9wa8dz6mJUneft2+eCppyM+z/rqxV/+SuJ6vSTxffvJjJ7PR9yuXnZf30+GDJGvFy3yX8uNcXNlw4wZMuD2FlX2WzlipBTl50va4cMy64W/RzzO5dRo5O8/+aTsW79eDmzcKGP+/Jcqty3u1092r17tP17Sf4DsXrNGvtuyRYZ3+THOyqb16OEfR8/+T4YM9b9+s3SpLHvr7Sr7DenQ0T/e55Pfl+nPPuvu96ysnTLFH6yJjz5WZV8N+mxenqQdOiyFublyaPNmyUxOlnmvvlplP435+2+/lbz0dNm2fLkUnTkjWSkpkp+RIW+1ah3xuaqXr79eBt/ZLmK7RRq4HudE9/UY2rGTbIlfLJOfeCJiv68XxcuERx6tsq3PTU3lSGKiPwEqtp0rLHRfl3wpPH1adq5aFfE4l1OjkW+ev8CvluMffMiHlrh0mf/9oLZ/lK0ffSQ7ExL8fkeTkvyB0u26YgYfR22aN0+2rVjhP06YMEGWDx0q2cePy/4vvqyyn0b+4TvvyMY5cbJ04EAf8qa582TOi71k4mNVI//Qrdz/GTNW1rgT4rtvvvG/1+ef9+prVfYb98CDknPipORnZvrfD7jtdjm4aZNf0eP79o34XJU+jr7ijL7vzxG3WaOXb98sWSrrp00r/737dfO8+fLZmDFV9tOTfmNcnL/c3LZipV+sFvbuI/Nfe73Kfhr5ypGj5PDXX9f9yEd16yZ7166TjKNHZdz9D8jrDW6UXu4SZVfCavl3u/ay5/PP5ZXf/U6ObN3q99dLm12rysMP0gNXEfkXM2ddvGwIHoTyyAf77Xrg1S73ihEtcl3xNdRDm7/yJ84ud+IFI181frx/Ll3B9WTUlV1Xfp05vXpFfK5qwb/ekKNu9dcTInibNasnTgyNfPmw4RH76rHTk79ivpw1O2KfYhf5kv79/UIR/PrGokYjV7oK6tmrH09wlwvv/PEO2fHpZ7Ljs/9IblqaDL2rs+zbsMFfNy98o7c7g0dGPIYa2fVeSdm506/2elLo6MGa1r1Hlf30DWnSxx+7Az/JvRTeJH2a3ORXfr3+G3v//VX2XTJgwMWDXXn0hKi834h7ukrphQv+tmO7dl3cTy913mjUKOJzrW/0xJ/0+F9l28qV7pLwUUn66GO/qAX3q7DCxa+jK3XwPZXSlfzo1iQpLSn5aUQ+96WX/QquHy9yL019by5/89fLHZiKVVCva79asMCvmC//9vqIx6gw/bnn/CWKBqeXDovejLxU0DeJeomg34Wp2Pa2e3x9TxD8bsxrv7/BX0oFVb4+rLCoz5tScu6cf94kd6mlbzxn//PFS36HoD7RY/v+E0/KzOdfkAkPPxJxe3BfvXzV6/HgbUrfG506cNDTBSp4++XUeOTVTaP6V8OG/rIneNu1pt/SmvvyKzKjZ0/irsN+8pEDl0PkMI/IYR6Rwzwih3lEDvOIHOZd16NBAwEsu+7ee+8VwDIih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcy7+si7dZMHH35Uev69lwx6d5iMHPeejBo3AagW2pN2pX1pZ9pbRIMxuqrIH3rkMRn93iTZvW+/lJWVCcNcq9G+tDPtTbsLthiLK478mZ4vyNZvdwQ/F4a55rN12w7p7voLNnk5VxR59+dekKPJKcHnZpgaG+1POwy2eSkxR67XRVsSk4LPyTA1Ptqhv04P6TRMzJEPHz0++FwMU2ujPQYbjSamyB946GHZuXtv8HkYptZGe9Qug62GiSnyp7o/J+fOnQs+D8PU2miP2mWw1TAxRd7vrXeCz8EwtT7aZbDVMDFFPmzU2ODjM0ytj3YZbDVMTJEPHzUu+PgMU+ujXQZbDUPkzE92iJwxP0TOmJ9ai/zChQsIuNQE98Wlj1flqZXIi4uL/SdZWlqKH5w/f94Lm4rbgvepz7Qf7SiWqZXI+R9G4RPtixZte32fWDsi8jo00WKOtr2+T6wdEXkdmmgxR9te3yfWjoi8Dk20mKNtr+8Ta0dEXocmWsxh28vcG6+zO3bK2W+3XdaF3Lzg3U1MrB3VqcjLis9JSXaO5CyIl5w5c73Ti5ZISU6OlEX5zoOlCYtZJ2x77rKPJHXwu5KzMP7S5i+Uk33eDN7dxETrKDh1JvIzG7+SrDkLJHP6HCncsUuktNQr2PqtZM2Ik6xZc6Xgm63Bu5masJh1wrZnz5otZ77cKFnTZ8rJN3pL6ZkzwV0uzolXXg1uMjFhHYVNnYk8e9qM8rDdnN29VzJd2Jkz46To4GEpOnBIcleukqy4BVXvVFYm2QsXSfq48ZLtVqziw0cu3lRaWOi2Bfa/zGgo6RMm+sfKX7tOzqelS9HefVX2KcnOlpKs7CrbqmvCYtYJ2+4j3/ClHOnaTQ62aCVFe378yypZU6bJ2e0//iXysMjP7trlFo45ku1eLfXSp/IUH/5O8tetk8ypU6tsr2sT1lHY1K3IRSPKkYz3p8uF07nlH0+Z6WMryciSrLkLA/cqn8xJk93lTIkPMHvxEslb87mUFhS6V4BZcnbPHjmfmiaF7lUge1G8lKSlld/JnSC5y1dIjtu/9OxZv+mCu3/WnDj/cdroMXL+xAkpPnLEy3Yv/RpOpnvMzKnTpGj/fn+tq3FdyMuTnCVLJX/DF5K/foPkLFospfnRV9ZoExazTtj2ipW8+OAhyf98rf/z6GRMmOSjP9y+w8XQwyJPHTbc/6r3Lz50WIq/OyI58UukMOlbKT5wUPJWrZKM8eV/lTEvYbU7TkultKhITn+y3Fkhhdu2+4WkcPv2yg9boxPWUdjUucjP7tnvIl1/cfvpj1e4yL53IRZdNvJzKcekcGuSnHyzr4/8RO8+kulWNb3tZP+BUujehKW/N9HfR79gZzZtdq8O7jLoq6/8No38uAsie+58/+pQtHev5K9Z4z/WiPLXbXCXTIlSsOUbOf3Rx+75jstpd5KcO3Zc0kaMdL8ek/RRo8tDd68wVzphMeuEba+IXOf0hx/5kzjzh8ArHG7fUc4fPxEaefqY8f4VSV/tNPCzu3b7cE8N/neVyIv2H5CMSZMkd8VKyf30M0l9d6g/Fmljxrp9Etyr7MHgQ9fYhHUUNnUucl0dMyZNk5L0DDl/KlUyJk9zK2V+TJHnLFrkVyJ9Q6aRn+zbT9JGjir/eICL3K1s+lKsc+7oUcmaOct/4Qo2bvLbKq/kOkX79pVHPv698vskp/wQ+Ra/ohUf/d49Z7yPPMN9DkUHD7qVdIJ/Hg3+SicsZp2w7RWRn3ZvQA+2aiOHWretEngF/Q5MWOSpQ4b5X/V45K5Y4U9+/TjNrfCVI9fjmTl9hl+xz5885U74Cf5+enKkDh958RWkNiaso7CpM5FnTZnuQ9XRmLLiFrpLBLdKJpfHUnqmIPKa/IfJdatqWckFdy2/28eWNnyEv9zJ++w//qX4jItYo8yaPccHqOOvv90Knfn+FL/66+hlR15CwsXHPZec7L7ISVKQuNVd+sz0lwXn09PdJdRUfwKmj5/gLmvG+hNSV3YdfRXIcgEWf1d+Ml3JhMWsE7bdR77+CzncoVNE2LFEXuQu4zLcq1zFn0WPVab7M2ZMnORP0MLERHcCLfPvk/S4ZboF4fyJk5Kz9EN/fw0+c8qUwKPW7IR1FDZ1JvKCRLdiTJvlYpoT1dlde4J3MzVhMeuEbc924eW5V6GzO3eXf788Cg04LPL/ZspKSiR97Hj32KeCN9XohHUUNnUmciY8Zp2w7RqvXh+nDhp8WRWXY9U5GnptT6wdEXkdmrCYdaJtr+8Ta0dEXocmWszRttf3ibUjIq9DEy3maNvr+8TaEZHXoYkWc7Tt9X1i7ahWIueLFj7Rjku07fV9Yj0utRJ5xd/P0zMR5fR46N9dDBvdzvGqSo9HrH+ZuVYiZ5iaHCJnzA+RM+aHyBnzQ+SM+SFyxvwQOWN+iJwxP0TOmB8iZ8wPkTPmh8gZ80PkjPkhcsb8EDljfoicMT9EzpgfImfMD5Ez5ofIGfND5Iz5IXLG/BB5HZmysjLJycmR3bt3y8aNGyUhIUHWrl0rW7ZskeTk5Jj/jREmcqo58rHBx2cuMxp3enq6rFq1SuLe/0AWvv2OLH/xZVn17POy4h+9JL7fQJk1/j2ZP2+ebNu2jdivYrTLYKthYor8nSHlP4eGiW30H8fZvn27xE2eLJ89/0/Z3uEuOdiidcQ/pL+rXQdZ/XQPmT16jCxbtkwyMjKCD8VcYrTLYKthYoq8x/P/iPqvQDFVR4/Tpk2bZP6QYZLUuWtE2GF2tO8o8f0HStycOZKamhp8SCZk9Dhrl8FWw8QU+cOP/lWSU44Hn4cJmb1798rcESNl+58u/eNQgva0vVMWDnxb4uPjpaCgIPiwTGCSjx33XQZbDRNT5N26dZPZ88J/eBXz4+Tl5UncjJny9b1/iYg4FnpZM2PMWNmwYYO/pmeij/aoXQZbDRNT5OrxJ56SlGOs5peaxMREWfJGHznQsk1EwLFa4V6CZ82a5U8YJnxSjp3wPQYbjSbmyFXvfm/JGV5KQ6ekpEQWzJ8vX97/UES433XpKicHDpZD7pLEb2vVRk683keOPvhIxL5JnbrIB5Mmy44dO4JPwbjR/rTDYJuXckWR33ffn6X/oH9L1jX68dw/5cnKypJZ702QHe06RIT7/eNP+p9CrT/a8dCd7SVt1Dj/ox1PvNY7Yt99rdvK7MHv+m89cslSdbKys31/2mGwzUu5osiVXgd17/l3Sfh8vRQVFQU/j3o7KSkpMnPocB9pMFx1/KXX/M8gLUjaJhfOnJG0YaP8ih7c70DL1rKg95v+DSjf0SqfoqJiSVi73ncX63V4ZVcceYW//N/98nSP52XSlOnyyaerZPW6L2RNPaV/9jnzF0r/7s/JvpaRgSv9yco5yz7xX7SCrdvk0B/bRezjI3dGP/Y36dOvv//CBp+rvtBjql1pX9qZ9hZsMFZXHXll3brd519C6rNOnTpJuyY3SdJtLSPC1RU7bfQ4t4IXSPbiZXIh57TkxC8NDX3P7S3lwSZN5dZbb5Vu99Xv46pdBVu7GtUSOe6Vu+66S5o3biKf3nJbRLgp3XvKhbx8SR0ywgXfVo73etVdupyWU28Njtg38bYW0qJRI2nRokXEc+DqEHk1ueeee6RZs2Yy4Kab/SVH5XAP3dFevv/b0z9eg7vr7qMPPSaHO3aOiPyDm5tLYxf5nXfeGfEcuDpEXk26du0qbdu2lVYNG8rGW2+PiDcWO9ylyj0NG0vTpk2lS5cuEc+Bq0Pk1UQj79y5sw+0R6Mmsvv2kGvzS9jvDGjSVBq5k6RNmzb+8YLPgatD5NVIL1natWsnjRs2kn4uWH0TGYw5jAY+oWkzaXrjjdK8eXNW8WpG5NVIV9+7777br8S6Ij/lLj1WuTeiwWv0yr5wlzavuJW/cYMb/auAfpeGVbx6EXk100B1Jb7jjjukSZMm0qxBA3naxT7ZrdSfNr9NNruoE1z4M9wbzH+4uG93t9/oVvBbbrnFB66vBsHHxH+HyKuZRq6haugdO3b03wps3Lix3OhibuQ0/uFX/b3GffPNN/sTQvfX+7GKVz8ivwY01IpLF30zqrHrtwRbt24tLVu2lFatWvnvxHTo0MF/f133I/Brh8ivoYpVXSPWlTqoctwEfu0QeQ2oiDhMcF9UPyKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5191www0CWHadG/0PYFnEBsCaiA2ANREbEMUDDzwgKSkptU4/j+DnhkuK2IAofvazn8nPf/7zWqefR/BzwyVFbACsidgAmPL/bsT0St6SJqYAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 80,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 82,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 871695500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8014448200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 395572a2-c022-443f-9a78-beb5f694123d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"General Physician\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"General Physician\" in app screen(features/ph/Dietician_NegativeFlow.feature:83)\r\n",
              "status": "failed"
            },
            "line": 83,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 89
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 91
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 93,
                "value": "#    And Enter the year Name in Eductaion Details Screen"
              },
              {
                "line": 94,
                "value": "#      | ServiceNumber | 2020 |"
              }
            ],
            "line": 95,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAAVcUlEQVR4Xu3d93tUZdrAcX/Y/2B/fLe677pIEcFCXYUFBEXcfe26a7kERXdXrCtIU2SlVylKh1BDsQC6BKQooBgivSOY0NJDEhISCMn9PvcTg8mZMzCwIYl3vvd1fSScOTMTTr7nmTPxglz3z//5hQCWXRfcAFhD5DCPyGEekcM8Iod5RA7ziBzmETnM+8lH/nbrNjL1me7ybvs/yYu/+GXE7deKPtfUZ56RDTNnyropU2XE3fdE7IPY6LF85frfSa9f/TritgqD2rSVfs1vidgeixqP/PU/NJBX//f3Edv1D/rSr39z8fdvNGzk/+DB/Srvv/aDKXL61CkpKyuT3NRUSVy2TF76zW+r7Ne7cRPZsnixDOvc5eK2oZ06ydfx8dK3WbMq++qBXDZoUFVvD5L+t9wa8dz6mJUneft2+eCppyM+z/rqxV/+SuJ6vSTxffvJjJ7PR9yuXnZf30+GDJGvFy3yX8uNcXNlw4wZMuD2FlX2WzlipBTl50va4cMy64W/RzzO5dRo5O8/+aTsW79eDmzcKGP+/Jcqty3u1092r17tP17Sf4DsXrNGvtuyRYZ3+THOyqb16OEfR8/+T4YM9b9+s3SpLHvr7Sr7DenQ0T/e55Pfl+nPPuvu96ysnTLFH6yJjz5WZV8N+mxenqQdOiyFublyaPNmyUxOlnmvvlplP435+2+/lbz0dNm2fLkUnTkjWSkpkp+RIW+1ah3xuaqXr79eBt/ZLmK7RRq4HudE9/UY2rGTbIlfLJOfeCJiv68XxcuERx6tsq3PTU3lSGKiPwEqtp0rLHRfl3wpPH1adq5aFfE4l1OjkW+ev8CvluMffMiHlrh0mf/9oLZ/lK0ffSQ7ExL8fkeTkvyB0u26YgYfR22aN0+2rVjhP06YMEGWDx0q2cePy/4vvqyyn0b+4TvvyMY5cbJ04EAf8qa582TOi71k4mNVI//Qrdz/GTNW1rgT4rtvvvG/1+ef9+prVfYb98CDknPipORnZvrfD7jtdjm4aZNf0eP79o34XJU+jr7ijL7vzxG3WaOXb98sWSrrp00r/737dfO8+fLZmDFV9tOTfmNcnL/c3LZipV+sFvbuI/Nfe73Kfhr5ypGj5PDXX9f9yEd16yZ7166TjKNHZdz9D8jrDW6UXu4SZVfCavl3u/ay5/PP5ZXf/U6ObN3q99dLm12rysMP0gNXEfkXM2ddvGwIHoTyyAf77Xrg1S73ihEtcl3xNdRDm7/yJ84ud+IFI181frx/Ll3B9WTUlV1Xfp05vXpFfK5qwb/ekKNu9dcTInibNasnTgyNfPmw4RH76rHTk79ivpw1O2KfYhf5kv79/UIR/PrGokYjV7oK6tmrH09wlwvv/PEO2fHpZ7Ljs/9IblqaDL2rs+zbsMFfNy98o7c7g0dGPIYa2fVeSdm506/2elLo6MGa1r1Hlf30DWnSxx+7Az/JvRTeJH2a3ORXfr3+G3v//VX2XTJgwMWDXXn0hKi834h7ukrphQv+tmO7dl3cTy913mjUKOJzrW/0xJ/0+F9l28qV7pLwUUn66GO/qAX3q7DCxa+jK3XwPZXSlfzo1iQpLSn5aUQ+96WX/QquHy9yL019by5/89fLHZiKVVCva79asMCvmC//9vqIx6gw/bnn/CWKBqeXDovejLxU0DeJeomg34Wp2Pa2e3x9TxD8bsxrv7/BX0oFVb4+rLCoz5tScu6cf94kd6mlbzxn//PFS36HoD7RY/v+E0/KzOdfkAkPPxJxe3BfvXzV6/HgbUrfG506cNDTBSp4++XUeOTVTaP6V8OG/rIneNu1pt/SmvvyKzKjZ0/irsN+8pEDl0PkMI/IYR6Rwzwih3lEDvOIHOZd16NBAwEsu+7ee+8VwDIih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcy7+si7dZMHH35Uev69lwx6d5iMHPeejBo3AagW2pN2pX1pZ9pbRIMxuqrIH3rkMRn93iTZvW+/lJWVCcNcq9G+tDPtTbsLthiLK478mZ4vyNZvdwQ/F4a55rN12w7p7voLNnk5VxR59+dekKPJKcHnZpgaG+1POwy2eSkxR67XRVsSk4LPyTA1Ptqhv04P6TRMzJEPHz0++FwMU2ujPQYbjSamyB946GHZuXtv8HkYptZGe9Qug62GiSnyp7o/J+fOnQs+D8PU2miP2mWw1TAxRd7vrXeCz8EwtT7aZbDVMDFFPmzU2ODjM0ytj3YZbDVMTJEPHzUu+PgMU+ujXQZbDUPkzE92iJwxP0TOmJ9ai/zChQsIuNQE98Wlj1flqZXIi4uL/SdZWlqKH5w/f94Lm4rbgvepz7Qf7SiWqZXI+R9G4RPtixZte32fWDsi8jo00WKOtr2+T6wdEXkdmmgxR9te3yfWjoi8Dk20mKNtr+8Ta0dEXocmWsxh28vcG6+zO3bK2W+3XdaF3Lzg3U1MrB3VqcjLis9JSXaO5CyIl5w5c73Ti5ZISU6OlEX5zoOlCYtZJ2x77rKPJHXwu5KzMP7S5i+Uk33eDN7dxETrKDh1JvIzG7+SrDkLJHP6HCncsUuktNQr2PqtZM2Ik6xZc6Xgm63Bu5masJh1wrZnz5otZ77cKFnTZ8rJN3pL6ZkzwV0uzolXXg1uMjFhHYVNnYk8e9qM8rDdnN29VzJd2Jkz46To4GEpOnBIcleukqy4BVXvVFYm2QsXSfq48ZLtVqziw0cu3lRaWOi2Bfa/zGgo6RMm+sfKX7tOzqelS9HefVX2KcnOlpKs7CrbqmvCYtYJ2+4j3/ClHOnaTQ62aCVFe378yypZU6bJ2e0//iXysMjP7trlFo45ku1eLfXSp/IUH/5O8tetk8ypU6tsr2sT1lHY1K3IRSPKkYz3p8uF07nlH0+Z6WMryciSrLkLA/cqn8xJk93lTIkPMHvxEslb87mUFhS6V4BZcnbPHjmfmiaF7lUge1G8lKSlld/JnSC5y1dIjtu/9OxZv+mCu3/WnDj/cdroMXL+xAkpPnLEy3Yv/RpOpnvMzKnTpGj/fn+tq3FdyMuTnCVLJX/DF5K/foPkLFospfnRV9ZoExazTtj2ipW8+OAhyf98rf/z6GRMmOSjP9y+w8XQwyJPHTbc/6r3Lz50WIq/OyI58UukMOlbKT5wUPJWrZKM8eV/lTEvYbU7TkultKhITn+y3Fkhhdu2+4WkcPv2yg9boxPWUdjUucjP7tnvIl1/cfvpj1e4yL53IRZdNvJzKcekcGuSnHyzr4/8RO8+kulWNb3tZP+BUujehKW/N9HfR79gZzZtdq8O7jLoq6/8No38uAsie+58/+pQtHev5K9Z4z/WiPLXbXCXTIlSsOUbOf3Rx+75jstpd5KcO3Zc0kaMdL8ek/RRo8tDd68wVzphMeuEba+IXOf0hx/5kzjzh8ArHG7fUc4fPxEaefqY8f4VSV/tNPCzu3b7cE8N/neVyIv2H5CMSZMkd8VKyf30M0l9d6g/Fmljxrp9Etyr7MHgQ9fYhHUUNnUucl0dMyZNk5L0DDl/KlUyJk9zK2V+TJHnLFrkVyJ9Q6aRn+zbT9JGjir/eICL3K1s+lKsc+7oUcmaOct/4Qo2bvLbKq/kOkX79pVHPv698vskp/wQ+Ra/ohUf/d49Z7yPPMN9DkUHD7qVdIJ/Hg3+SicsZp2w7RWRn3ZvQA+2aiOHWretEngF/Q5MWOSpQ4b5X/V45K5Y4U9+/TjNrfCVI9fjmTl9hl+xz5885U74Cf5+enKkDh958RWkNiaso7CpM5FnTZnuQ9XRmLLiFrpLBLdKJpfHUnqmIPKa/IfJdatqWckFdy2/28eWNnyEv9zJ++w//qX4jItYo8yaPccHqOOvv90Knfn+FL/66+hlR15CwsXHPZec7L7ISVKQuNVd+sz0lwXn09PdJdRUfwKmj5/gLmvG+hNSV3YdfRXIcgEWf1d+Ml3JhMWsE7bdR77+CzncoVNE2LFEXuQu4zLcq1zFn0WPVab7M2ZMnORP0MLERHcCLfPvk/S4ZboF4fyJk5Kz9EN/fw0+c8qUwKPW7IR1FDZ1JvKCRLdiTJvlYpoT1dlde4J3MzVhMeuEbc924eW5V6GzO3eXf788Cg04LPL/ZspKSiR97Hj32KeCN9XohHUUNnUmciY8Zp2w7RqvXh+nDhp8WRWXY9U5GnptT6wdEXkdmrCYdaJtr+8Ta0dEXocmWszRttf3ibUjIq9DEy3maNvr+8TaEZHXoYkWc7Tt9X1i7ahWIueLFj7Rjku07fV9Yj0utRJ5xd/P0zMR5fR46N9dDBvdzvGqSo9HrH+ZuVYiZ5iaHCJnzA+RM+aHyBnzQ+SM+SFyxvwQOWN+iJwxP0TOmB8iZ8wPkTPmh8gZ80PkjPkhcsb8EDljfoicMT9EzpgfImfMD5Ez5ofIGfND5Iz5IXLG/BB5HZmysjLJycmR3bt3y8aNGyUhIUHWrl0rW7ZskeTk5Jj/jREmcqo58rHBx2cuMxp3enq6rFq1SuLe/0AWvv2OLH/xZVn17POy4h+9JL7fQJk1/j2ZP2+ebNu2jdivYrTLYKthYor8nSHlP4eGiW30H8fZvn27xE2eLJ89/0/Z3uEuOdiidcQ/pL+rXQdZ/XQPmT16jCxbtkwyMjKCD8VcYrTLYKthYoq8x/P/iPqvQDFVR4/Tpk2bZP6QYZLUuWtE2GF2tO8o8f0HStycOZKamhp8SCZk9Dhrl8FWw8QU+cOP/lWSU44Hn4cJmb1798rcESNl+58u/eNQgva0vVMWDnxb4uPjpaCgIPiwTGCSjx33XQZbDRNT5N26dZPZ88J/eBXz4+Tl5UncjJny9b1/iYg4FnpZM2PMWNmwYYO/pmeij/aoXQZbDRNT5OrxJ56SlGOs5peaxMREWfJGHznQsk1EwLFa4V6CZ82a5U8YJnxSjp3wPQYbjSbmyFXvfm/JGV5KQ6ekpEQWzJ8vX97/UES433XpKicHDpZD7pLEb2vVRk683keOPvhIxL5JnbrIB5Mmy44dO4JPwbjR/rTDYJuXckWR33ffn6X/oH9L1jX68dw/5cnKypJZ702QHe06RIT7/eNP+p9CrT/a8dCd7SVt1Dj/ox1PvNY7Yt99rdvK7MHv+m89cslSdbKys31/2mGwzUu5osiVXgd17/l3Sfh8vRQVFQU/j3o7KSkpMnPocB9pMFx1/KXX/M8gLUjaJhfOnJG0YaP8ih7c70DL1rKg95v+DSjf0SqfoqJiSVi73ncX63V4ZVcceYW//N/98nSP52XSlOnyyaerZPW6L2RNPaV/9jnzF0r/7s/JvpaRgSv9yco5yz7xX7SCrdvk0B/bRezjI3dGP/Y36dOvv//CBp+rvtBjql1pX9qZ9hZsMFZXHXll3brd519C6rNOnTpJuyY3SdJtLSPC1RU7bfQ4t4IXSPbiZXIh57TkxC8NDX3P7S3lwSZN5dZbb5Vu99Xv46pdBVu7GtUSOe6Vu+66S5o3biKf3nJbRLgp3XvKhbx8SR0ywgXfVo73etVdupyWU28Njtg38bYW0qJRI2nRokXEc+DqEHk1ueeee6RZs2Yy4Kab/SVH5XAP3dFevv/b0z9eg7vr7qMPPSaHO3aOiPyDm5tLYxf5nXfeGfEcuDpEXk26du0qbdu2lVYNG8rGW2+PiDcWO9ylyj0NG0vTpk2lS5cuEc+Bq0Pk1UQj79y5sw+0R6Mmsvv2kGvzS9jvDGjSVBq5k6RNmzb+8YLPgatD5NVIL1natWsnjRs2kn4uWH0TGYw5jAY+oWkzaXrjjdK8eXNW8WpG5NVIV9+7777br8S6Ij/lLj1WuTeiwWv0yr5wlzavuJW/cYMb/auAfpeGVbx6EXk100B1Jb7jjjukSZMm0qxBA3naxT7ZrdSfNr9NNruoE1z4M9wbzH+4uG93t9/oVvBbbrnFB66vBsHHxH+HyKuZRq6haugdO3b03wps3Lix3OhibuQ0/uFX/b3GffPNN/sTQvfX+7GKVz8ivwY01IpLF30zqrHrtwRbt24tLVu2lFatWvnvxHTo0MF/f133I/Brh8ivoYpVXSPWlTqoctwEfu0QeQ2oiDhMcF9UPyKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5191www0CWHadG/0PYFnEBsCaiA2ANREbEMUDDzwgKSkptU4/j+DnhkuK2IAofvazn8nPf/7zWqefR/BzwyVFbACsidgAmPL/bsT0St6SJqYAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 102,
            "value": "#"
          },
          {
            "line": 103,
            "value": "#"
          },
          {
            "line": 104,
            "value": "#    # Valid Failure -Issue id - PCAONEPULSE-21033"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 816427800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18058198100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 395572a2-c022-443f-9a78-beb5f694123d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText[contains(@text,\"Enter Hospital/Clinic Name\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.Enternames(CustomerConnectScreen.java:1841)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.i_Enter_the_in_in_home_screen(CustomerConnectSteps.java:567)\r\n\tat ✽.And I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen(features/ph/Dietician_NegativeFlow.feature:107)\r\n",
              "status": "failed"
            },
            "line": 107,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I Enter the \"Start Date\" in \"2030\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I Enter the \"End Date\" in \"2010\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAAVcUlEQVR4Xu3d93tUZdrAcX/Y/2B/fLe677pIEcFCXYUFBEXcfe26a7kERXdXrCtIU2SlVylKh1BDsQC6BKQooBgivSOY0NJDEhISCMn9PvcTg8mZMzCwIYl3vvd1fSScOTMTTr7nmTPxglz3z//5hQCWXRfcAFhD5DCPyGEekcM8Iod5RA7ziBzmETnM+8lH/nbrNjL1me7ybvs/yYu/+GXE7deKPtfUZ56RDTNnyropU2XE3fdE7IPY6LF85frfSa9f/TritgqD2rSVfs1vidgeixqP/PU/NJBX//f3Edv1D/rSr39z8fdvNGzk/+DB/Srvv/aDKXL61CkpKyuT3NRUSVy2TF76zW+r7Ne7cRPZsnixDOvc5eK2oZ06ydfx8dK3WbMq++qBXDZoUFVvD5L+t9wa8dz6mJUneft2+eCppyM+z/rqxV/+SuJ6vSTxffvJjJ7PR9yuXnZf30+GDJGvFy3yX8uNcXNlw4wZMuD2FlX2WzlipBTl50va4cMy64W/RzzO5dRo5O8/+aTsW79eDmzcKGP+/Jcqty3u1092r17tP17Sf4DsXrNGvtuyRYZ3+THOyqb16OEfR8/+T4YM9b9+s3SpLHvr7Sr7DenQ0T/e55Pfl+nPPuvu96ysnTLFH6yJjz5WZV8N+mxenqQdOiyFublyaPNmyUxOlnmvvlplP435+2+/lbz0dNm2fLkUnTkjWSkpkp+RIW+1ah3xuaqXr79eBt/ZLmK7RRq4HudE9/UY2rGTbIlfLJOfeCJiv68XxcuERx6tsq3PTU3lSGKiPwEqtp0rLHRfl3wpPH1adq5aFfE4l1OjkW+ev8CvluMffMiHlrh0mf/9oLZ/lK0ffSQ7ExL8fkeTkvyB0u26YgYfR22aN0+2rVjhP06YMEGWDx0q2cePy/4vvqyyn0b+4TvvyMY5cbJ04EAf8qa582TOi71k4mNVI//Qrdz/GTNW1rgT4rtvvvG/1+ef9+prVfYb98CDknPipORnZvrfD7jtdjm4aZNf0eP79o34XJU+jr7ijL7vzxG3WaOXb98sWSrrp00r/737dfO8+fLZmDFV9tOTfmNcnL/c3LZipV+sFvbuI/Nfe73Kfhr5ypGj5PDXX9f9yEd16yZ7166TjKNHZdz9D8jrDW6UXu4SZVfCavl3u/ay5/PP5ZXf/U6ObN3q99dLm12rysMP0gNXEfkXM2ddvGwIHoTyyAf77Xrg1S73ihEtcl3xNdRDm7/yJ84ud+IFI181frx/Ll3B9WTUlV1Xfp05vXpFfK5qwb/ekKNu9dcTInibNasnTgyNfPmw4RH76rHTk79ivpw1O2KfYhf5kv79/UIR/PrGokYjV7oK6tmrH09wlwvv/PEO2fHpZ7Ljs/9IblqaDL2rs+zbsMFfNy98o7c7g0dGPIYa2fVeSdm506/2elLo6MGa1r1Hlf30DWnSxx+7Az/JvRTeJH2a3ORXfr3+G3v//VX2XTJgwMWDXXn0hKi834h7ukrphQv+tmO7dl3cTy913mjUKOJzrW/0xJ/0+F9l28qV7pLwUUn66GO/qAX3q7DCxa+jK3XwPZXSlfzo1iQpLSn5aUQ+96WX/QquHy9yL019by5/89fLHZiKVVCva79asMCvmC//9vqIx6gw/bnn/CWKBqeXDovejLxU0DeJeomg34Wp2Pa2e3x9TxD8bsxrv7/BX0oFVb4+rLCoz5tScu6cf94kd6mlbzxn//PFS36HoD7RY/v+E0/KzOdfkAkPPxJxe3BfvXzV6/HgbUrfG506cNDTBSp4++XUeOTVTaP6V8OG/rIneNu1pt/SmvvyKzKjZ0/irsN+8pEDl0PkMI/IYR6Rwzwih3lEDvOIHOZd16NBAwEsu+7ee+8VwDIih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcy7+si7dZMHH35Uev69lwx6d5iMHPeejBo3AagW2pN2pX1pZ9pbRIMxuqrIH3rkMRn93iTZvW+/lJWVCcNcq9G+tDPtTbsLthiLK478mZ4vyNZvdwQ/F4a55rN12w7p7voLNnk5VxR59+dekKPJKcHnZpgaG+1POwy2eSkxR67XRVsSk4LPyTA1Ptqhv04P6TRMzJEPHz0++FwMU2ujPQYbjSamyB946GHZuXtv8HkYptZGe9Qug62GiSnyp7o/J+fOnQs+D8PU2miP2mWw1TAxRd7vrXeCz8EwtT7aZbDVMDFFPmzU2ODjM0ytj3YZbDVMTJEPHzUu+PgMU+ujXQZbDUPkzE92iJwxP0TOmJ9ai/zChQsIuNQE98Wlj1flqZXIi4uL/SdZWlqKH5w/f94Lm4rbgvepz7Qf7SiWqZXI+R9G4RPtixZte32fWDsi8jo00WKOtr2+T6wdEXkdmmgxR9te3yfWjoi8Dk20mKNtr+8Ta0dEXocmWsxh28vcG6+zO3bK2W+3XdaF3Lzg3U1MrB3VqcjLis9JSXaO5CyIl5w5c73Ti5ZISU6OlEX5zoOlCYtZJ2x77rKPJHXwu5KzMP7S5i+Uk33eDN7dxETrKDh1JvIzG7+SrDkLJHP6HCncsUuktNQr2PqtZM2Ik6xZc6Xgm63Bu5masJh1wrZnz5otZ77cKFnTZ8rJN3pL6ZkzwV0uzolXXg1uMjFhHYVNnYk8e9qM8rDdnN29VzJd2Jkz46To4GEpOnBIcleukqy4BVXvVFYm2QsXSfq48ZLtVqziw0cu3lRaWOi2Bfa/zGgo6RMm+sfKX7tOzqelS9HefVX2KcnOlpKs7CrbqmvCYtYJ2+4j3/ClHOnaTQ62aCVFe378yypZU6bJ2e0//iXysMjP7trlFo45ku1eLfXSp/IUH/5O8tetk8ypU6tsr2sT1lHY1K3IRSPKkYz3p8uF07nlH0+Z6WMryciSrLkLA/cqn8xJk93lTIkPMHvxEslb87mUFhS6V4BZcnbPHjmfmiaF7lUge1G8lKSlld/JnSC5y1dIjtu/9OxZv+mCu3/WnDj/cdroMXL+xAkpPnLEy3Yv/RpOpnvMzKnTpGj/fn+tq3FdyMuTnCVLJX/DF5K/foPkLFospfnRV9ZoExazTtj2ipW8+OAhyf98rf/z6GRMmOSjP9y+w8XQwyJPHTbc/6r3Lz50WIq/OyI58UukMOlbKT5wUPJWrZKM8eV/lTEvYbU7TkultKhITn+y3Fkhhdu2+4WkcPv2yg9boxPWUdjUucjP7tnvIl1/cfvpj1e4yL53IRZdNvJzKcekcGuSnHyzr4/8RO8+kulWNb3tZP+BUujehKW/N9HfR79gZzZtdq8O7jLoq6/8No38uAsie+58/+pQtHev5K9Z4z/WiPLXbXCXTIlSsOUbOf3Rx+75jstpd5KcO3Zc0kaMdL8ek/RRo8tDd68wVzphMeuEba+IXOf0hx/5kzjzh8ArHG7fUc4fPxEaefqY8f4VSV/tNPCzu3b7cE8N/neVyIv2H5CMSZMkd8VKyf30M0l9d6g/Fmljxrp9Etyr7MHgQ9fYhHUUNnUucl0dMyZNk5L0DDl/KlUyJk9zK2V+TJHnLFrkVyJ9Q6aRn+zbT9JGjir/eICL3K1s+lKsc+7oUcmaOct/4Qo2bvLbKq/kOkX79pVHPv698vskp/wQ+Ra/ohUf/d49Z7yPPMN9DkUHD7qVdIJ/Hg3+SicsZp2w7RWRn3ZvQA+2aiOHWretEngF/Q5MWOSpQ4b5X/V45K5Y4U9+/TjNrfCVI9fjmTl9hl+xz5885U74Cf5+enKkDh958RWkNiaso7CpM5FnTZnuQ9XRmLLiFrpLBLdKJpfHUnqmIPKa/IfJdatqWckFdy2/28eWNnyEv9zJ++w//qX4jItYo8yaPccHqOOvv90Knfn+FL/66+hlR15CwsXHPZec7L7ISVKQuNVd+sz0lwXn09PdJdRUfwKmj5/gLmvG+hNSV3YdfRXIcgEWf1d+Ml3JhMWsE7bdR77+CzncoVNE2LFEXuQu4zLcq1zFn0WPVab7M2ZMnORP0MLERHcCLfPvk/S4ZboF4fyJk5Kz9EN/fw0+c8qUwKPW7IR1FDZ1JvKCRLdiTJvlYpoT1dlde4J3MzVhMeuEbc924eW5V6GzO3eXf788Cg04LPL/ZspKSiR97Hj32KeCN9XohHUUNnUmciY8Zp2w7RqvXh+nDhp8WRWXY9U5GnptT6wdEXkdmrCYdaJtr+8Ta0dEXocmWszRttf3ibUjIq9DEy3maNvr+8TaEZHXoYkWc7Tt9X1i7ahWIueLFj7Rjku07fV9Yj0utRJ5xd/P0zMR5fR46N9dDBvdzvGqSo9HrH+ZuVYiZ5iaHCJnzA+RM+aHyBnzQ+SM+SFyxvwQOWN+iJwxP0TOmB8iZ8wPkTPmh8gZ80PkjPkhcsb8EDljfoicMT9EzpgfImfMD5Ez5ofIGfND5Iz5IXLG/BB5HZmysjLJycmR3bt3y8aNGyUhIUHWrl0rW7ZskeTk5Jj/jREmcqo58rHBx2cuMxp3enq6rFq1SuLe/0AWvv2OLH/xZVn17POy4h+9JL7fQJk1/j2ZP2+ebNu2jdivYrTLYKthYor8nSHlP4eGiW30H8fZvn27xE2eLJ89/0/Z3uEuOdiidcQ/pL+rXQdZ/XQPmT16jCxbtkwyMjKCD8VcYrTLYKthYoq8x/P/iPqvQDFVR4/Tpk2bZP6QYZLUuWtE2GF2tO8o8f0HStycOZKamhp8SCZk9Dhrl8FWw8QU+cOP/lWSU44Hn4cJmb1798rcESNl+58u/eNQgva0vVMWDnxb4uPjpaCgIPiwTGCSjx33XQZbDRNT5N26dZPZ88J/eBXz4+Tl5UncjJny9b1/iYg4FnpZM2PMWNmwYYO/pmeij/aoXQZbDRNT5OrxJ56SlGOs5peaxMREWfJGHznQsk1EwLFa4V6CZ82a5U8YJnxSjp3wPQYbjSbmyFXvfm/JGV5KQ6ekpEQWzJ8vX97/UES433XpKicHDpZD7pLEb2vVRk683keOPvhIxL5JnbrIB5Mmy44dO4JPwbjR/rTDYJuXckWR33ffn6X/oH9L1jX68dw/5cnKypJZ702QHe06RIT7/eNP+p9CrT/a8dCd7SVt1Dj/ox1PvNY7Yt99rdvK7MHv+m89cslSdbKys31/2mGwzUu5osiVXgd17/l3Sfh8vRQVFQU/j3o7KSkpMnPocB9pMFx1/KXX/M8gLUjaJhfOnJG0YaP8ih7c70DL1rKg95v+DSjf0SqfoqJiSVi73ncX63V4ZVcceYW//N/98nSP52XSlOnyyaerZPW6L2RNPaV/9jnzF0r/7s/JvpaRgSv9yco5yz7xX7SCrdvk0B/bRezjI3dGP/Y36dOvv//CBp+rvtBjql1pX9qZ9hZsMFZXHXll3brd519C6rNOnTpJuyY3SdJtLSPC1RU7bfQ4t4IXSPbiZXIh57TkxC8NDX3P7S3lwSZN5dZbb5Vu99Xv46pdBVu7GtUSOe6Vu+66S5o3biKf3nJbRLgp3XvKhbx8SR0ywgXfVo73etVdupyWU28Njtg38bYW0qJRI2nRokXEc+DqEHk1ueeee6RZs2Yy4Kab/SVH5XAP3dFevv/b0z9eg7vr7qMPPSaHO3aOiPyDm5tLYxf5nXfeGfEcuDpEXk26du0qbdu2lVYNG8rGW2+PiDcWO9ylyj0NG0vTpk2lS5cuEc+Bq0Pk1UQj79y5sw+0R6Mmsvv2kGvzS9jvDGjSVBq5k6RNmzb+8YLPgatD5NVIL1natWsnjRs2kn4uWH0TGYw5jAY+oWkzaXrjjdK8eXNW8WpG5NVIV9+7777br8S6Ij/lLj1WuTeiwWv0yr5wlzavuJW/cYMb/auAfpeGVbx6EXk100B1Jb7jjjukSZMm0qxBA3naxT7ZrdSfNr9NNruoE1z4M9wbzH+4uG93t9/oVvBbbrnFB66vBsHHxH+HyKuZRq6haugdO3b03wps3Lix3OhibuQ0/uFX/b3GffPNN/sTQvfX+7GKVz8ivwY01IpLF30zqrHrtwRbt24tLVu2lFatWvnvxHTo0MF/f133I/Brh8ivoYpVXSPWlTqoctwEfu0QeQ2oiDhMcF9UPyKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5RA7ziBzmETnMI3KYR+Qwj8hhHpHDPCKHeUQO84gc5hE5zCNymEfkMI/IYR6Rwzwih3lEDvOIHOYROcwjcphH5DCPyGEekcM8Iod5191www0CWHadG/0PYFnEBsCaiA2ANREbEMUDDzwgKSkptU4/j+DnhkuK2IAofvazn8nPf/7zWqefR/BzwyVFbACsidgAmPL/bsT0St6SJqYAAAAASUVORK5CYII\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 116,
            "name": "verify Add Experience message \"Add Experience\"",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 31
                }
              ],
              "location": "DieticianSteps.VerifyServiceOffered(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Dietician Negative Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/Dietician_NegativeFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_NegativePH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 44300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 12566900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 644700,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71500,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11457018900,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16872702200,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011753700,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22584842300,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5006190600,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8122865700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 14,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 316807000,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10014683400,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29186605900,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 437e7137-032d-4890-bd97-8bc9e0d26cab\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027We sent a verification code to\u0027)]/following::android.view.ViewGroup[1]//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.enterOTP(PulseRegistrationScreen.java:311)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.enterOTPInPulse(RegistrationSteps.java:294)\r\n\tat ✽.And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"(features/ph/Dietician_PositiveFlow.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 35,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 41,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 42,
                "value": "#    And I click the continue button"
              },
              {
                "line": 43,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              }
            ],
            "line": 44,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 46,
                "value": "#    And I see that \"Welcome to Pulse\" text is displayed"
              },
              {
                "line": 47,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 48,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "I click the Activate icon in registration screen",
            "match": {
              "location": "RegistrationSteps.clickActivateIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 55,
                "value": "#    And I enter NRIC number last 4 digits \"122F\""
              },
              {
                "line": 56,
                "value": "#   # And I click the continue button"
              }
            ],
            "line": 57,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@Dieticians_positivePH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 66,
            "value": "#"
          },
          {
            "line": 67,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 68,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 35000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 19852300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8073388100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 437e7137-032d-4890-bd97-8bc9e0d26cab\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.HealthIcons(CustomerConnectScreen.java:1370)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.Healthicons(CustomerConnectSteps.java:412)\r\n\tat ✽.Then I click the Health icon in Home screen(features/ph/Dietician_PositiveFlow.feature:72)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 71,
                "value": "#   Given I relaunch the app on registration failure"
              }
            ],
            "line": 72,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 76,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 77,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 78,
                "value": "#      | What is your service number?                                 |"
              },
              {
                "line": 79,
                "value": "#      | To start getting appointments please complete these details. |"
              },
              {
                "line": 80,
                "value": "#      | Service Number                                               |"
              },
              {
                "line": 81,
                "value": "#      | Issuing Organisation                                         |"
              },
              {
                "line": 82,
                "value": "#      | Valid Till                                                   |"
              }
            ],
            "line": 83,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "12"
                ],
                "line": 88
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 19281400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 37222200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 437e7137-032d-4890-bd97-8bc9e0d26cab\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"General Physician\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"General Physician\" in app screen(features/ph/Dietician_PositiveFlow.feature:101)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 93,
                "value": "#   Then I wait for 3 sec"
              },
              {
                "line": 94,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 95,
                "value": "#      | What is your specialisation? |"
              },
              {
                "line": 96,
                "value": "#      | Ear Nose Throat              |"
              },
              {
                "line": 97,
                "value": "#      | Dentists                     |"
              },
              {
                "line": 98,
                "value": "#      | Psychologist                 |"
              },
              {
                "line": 99,
                "value": "#      | Orthopedician                |"
              },
              {
                "line": 100,
                "value": "#      | Paediatrician                |"
              }
            ],
            "line": 101,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Add Super Specialisation"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "Enter the Add Super Specialization Till im pulse for Experts Screen",
            "match": {
              "location": "DieticianSteps.Addsuper_specialisation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 106
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 107,
                "value": "# And I click the continue button"
              }
            ],
            "line": 108,
            "name": "I clicks on \"Add Super Specialisation\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Super Specialisation",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 111,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 18189000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 41449400,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tEducational Details text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/ph/Dietician_PositiveFlow.feature:112)\r\n",
              "status": "failed"
            },
            "line": 112,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 116,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 117
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 118,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 119,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2012"
                ],
                "line": 120
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 122,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2020"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 128,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screens",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDates(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 131,
            "name": "I Enter the \"End Date\" in \"2030\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 134,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 137,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 22305300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3008481600,
              "status": "passed"
            },
            "line": 138,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48124500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tServices Offered text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/ph/Dietician_PositiveFlow.feature:139)\r\n",
              "status": "failed"
            },
            "line": 139,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Services Offered"
                ],
                "line": 140
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I Enter the \"Services Offered\" in \"MBBSDOCTOR\" in service offered screen",
            "match": {
              "arguments": [
                {
                  "val": "Services Offered",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 35
                }
              ],
              "location": "CustomerConnectSteps.EnterServiceOffered(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 143,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Achievements \u0026 Awards"
                ],
                "line": 144
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 145,
            "name": "I Enter the \"Enter title of the award\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter title of the award",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 43
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 146,
            "name": "I Enter the \"Enter organisation name (Awarded by)\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter organisation name (Awarded by)",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 55
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 147,
            "name": "I Enter the \"Year\" in \"2020\" in Achievement Award screen",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterAchievemnetyear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 148,
            "name": "I clicks on \"Add seminar details whether you attended as a participant or as a speaker.\" in close keyboard screen",
            "match": {
              "arguments": [
                {
                  "val": "Add seminar details whether you attended as a participant or as a speaker.",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickClosekeyboard(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 79500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 151,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 19616300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001793000,
              "status": "passed"
            },
            "line": 152,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40088100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tSeminar(s) Attended text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/Dietician_PositiveFlow.feature:153)\r\n",
              "status": "failed"
            },
            "line": 153,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Seminar(s) Attended"
                ],
                "line": 154
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "I Enter the \"Enter seminar title\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter seminar title",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 157,
                "value": "#  And I Enter the \"Year\" in \"2020\" in home screen"
              }
            ],
            "line": 158,
            "name": "I Enter the \"Year\" in \"2020\" in seminars Attended",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterYear_Semainar(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 160,
            "name": "I Enter the \"Enter name of the Clinic/ Hospital\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter name of the Clinic/ Hospital",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 53
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 162,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 164,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 11808500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25521000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 437e7137-032d-4890-bd97-8bc9e0d26cab\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Take a Picture\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Take a Picture\" in app screen(features/ph/Dietician_PositiveFlow.feature:169)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 165,
                "value": "# Then I wait for 3 sec"
              },
              {
                "line": 166,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 167,
                "value": "#      | About You     |"
              },
              {
                "line": 168,
                "value": "#      | Profile Photo |"
              }
            ],
            "line": 169,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 174,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 175,
                "value": "#      | Confirm Details! |"
              },
              {
                "line": 176,
                "value": "#      | MBBS-2020-2020   |"
              },
              {
                "line": 177,
                "value": "#      | MBBSDOCTOR       |"
              },
              {
                "line": 178,
                "value": "#      | MBBS             |"
              },
              {
                "line": 179,
                "value": "#      | TEST TITLE       |"
              }
            ],
            "line": 180,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 185,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 19152900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5001678100,
              "status": "passed"
            },
            "line": 186,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45609600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 437e7137-032d-4890-bd97-8bc9e0d26cab\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Schedule Calendar\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Schedule Calendar\" in app screen(features/ph/Dietician_PositiveFlow.feature:190)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 187,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 188,
                "value": "#      | Conversation History              |"
              },
              {
                "line": 189,
                "value": "#      | Click To Manage Your Availability |"
              }
            ],
            "line": 190,
            "name": "I clicks on \"Schedule Calendar\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Schedule Calendar",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 191,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Calendar"
                ],
                "line": 192
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 193,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 194,
            "name": "I click the Select Your Availability icon in calendar screen",
            "match": {
              "location": "DieticianSteps.SelectAvailiablityScreen()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/Dietician_PositiveFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dieticians_positivePH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 15847200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 467700,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65600,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10368884300,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17096664700,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005297800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22742078300,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4996718100,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7999752400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 13,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 382766700,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10007631700,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31516602100,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007038900,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10575769900,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6607414800,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 401094500,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1355903700,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3575366600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 12d98e95-337d-463b-b73f-c361fc581a01\n*** Element info: {Using\u003dxpath, value\u003d//android.view.ViewGroup[@content-desc\u003d\"wizard.gender.male\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.maleImage(PulseRegistrationScreen.java:676)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.MaleImage(RegistrationSteps.java:121)\r\n\tat ✽.And I select the  Male icon(features/ph/NotificationCenter.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 36,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 37,
                "value": "#    And I click the continue button"
              },
              {
                "line": 38,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              }
            ],
            "line": 39,
            "name": "I skip the avatar screen if present",
            "match": {
              "location": "RegistrationSteps.iClickAvatarSkipButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click the Activate icon in registration screen",
            "match": {
              "location": "RegistrationSteps.clickActivateIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I click the Activate button in Marketing Consent screen",
            "match": {
              "location": "RegistrationSteps.iClickActivateMarketingConsent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 51,
            "value": "#    Examples:"
          },
          {
            "line": 52,
            "value": "#      | EMAIL                               |"
          },
          {
            "line": 53,
            "value": "#      | taf-${RANDOM_NUMBER}@mailinator.com |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 43200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 30884000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1071616300,
              "status": "passed"
            },
            "line": 56,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60376300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 12d98e95-337d-463b-b73f-c361fc581a01\n*** Element info: {Using\u003dxpath, value\u003d(//android.view.ViewGroup[4]/android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.navigateToNotificationScreenFromHomePage(PulseManageProfileScreen.java:1052)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ManageProfileSteps.navigateToNotificationScreenFromHomePage(ManageProfileSteps.java:240)\r\n\tat ✽.When I navigate to notification screen from home page(features/ph/NotificationCenter.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 14583100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 55515700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNotification Center text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/NotificationCenter.feature:61)\r\n",
              "status": "failed"
            },
            "line": 61,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "#    And User verify following dynamic texts are displayed in My Notification screen"
          },
          {
            "line": 64,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 64600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Then I navigate back to home screen from Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;then-i-navigate-back-to-home-screen-from-notification-center",
        "after": [
          {
            "result": {
              "duration": 26463200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47574700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 12d98e95-337d-463b-b73f-c361fc581a01\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickOnNotificationBkBtn(PulseManageProfileScreen.java:980)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ManageProfileSteps.clickBackButtonInNotificationScreenViaHome(ManageProfileSteps.java:246)\r\n\tat ✽.Then I click on back button on notification screen to navigate to home screen(features/ph/NotificationCenter.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I click on back button on notification screen to navigate to home screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreenViaHome()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 74600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able navigate to Notification Center via My account",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center-via-my-account",
        "after": [
          {
            "result": {
              "duration": 72900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2006362300,
              "status": "passed"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 117004600,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 12489100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 54983900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNo Notifications Yet text is displayed on page  expected [true] but found [false],\n\tYou do not have any notifications yet, check this section regularly for any updates. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/NotificationCenter.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 77
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenterPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 7,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 8,
            "value": "#    When user enters credentials"
          },
          {
            "line": 9,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 10,
            "value": "#      | Password | Pas$1234      |"
          },
          {
            "line": 11,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 12,
            "value": "#    Then I wait for 40 sec"
          },
          {
            "line": 13,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 14,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 15,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 16,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          },
          {
            "line": 17,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 18,
            "value": "#    Then user navigate to account page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 51700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9773333800,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 190700,
              "status": "passed"
            },
            "line": 22,
            "name": "I assign \"${onepulse.login.global.idsetting}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.idsetting}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 59
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8203362500,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10448283600,
              "status": "passed"
            },
            "line": 24,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Password",
                  "${login.mysettings}"
                ],
                "line": 26
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 338473100,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10008998200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31056463100,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9632399500,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 974081400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010080200,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 880182700,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4042192700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3927739900,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10124925000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tWrinkle Mirror text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.verifyTextsOnScreen(DieticianSteps.java:213)\r\n\tat ✽.Then I verify following texts are Displayed(features/ph/PulseMySettings.feature:38)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 38,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 44900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3782537000,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8549672500,
              "status": "passed"
            },
            "line": 46,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5015364300,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 79900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 44500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3008489600,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4396725100,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2997728100,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3695565200,
              "status": "passed"
            },
            "line": 54,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8388950300,
              "status": "passed"
            },
            "line": 55,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8659749300,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 9257600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8867546700,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2997376500,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 292587000,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify the following text \"${Marketing.Consent.text}\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "${Marketing.Consent.text}",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Marketing.Consent.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3668893600,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8397982100,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8039839400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 197be4d5-195b-489c-86b4-11a85217f7a0\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageUP(TestBasePage.java:377)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickBackMarketConsent(CustomerConnectScreen.java:907)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.ClickBackMarketConsent(CustomerConnectSteps.java:267)\r\n\tat ✽.And I click the Back icon in pulse Marketing Consent(features/ph/PulseMySettings.feature:65)\r\n",
              "status": "failed"
            },
            "line": 65,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/ph/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsph"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@PhPersonalized"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 64700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9360299400,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17239949600,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22956766100,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016355800,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4929743500,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 47900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3558116400,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10438174300,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 246387500,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003804300,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11545360300,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14067722200,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13981428100,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the share icon in home screen",
            "match": {
              "location": "LoginSteps.clickshareicons_Homescreen()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8579103600,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 44400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7124794100,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 33,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 48900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 49800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21619072900,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 65000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 43100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21526764600,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in onepulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/ph/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sharewithfriends_ph"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@SharewithfriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 78800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10540728100,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 226800,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16145273600,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22522295600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5002015300,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4929361800,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 69400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 66800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3613132000,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10016179900,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 289863700,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007986900,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11250710000,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 21,
            "value": "#   Then user should be landed to \"Home\" screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 48800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4999952400,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1488150200,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13929732800,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on profile wearable tab",
            "match": {
              "location": "OptionsInFooterSteps.clickprofileWearable()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3009799100,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 336400400,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify My Wearables tile on Fitness Tracker Activity screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextFitnessTracker(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearable.headingtext}"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1285788900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   When I click on Connect Now button on Fitness screen"
              }
            ],
            "line": 32,
            "name": "I verify My Wearables tile on Fitness Tracker Activity screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextFitnessTracker(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.fitbitText}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${wearables.garminText}"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/ph/Wearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Wearables_PH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 4,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# fitness tab is not available in ios device"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 92100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 8,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 18076200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10410661700,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 265800,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15697540500,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74600700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Spinner[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1015)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/ph/fitness/ExerciseBuddy.feature:12)\r\n",
              "status": "failed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 16,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 11581900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22299300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"EN\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectTheLanguageToggle(PulseRegistrationScreen.java:1066)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.selectTheLangOption(RegistrationSteps.java:338)\r\n\tat ✽.Given I select the language option on toggle bar as required on login page(features/ph/fitness/ExerciseBuddy.feature:17)\r\n",
              "status": "failed"
            },
            "line": 17,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify the user can access Exercise Buddy via Fitness",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-exercise-buddy-via-fitness",
        "after": [
          {
            "result": {
              "duration": 12025500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28714800,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 51375800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Home\"]/preceding::android.widget.ImageView[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnExerciseBuddy(ExerciseBuddyScreen.java:45)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickOnExerciseBuddy(ExerciseBuddySteps.java:25)\r\n\tat ✽.When User clicks on Exercise Buddy button on Fitness screen(features/ph/fitness/ExerciseBuddy.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "User clicks on Exercise Buddy button on Fitness screen",
            "match": {
              "location": "ExerciseBuddySteps.clickOnExerciseBuddy()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${exeBuddy.description}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${beginner.title}"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "User clicks on \"${exeBuddy.intermediate}\" button on Exercise Buddy",
            "match": {
              "arguments": [
                {
                  "val": "${exeBuddy.intermediate}",
                  "offset": 16
                }
              ],
              "location": "ExerciseBuddySteps.clickButton(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#    No visible change to be validated in each difficulty level"
          },
          {
            "line": 35,
            "value": "#    And User clicks on \"${exeBuddy.beginner}\" button on Exercise Buddy"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify the Take Challenge via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-take-challenge-via-squats",
        "after": [
          {
            "result": {
              "duration": 19673800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 67547500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Squats\"]/preceding::android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnTakeChallenge(ExerciseBuddyScreen.java:64)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickTakeChallenge(ExerciseBuddySteps.java:42)\r\n\tat ✽.When User clicks on Take Challenge button on \"${beginner.squat}\"(features/ph/fitness/ExerciseBuddy.feature:39)\r\n",
              "status": "failed"
            },
            "line": 39,
            "name": "User clicks on Take Challenge button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 41
                }
              ],
              "location": "ExerciseBuddySteps.clickTakeChallenge(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.takeChallenge.title}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.description}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.subTitle}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${exeBuddy.takeChallenge.noPartner}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "User searches for \"Test\" and adds \"Test Test\" as a partner",
            "match": {
              "arguments": [
                {
                  "val": "Test",
                  "offset": 19
                },
                {
                  "val": "Test Test",
                  "offset": 35
                }
              ],
              "location": "ExerciseBuddySteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify the Start via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-start-via-squats",
        "after": [
          {
            "result": {
              "duration": 11188500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30642300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Squats\"]/following::android.widget.TextView[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnStart(ExerciseBuddyScreen.java:87)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickStart(ExerciseBuddySteps.java:59)\r\n\tat ✽.When User clicks on Start button on \"${beginner.squat}\"(features/ph/fitness/ExerciseBuddy.feature:49)\r\n",
              "status": "failed"
            },
            "line": 49,
            "name": "User clicks on Start button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 32
                }
              ],
              "location": "ExerciseBuddySteps.clickStart(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${squat.results.description}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "${squat.score.stat}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${squat.score.stands}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${squat.score.precision}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${squat.startAgain}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "User clicks on Start Now button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 36
                }
              ],
              "location": "ExerciseBuddySteps.clickStartNow(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "User clicks on Done button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickDone(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 64
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Preview via Squats",
        "description": "",
        "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-preview-via-squats",
        "after": [
          {
            "result": {
              "duration": 8828700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30466700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: bee24659-bd5b-44bf-ae9c-fc8f44cceef4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Squats\"]/following::android.widget.TextView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.ExerciseBuddyScreen.clickOnPreview(ExerciseBuddyScreen.java:81)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.ExerciseBuddySteps.clickPreview(ExerciseBuddySteps.java:54)\r\n\tat ✽.When User clicks on Preview button on \"${beginner.squat}\"(features/ph/fitness/ExerciseBuddy.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "User clicks on Preview button on \"${beginner.squat}\"",
            "match": {
              "arguments": [
                {
                  "val": "${beginner.squat}",
                  "offset": 34
                }
              ],
              "location": "ExerciseBuddySteps.clickPreview(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${beginner.squat}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${squat.preview.titleDescription}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${squat.preview.about}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${squat.preview.description}"
                ],
                "line": 73
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 74,
                "value": "#  PCAONEPULSE-22731"
              },
              {
                "line": 75,
                "value": "#      |${squat.preview.withFriend}|"
              }
            ],
            "line": 76,
            "name": "User clicks on Take Challenge on \"Squats Preview\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Preview",
                  "offset": 34
                }
              ],
              "location": "ExerciseBuddySteps.clickChallengeonPreview(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${exeBuddy.title}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "User clicks on Back button",
            "match": {
              "location": "ExerciseBuddySteps.clickBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "User clicks on Start Now button on \"Squats Preview\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Preview",
                  "offset": 36
                }
              ],
              "location": "ExerciseBuddySteps.clickStartNow(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "User clicks on Stop button on \"Squats\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickStop(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.results.title}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "User clicks on Done button on \"Squats Report\"",
            "match": {
              "arguments": [
                {
                  "val": "Squats Report",
                  "offset": 31
                }
              ],
              "location": "ExerciseBuddySteps.clickDone(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "User verifies text on Exercise Buddy screen",
            "match": {
              "location": "ExerciseBuddySteps.verifyStaticTextOnExerciseBuddy(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${squat.preview.workout}"
                ],
                "line": 87
              },
              {
                "cells": [
                  "${squat.preview.instructions}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "${squat.preview.instruction1}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "${squat.preview.instruction2}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${squat.preview.instruction3}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${squat.preview.instruction4}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${squat.preview.instruction5}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${squat.preview.instruction6}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${squat.preview.instruction7}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${squat.preview.instruction8}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "${squat.preview.instruction9}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "${squat.preview.instruction10"
                ],
                "line": 98
              },
              {
                "cells": [
                  "${squat.preview.warmup}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${squat.preview.warmupDescription}"
                ],
                "line": 100
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Exercise Buddy functionality via Fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-exercise-buddy-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/ph/fitness/ExerciseBuddy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@exerciseBuddy_ph"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "# fitness tab is not available in ios device"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 39000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10017361600,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 272500,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15728449700,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21807714600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5002875000,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4919052600,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3536931400,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10667194500,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 327265500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5001027800,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11272860300,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15246295100,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the user can access My Wearables via Fitness",
        "description": "",
        "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app;verify-the-user-can-access-my-wearables-via-fitness",
        "after": [
          {
            "result": {
              "duration": 43900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14457031800,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on Fitness tab",
            "match": {
              "location": "OptionsInFooterSteps.clickOnFitnessTab()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 862087100,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify My Wearables tile on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.verifyStaticTextOnFitnessScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${fitness.myWearables}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${fitness.myWearables.description}"
                ],
                "line": 27
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 481510800,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on Connect Now button on Fitness screen",
            "match": {
              "location": "OptionsInFooterSteps.clickOnConnectNow()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4872642900,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following text are displayed under My Wearables screen",
            "match": {
              "location": "ManageProfileSteps.verifyStaticTextOnMyWearablesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${wearables.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${wearables.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${wearables.description}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${wearables.fitbitText}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${wearables.garminText}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${wearables.googleFit}"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My wearable functionality via fitness tab on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-my-wearable-functionality-via-fitness-tab-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/ph/fitness/MyWearable.feature",
    "tags": [
      {
        "line": 1,
        "name": "@myWearables_ph"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 60200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 14521000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10716244600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 208200,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8017717400,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2027400,
              "status": "passed"
            },
            "line": 8,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10967212000,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401139200,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9994250500,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29695353700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027We sent a verification code to\u0027)]/following::android.view.ViewGroup[1]//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.enterOTP(PulseRegistrationScreen.java:311)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.enterOTPInPulse(RegistrationSteps.java:294)\r\n\tat ✽.And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"(features/ph/food/MyFoodJournal.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify User should be able to navigate to Food page",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-food-page",
        "after": [
          {
            "result": {
              "duration": 15943800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28787500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Food\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.FoodScreen.clickFoodFromHomePage(FoodScreen.java:49)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.FoodSteps.iNavigateToWealthScreen(FoodSteps.java:45)\r\n\tat ✽.Given I navigate to food screen from home page(features/ph/food/MyFoodJournal.feature:18)\r\n",
              "status": "failed"
            },
            "line": 18,
            "name": "I navigate to food screen from home page",
            "match": {
              "location": "FoodSteps.iNavigateToWealthScreen()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "I navigate to my food journal from food",
            "match": {
              "location": "FoodSteps.iNavigateToMyFoodJournal()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the list of food schedule time",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-list-of-food-schedule-time",
        "after": [
          {
            "result": {
              "duration": 16368800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 94133900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tLog your food text is displayed on page  expected [true] but found [false],\n\tConsumed text is displayed on page  expected [true] but found [false],\n\tFood Journal text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.FoodSteps.iVerifyFollowingOtionsFoodJournal(FoodSteps.java:61)\r\n\tat ✽.And I verify following options in food journal(features/ph/food/MyFoodJournal.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.LogyourFood}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${food.myfoodjournal.Consumed}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${food.myfoodjournal.foodjournal}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#      |${food.myfoodjournal.log}                    |"
          },
          {
            "line": 31,
            "value": "#Defect - 23743"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to time of the meal, add to cart and scan",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-time-of-the-meal,-add-to-cart-and-scan",
        "after": [
          {
            "result": {
              "duration": 21809800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 115500500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tBREAKFAST text is displayed on page  expected [true] but found [false],\n\tLUNCH text is displayed on page  expected [true] but found [false],\n\tDINNER text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.FoodSteps.iVerifyFollowingOtionsFoodJournal(FoodSteps.java:61)\r\n\tat ✽.And I verify following options in food journal(features/ph/food/MyFoodJournal.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 34,
                    "value": "#|${food.myfoodjournal.Scan}            |"
                  },
                  {
                    "line": 35,
                    "value": "#|${food.myfoodjournal.addfood}         |"
                  }
                ],
                "cells": [
                  "${food.myfoodjournal.breakfast}"
                ],
                "line": 36
              },
              {
                "cells": [
                  "${food.myfoodjournal.lunch}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${food.myfoodjournal.dinner}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify User should be able to see the details after moving to \"Breakfast\"",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;2",
        "after": [
          {
            "result": {
              "duration": 12805800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5003154200,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20164200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.And I scroll down(features/ph/food/MyFoodJournal.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "comments": [
                  {
                    "line": 48,
                    "value": "# |${food.myfoodjournal.Breakfast.selectfood}  |"
                  }
                ],
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User search for the food \"Seafood Gumbo\" index",
            "match": {
              "arguments": [
                {
                  "val": "Seafood Gumbo",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@PHFood"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to see the details after moving to \"Lunch\"",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;3",
        "after": [
          {
            "result": {
              "duration": 22496500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5018914100,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21023400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.And I scroll down(features/ph/food/MyFoodJournal.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"2\"",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "comments": [
                  {
                    "line": 48,
                    "value": "# |${food.myfoodjournal.Breakfast.selectfood}  |"
                  }
                ],
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User search for the food \"Bites\" index",
            "match": {
              "arguments": [
                {
                  "val": "Bites",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@PHFood"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify User should be able to see the details after moving to \"Dinner\"",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-details-after-moving-to-\"\u003croutine\u003e\";;4",
        "after": [
          {
            "result": {
              "duration": 34543200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5002738000,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21885600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.And I scroll down(features/ph/food/MyFoodJournal.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "User clicks on add food button for breakfast index \"3\"",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 52
                }
              ],
              "location": "FoodSteps.clickAddBreakfast(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.Breakfast.changemeal}"
                ],
                "line": 47
              },
              {
                "comments": [
                  {
                    "line": 48,
                    "value": "# |${food.myfoodjournal.Breakfast.selectfood}  |"
                  }
                ],
                "cells": [
                  "${food.myfoodjournal.Breakfast.save}"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "User search for the food \"Cake\" index",
            "match": {
              "arguments": [
                {
                  "val": "Cake",
                  "offset": 26
                }
              ],
              "location": "FoodSteps.searchBreakFastSave(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I validate the food selected and calories",
            "match": {
              "location": "FoodSteps.validationFoodCalories()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@PHFood"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to see log after add food is done",
        "description": "",
        "id": "verify-food-journal-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-log-after-add-food-is-done",
        "after": [
          {
            "result": {
              "duration": 20197100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21296300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9b755dae-b0a7-44b3-add9-a5599458b83e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageUP(TestBasePage.java:377)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollUp(BaseSteps.java:73)\r\n\tat ✽.And I scroll up(features/ph/food/MyFoodJournal.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "click on the log button",
            "match": {
              "location": "FoodSteps.clickonLogButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I verify following options in food journal",
            "match": {
              "location": "FoodSteps.iVerifyFollowingOtionsFoodJournal(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${food.myfoodjournal.logtime.Log}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${food.myfoodjournal.logtime.save}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${food.myfoodjournal.logtime.cancel}"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "click on the cancel button in logtime in food",
            "match": {
              "location": "FoodSteps.clickoncancelButtonLogtime()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify food journal channel functionality on one pulse App",
    "description": "",
    "id": "verify-food-journal-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/food/MyFoodJournal.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@PHFood"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 41700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey-for-ph-lbu;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 45600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 709600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10649755900,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010194900,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13220934400,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013017900,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22174669900,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004816100,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3994721700,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002558500,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7429994100,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 297694800,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32982817500,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003083400,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63143959900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 23,
                "value": "#Blocked due to PCAONEPULSE-22983"
              }
            ],
            "line": 24,
            "name": "I click skip button for PH LBU registration flow",
            "match": {
              "location": "RegistrationSteps.iClickSkipButtonPH()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005492800,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey-for-ph-lbu;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 27024100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10174459200,
              "status": "passed"
            },
            "line": 28,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16257479400,
              "status": "passed"
            },
            "line": 29,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22274049400,
              "status": "passed"
            },
            "line": 30,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5003977300,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24485700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1217fe0d-ccd9-4e53-bf98-b6debd32c2ab\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.clickSignIns_InSignUp(PulseLoginScreen.java:719)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.clickSignIns_InSignUp(LoginSteps.java:349)\r\n\tat ✽.And I click the Sign in link(features/ph/health/BabylonHRA_Registration.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 33,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 35400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey-for-ph-lbu;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 21719600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36814500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1217fe0d-ccd9-4e53-bf98-b6debd32c2ab\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"EN\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectTheLanguageToggle(PulseRegistrationScreen.java:1066)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.selectTheLangOption(RegistrationSteps.java:338)\r\n\tat ✽.Given I select the language option on toggle bar as required on login page(features/ph/health/BabylonHRA_Registration.feature:35)\r\n",
              "status": "failed"
            },
            "line": 35,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 37,
                    "value": "#      | UserName | pulse56823065633@mailsac.com |"
                  }
                ],
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 39
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey-for-ph-lbu;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 18970400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 60653000,
              "status": "passed"
            },
            "line": 47,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3135492700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1217fe0d-ccd9-4e53-bf98-b6debd32c2ab\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.babylon.BabylonRegistrationScreen.navigateToBabylonHealthAssessment(BabylonRegistrationScreen.java:244)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition(BabylonSteps.java:319)\r\n\tat ✽.And I navigate to Babylon health Assessment and Accept TermsAndCondition(features/ph/health/BabylonHRA_Registration.feature:48)\r\n",
              "status": "failed"
            },
            "line": 48,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey for PH LBU",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey-for-ph-lbu",
    "keyword": "Feature",
    "uri": "features/ph/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration_ph"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 82800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 52500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8855556300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 553400,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16716027500,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23068664000,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5002206700,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4923591200,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 63800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 21899500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3536349300,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2071436800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText[@text\u003d\u0027Email\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.enterLoginCredentials(PulseLoginScreen.java:152)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.userEntersCredentials(LoginSteps.java:52)\r\n\tat ✽.When user enters credentials(features/ph/health/BabylonHRA_Report.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 15496900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 37326000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Report\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:109)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Report\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 34
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 35
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement4}"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 38,
            "value": "#  Scenario: Scroll down"
          },
          {
            "line": 39,
            "value": "#    And I scroll down"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 18935200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19610400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:42)\r\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRiskDescription}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement1}"
                ],
                "line": 47
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement2}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement3}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement4}"
                ],
                "line": 50
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 52,
            "value": "#  Scenario: Scroll down"
          },
          {
            "line": 53,
            "value": "#    And I scroll down"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 49100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 19969500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19260600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:56)\r\n",
              "status": "failed"
            },
            "line": 56,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement3}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 62,
            "value": "#      | ${babylon.hraReport.summary.organ.statement4}       |"
          },
          {
            "line": 64,
            "value": "#  Scenario: Scroll down"
          },
          {
            "line": 65,
            "value": "#    And I scroll down"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 30500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the HRA Activity summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 22957500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19775400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 74,
            "value": "#  Scenario: Scroll down"
          },
          {
            "line": 75,
            "value": "#    And I scroll down"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 14265500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20036200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:78)\r\n",
              "status": "failed"
            },
            "line": 78,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 84
              },
              {
                "comments": [
                  {
                    "line": 85,
                    "value": "#  Scenario: Scroll down"
                  },
                  {
                    "line": 86,
                    "value": "#    And I scroll down"
                  },
                  {
                    "line": 87,
                    "value": "#    Then I verify the HRA Results are displayed"
                  }
                ],
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 92
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 94,
            "value": "#  Scenario: Scroll down"
          },
          {
            "line": 95,
            "value": "#    And I scroll down"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 97,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 19796000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15178600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:98)\r\n",
              "status": "failed"
            },
            "line": 98,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "${babylon.hraReport.bmi}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${babylon.hraReport.bmi.description}"
                ],
                "line": 103
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids.description}"
                ],
                "line": 107
              },
              {
                "cells": [
                  "${babylon.hraReport.redMeat}"
                ],
                "line": 108
              },
              {
                "cells": [
                  "${babylon.hraReport.redMeat.description}"
                ],
                "line": 109
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 111,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 14101700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14140100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:610)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/ph/health/BabylonHRA_Report.feature:112)\r\n",
              "status": "failed"
            },
            "line": 112,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 117
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 119,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 15260600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 34956200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Healthcheck\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:113)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Healthcheck\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:120)\r\n",
              "status": "failed"
            },
            "line": 120,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 122,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 123
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I verify following text is displayed on HRA report",
            "match": {
              "location": "BabylonSteps.verifyHRAStaticText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 125
              },
              {
                "cells": [
                  "${babylon.hraReport.body.heart}"
                ],
                "line": 126
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 127
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 128
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 20362500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 43904500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:131)\r\n",
              "status": "failed"
            },
            "line": 131,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 19495600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 40388300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Nutrition\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:121)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Nutrition\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:134)\r\n",
              "status": "failed"
            },
            "line": 134,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 136
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 137
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 140
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 142,
        "name": "Navigate back to nutrition screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-nutrition-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 20451800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36582800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:143)\r\n",
              "status": "failed"
            },
            "line": 143,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 144,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDesease}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 146
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 148,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 21302800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38658900,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:149)\r\n",
              "status": "failed"
            },
            "line": 149,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 151,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 20309500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38769200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Activity\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:125)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Activity\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:152)\r\n",
              "status": "failed"
            },
            "line": 152,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 154
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 155
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 158
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 159
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 161,
        "name": "Navigate back to Activity screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-activity-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 15106400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33289700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:162)\r\n",
              "status": "failed"
            },
            "line": 162,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 163,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 164
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 165
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 167,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 16731800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29836800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:168)\r\n",
              "status": "failed"
            },
            "line": 168,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 170,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 13025700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31911100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Mood\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:129)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Mood\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:171)\r\n",
              "status": "failed"
            },
            "line": 171,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 173
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 174
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 177
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment2}"
                ],
                "line": 178
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 180,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 15777000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30529500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d7f7265d-76c0-4427-a2a4-b1985749ac0e\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.ImageView)[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:133)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.And I click on \"Back\" link on digital twin screen(features/ph/health/BabylonHRA_Report.feature:181)\r\n",
              "status": "failed"
            },
            "line": 181,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/ph/health/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report_ph"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-the-home-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 14883600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 421000,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 386200,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9412792700,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013888700,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14272283600,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009369800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22567534900,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013918900,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4070332100,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2011119100,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7977532200,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 293936400,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33109117200,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2016341700,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8305243300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Continue\" or @text\u003d\"Connect Later\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1114)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/ph/health/ConsultDoctor.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify the online consultation screen user fields",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields",
        "after": [
          {
            "result": {
              "duration": 25848500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57452000,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2021225500,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18869100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.navigateToOnlineConsultationScreen(PulseHealthScreen.java:119)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iNavigateToOnlineConsultationScreen(MyDocUiSteps.java:104)\r\n\tat ✽.Then I navigate to online consultation screen(features/ph/health/ConsultDoctor.feature:30)\r\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I navigate to online consultation screen",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 32,
                    "value": "##Gender and DOB validation in below step is not covered for IOS due to locator issue"
                  }
                ],
                "cells": [
                  "Online Consultation"
                ],
                "line": 33
              },
              {
                "cells": [
                  "First Name / Given Name"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Last Name / Family Name"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Email"
                ],
                "line": 36
              },
              {
                "cells": [
                  "County of Residence"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 38,
                "value": "#  Then I select gender and date of birth for newly registered user"
              }
            ],
            "line": 39,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify the online consultation screen user fields after swipe down",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields-after-swipe-down",
        "after": [
          {
            "result": {
              "duration": 15317100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18720400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.And I scroll down(features/ph/health/ConsultDoctor.feature:43)\r\n",
              "status": "failed"
            },
            "line": 43,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 45,
                    "value": "# |Address (city)          |"
                  }
                ],
                "cells": [
                  "Address (zipcode)"
                ],
                "line": 46
              },
              {
                "cells": [
                  "NRIC/FIN"
                ],
                "line": 47
              },
              {
                "cells": [
                  "NRIC/FIN Image"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Phone"
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "Verify User should be able to enter address and zipcode",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-to-enter-address-and-zipcode",
        "after": [
          {
            "result": {
              "duration": 21183000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4048101600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText[@text\u003d\u0027Address (e.g. street, apartment name, etc)\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocRegistrationScreen.enterAddressAndZipcode(MyDocRegistrationScreen.java:715)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iEnterAnd(MyDocUiSteps.java:142)\r\n\tat ✽.Then I enter \"${address}\" and \"${zipcode}\"(features/ph/health/ConsultDoctor.feature:52)\r\n",
              "status": "failed"
            },
            "line": 52,
            "name": "I enter \"${address}\" and \"${zipcode}\"",
            "match": {
              "arguments": [
                {
                  "val": "${address}",
                  "offset": 9
                },
                {
                  "val": "${zipcode}",
                  "offset": 26
                }
              ],
              "location": "MyDocUiSteps.iEnterAnd(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify User should be able to upload NRIC Image in Online Consultation screen",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-to-upload-nric-image-in-online-consultation-screen",
        "after": [
          {
            "result": {
              "duration": 32659600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 107100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5011008400,
              "status": "passed"
            },
            "line": 55,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23541700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.mydoc.MyDocRegistrationScreen.enterNric(MyDocRegistrationScreen.java:643)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iEnterTheMandatoryFields(MyDocUiSteps.java:129)\r\n\tat ✽.Then I enter the mandatory fields \"${NRIC}\"(features/ph/health/ConsultDoctor.feature:56)\r\n",
              "status": "failed"
            },
            "line": 56,
            "name": "I enter the mandatory fields \"${NRIC}\"",
            "match": {
              "arguments": [
                {
                  "val": "${NRIC}",
                  "offset": 30
                }
              ],
              "location": "MyDocUiSteps.iEnterTheMandatoryFields(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "I verify the \"${phonenumber}\" and proceed with \"${otp}\"",
            "match": {
              "arguments": [
                {
                  "val": "${phonenumber}",
                  "offset": 14
                },
                {
                  "val": "${otp}",
                  "offset": 48
                }
              ],
              "location": "MyDocUiSteps.iVerifyTheAndProceedWith(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 58900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be presented with the symptoms checker questions log",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-presented-with-the-symptoms-checker-questions-log",
        "after": [
          {
            "result": {
              "duration": 19221000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 470262900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tChoking text is displayed on page  expected [true] but found [false],\n\tBreathing difficulty text is displayed on page  expected [true] but found [false],\n\tChest pain text is displayed on page  expected [true] but found [false],\n\tWeakness in arms or legs text is displayed on page  expected [true] but found [false],\n\tSpeech difficulty text is displayed on page  expected [true] but found [false],\n\tLoss of consciousness text is displayed on page  expected [true] but found [false],\n\tSuicidal or homicidal thoughts text is displayed on page  expected [true] but found [false],\n\tSeizures text is displayed on page  expected [true] but found [false],\n\tBleeding text is displayed on page  expected [true] but found [false],\n\tSevere pain text is displayed on page  expected [true] but found [false],\n\tConfusion and/or hallucinations text is displayed on page  expected [true] but found [false],\n\tBroken bones text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/health/ConsultDoctor.feature:60)\r\n",
              "status": "failed"
            },
            "line": 60,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 72
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can able to chat with chatbot symptoms checker",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-can-able-to-chat-with-chatbot-symptoms-checker",
        "after": [
          {
            "result": {
              "duration": 17224100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5053291400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027None of the above\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.handleEmergencySymptomQues(MyDocMedicalProfileScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.handleEmergencySymptomQues(MyDocSteps.java:179)\r\n\tat ✽.When Handle Emergency symptoms questions for doctor consult(features/ph/health/ConsultDoctor.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be presented with the sample text on the Medical Profile screen as a first time user",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-presented-with-the-sample-text-on-the-medical-profile-screen-as-a-first-time-user",
        "after": [
          {
            "result": {
              "duration": 18617900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 32659900,
              "status": "passed"
            },
            "line": 78,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21387700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:254)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.validateMedProfSampleText(MyDocMedicalProfileScreen.java:171)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.validateMedProfSampleText(MyDocSteps.java:671)\r\n\tat ✽.And Verify the Sample Text on the text fields of the Medical Profile(features/ph/health/ConsultDoctor.feature:79)\r\n",
              "status": "failed"
            },
            "line": 79,
            "name": "Verify the Sample Text on the text fields of the Medical Profile",
            "match": {
              "location": "MyDocSteps.validateMedProfSampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "Enter \u0027None\u0027 if no allergies"
                ],
                "line": 80
              },
              {
                "cells": [
                  "Medical Conditions",
                  "Enter \u0027None\u0027 if no medical conditions"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Medications",
                  "Enter \u0027None\u0027 if no medications"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 84,
        "name": "Verify User should be able to create the medical profile",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-to-create-the-medical-profile",
        "after": [
          {
            "result": {
              "duration": 19763700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42015400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.enterMedicalProfile(MyDocMedicalProfileScreen.java:83)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterMedicalProfileDetails(MyDocSteps.java:186)\r\n\tat ✽.When I enter Medical Profile details as below(features/ph/health/ConsultDoctor.feature:85)\r\n",
              "status": "failed"
            },
            "line": 85,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 88
              },
              {
                "cells": [
                  "EmergencyContact Name",
                  "Pulse QA"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 91
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 94,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 15478500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 406026100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/health/ConsultDoctor.feature:95)\r\n",
              "status": "failed"
            },
            "line": 95,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 100
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 101
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 102
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 103
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 104
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 105
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify User should be able enter the card details",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-enter-the-card-details",
        "after": [
          {
            "result": {
              "duration": 13794800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29985000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Add new cards\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.clickAddNewCardButton(MyDocPaymentDetailsScreen.java:92)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.clickAddNewCardButton(MyDocSteps.java:308)\r\n\tat ✽.When I click on Add New Card button(features/ph/health/ConsultDoctor.feature:111)\r\n",
              "status": "failed"
            },
            "line": 111,
            "name": "I click on Add New Card button",
            "match": {
              "location": "MyDocSteps.clickAddNewCardButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "user verify add card details screen fields",
            "match": {
              "location": "MyDocSteps.userVerifyAddCardDetailsScreenFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pay with card"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Card Number"
                ],
                "line": 114
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "I enter Card details as below",
            "match": {
              "location": "MyDocSteps.enterCardDetailsDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card Number",
                  "4111 1111 1111 1111"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Expiration Date",
                  "0822"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Card Number Android",
                  "4111 1111 1111 1111"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Expiration Date Android",
                  "08 / 22"
                ],
                "line": 119
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 120,
            "name": "I click on Confirm Payment Method button",
            "match": {
              "location": "MyDocSteps.clickConfirmPaymentMethodButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify User should be able see the added card successfully",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-see-the-added-card-successfully",
        "after": [
          {
            "result": {
              "duration": 17076400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38460700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Online Video Consultation\u0027]/preceding::android.view.ViewGroup[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyAddedCard(MyDocPaymentDetailsScreen.java:139)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.iVerifyTheMyCardAddedSuccessfully(MyDocSteps.java:819)\r\n\tat ✽.Then I verify the my card added successfully(features/ph/health/ConsultDoctor.feature:124)\r\n",
              "status": "failed"
            },
            "line": 124,
            "name": "I verify the my card added successfully",
            "match": {
              "location": "MyDocSteps.iVerifyTheMyCardAddedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 126,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 18633500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 70123500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:73)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/ph/health/ConsultDoctor.feature:127)\r\n",
              "status": "failed"
            },
            "line": 127,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 128
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 129
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 131
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 132
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 133
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 134
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 135
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 140
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 141
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 142
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 143
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 144
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 145,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 146,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 147,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 150,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-consult-doctor-functionality-on-pulse-health;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 15684800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5008362700,
              "status": "passed"
            },
            "line": 151,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 50637100,
              "status": "passed"
            },
            "line": 152,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 56339000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6144539d-2db1-4739-aae2-95fa73fea98d\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageUP(TestBasePage.java:377)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:139)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/ph/health/ConsultDoctor.feature:153)\r\n",
              "status": "failed"
            },
            "line": 153,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 154,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 155,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Consult doctor functionality on Pulse Health",
    "description": "",
    "id": "verify-consult-doctor-functionality-on-pulse-health",
    "keyword": "Feature",
    "uri": "features/ph/health/ConsultDoctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ConsultDoc"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 44000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 1153596700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10115190400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 149400,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.consultdoctor}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.consultdoctor}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 59
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7762863700,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10778342900,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 349199100,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005130500,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30531747500,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14589774200,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7924676700,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15246766900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tConsultation History text is displayed on page  expected [true] but found [false],\n\tAll My Files text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(MyDocSteps.java:841)\r\n\tat ✽.Then User verify following texts are displayed in medical records screen(features/ph/health/ConsultDoctorExistingUser.feature:16)\r\n",
              "status": "failed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 1094678300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7606725400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1fb8dec1-678f-4042-9f42-73ef2846e61e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027All My Files\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.clickAllMyFiles(MyDocConsultationSummary.java:299)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.clickAllMyFiles(MyDocSteps.java:425)\r\n\tat ✽.When I click on All My Files link(features/ph/health/ConsultDoctorExistingUser.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 29,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 31
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to download eMC Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-emc-document",
        "after": [
          {
            "result": {
              "duration": 16819300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3828647300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1fb8dec1-678f-4042-9f42-73ef2846e61e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027eMC-11th-January-2021-13980.pdf\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.clickEMCAttachment(MyDocConsultationSummary.java:402)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.clickEmcAttachment(MyDocSteps.java:492)\r\n\tat ✽.And I click on emc attachment(features/ph/health/ConsultDoctorExistingUser.feature:35)\r\n",
              "status": "failed"
            },
            "line": 35,
            "name": "I click on emc attachment",
            "match": {
              "location": "MyDocSteps.clickEmcAttachment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I download \"${EMC_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify User should be able to verify the eMC details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-emc-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 11941200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 40692500,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/eMC-11th-January-2021-13980.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"(features/ph/health/ConsultDoctorExistingUser.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medical Certificate"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${DOCTOR_NAME}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify User should be able to download Prescription Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-prescription-document",
        "after": [
          {
            "result": {
              "duration": 14199100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4072300400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1fb8dec1-678f-4042-9f42-73ef2846e61e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Prescription-11th-January-2021-KJRYHM3H2BRB.pdf\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.openPrescription(MyDocConsultationSummary.java:696)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.openPrescription(MyDocSteps.java:753)\r\n\tat ✽.Then I open the Prescription(features/ph/health/ConsultDoctorExistingUser.feature:48)\r\n",
              "status": "failed"
            },
            "line": 48,
            "name": "I open the Prescription",
            "match": {
              "location": "MyDocSteps.openPrescription()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I download \"${PRE_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to verify the Prescription details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-prescription-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 19157000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1343700,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Prescription-11th-January-2021-KJRYHM3H2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"(features/ph/health/ConsultDoctorExistingUser.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${PRESCRPTION_NUMBER}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to download the Referral Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-the-referral-document",
        "after": [
          {
            "result": {
              "duration": 13400200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5044343500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1fb8dec1-678f-4042-9f42-73ef2846e61e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Referral-11th-January-2021-KJRYIP3Q2BRB.pdf\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.openReferral(MyDocConsultationSummary.java:672)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.openReferral(MyDocSteps.java:743)\r\n\tat ✽.Then I open the referral(features/ph/health/ConsultDoctorExistingUser.feature:61)\r\n",
              "status": "failed"
            },
            "line": 61,
            "name": "I open the referral",
            "match": {
              "location": "MyDocSteps.openReferral()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I download \"${REF_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to verify the Referral details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-referral-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 15349300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1367200,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Referral-11th-January-2021-KJRYIP3Q2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"(features/ph/health/ConsultDoctorExistingUser.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${EPISODE ID}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${REFERRAL_NUMBER}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able to Download as PDF Files \u0026 Validate the details in downloaded Mydoc Documents.",
    "description": "",
    "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.",
    "keyword": "Feature",
    "uri": "features/ph/health/ConsultDoctorExistingUser.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ConsultDocExistingUser"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-heart-clinic-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10007249800,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109600,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.idsetting}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.idsetting}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 59
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8759406600,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11251020800,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "${login.mysettings}"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 367874000,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003791800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31345226200,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3325407800,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify the popup for Health page is display properly",
        "description": "",
        "id": "verify-my-heart-clinic-functionality-in-account-screen;verify-the-popup-for-health-page-is-display-properly",
        "after": [
          {
            "result": {
              "duration": 19141600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47179500,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1000649000,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22536600,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 36f355ba-fb83-4431-bdea-4d7992994d8f\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.Then I scroll down(features/ph/health/MyHealthClinic.feature:20)\r\n",
              "status": "failed"
            },
            "line": 20,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I navigate to My Heart clinic screen",
            "match": {
              "location": "MyDocUiSteps.navigateToMyHeartClinicScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I verify following texts in my heart clinic are Displayed in the popup",
            "match": {
              "location": "DieticianSteps.verifyTextsOnPopUpScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Health.MyeartClinic.AllowStatictext}"
                ],
                "line": 27
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I verify following button in my heart clinic are Displayed in the popup",
            "match": {
              "location": "DieticianSteps.verifyTextsOnPopUpButtonScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Health.MyeartClinic.WhileUsingtheapptext}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${Health.MyeartClinic.Onlythistimetext}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${Health.MyeartClinic.Denytext}"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Heart clinic functionality in Account screen",
    "description": "",
    "id": "verify-my-heart-clinic-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/ph/health/MyHealthClinic.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@PhHeartClinic"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 13206700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9338060200,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 124400,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16081308100,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15074943300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c91fd394-d72c-45e7-bd3c-355f793741c6\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat io.appium.java_client.PerformsTouchActions.performTouchAction(PerformsTouchActions.java:41)\r\n\tat io.appium.java_client.TouchAction.perform(TouchAction.java:187)\r\n\tat com.prudential.tap.appium.AppiumCommands.scrollElement(AppiumCommands.java:876)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollUpTillElementDisplayed(TestBasePage.java:394)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1017)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/ph/home/MyEvents.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 74041900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 92398300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c91fd394-d72c-45e7-bd3c-355f793741c6\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"EN\"]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectTheLanguageToggle(PulseRegistrationScreen.java:1066)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.selectTheLangOption(RegistrationSteps.java:338)\r\n\tat ✽.Given I select the language option on toggle bar as required on login page(features/ph/home/MyEvents.feature:13)\r\n",
              "status": "failed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 20806300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8068693500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c91fd394-d72c-45e7-bd3c-355f793741c6\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.ClickMyEvents(CustomerConnectScreen.java:947)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMyEvents(CustomerConnectSteps.java:277)\r\n\tat ✽.And I click the MyEvent icons(features/ph/home/MyEvents.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 20975900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8087767900,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c91fd394-d72c-45e7-bd3c-355f793741c6\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.ClickMyEventsArchive(CustomerConnectScreen.java:1890)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMyEventsArchive(CustomerConnectSteps.java:590)\r\n\tat ✽.And I click the Events Archive icon(features/ph/home/MyEvents.feature:30)\r\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 17424000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8487037100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c91fd394-d72c-45e7-bd3c-355f793741c6\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.ClickMyOpenEvents(CustomerConnectScreen.java:1873)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickMyOpenEvents(CustomerConnectSteps.java:586)\r\n\tat ✽.And I click the Open Events icon(features/ph/home/MyEvents.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEventPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 44300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10336427900,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139500,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16010987500,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22304889200,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002968700,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4878327400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 11,
                "value": "#  Then I change the language as required on registration page"
              }
            ],
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1619163600,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 17009900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2311834700,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7990841000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4f1a8764-9f91-4ba6-b32a-9232b6b457de\n*** Element info: {Using\u003dxpath, value\u003d//android.view.ViewGroup[@content-desc\u003d\u0027container\u0027]/android.widget.EditText[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.enterLoginCredentials(PulseLoginScreen.java:159)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.userEntersCredentials(LoginSteps.java:52)\r\n\tat ✽.When user enters credentials(features/ph/home/general/PulseLoginTest.feature:17)\r\n",
              "status": "failed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35122100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9502531700,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2010280900,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14284952200,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22985488900,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015683800,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2717636400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: java.lang.IllegalStateException: UiAutomation not connected, UiAutomation@7bc5c43[id\u003d-1, flags\u003d0]\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 6f4da6bb-2849-4972-8f23-9014a62135ac\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat io.appium.java_client.PerformsTouchActions.performTouchAction(PerformsTouchActions.java:41)\r\n\tat io.appium.java_client.TouchAction.perform(TouchAction.java:187)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:485)\r\n\tat com.onepulse.app.screens.PulseLoginScreen.clickSignIns_InSignUp(PulseLoginScreen.java:719)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.clickSignIns_InSignUp(LoginSteps.java:349)\r\n\tat ✽.And I click the Sign in link(features/ph/home/general/PulseLoginTest.feature:32)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 673300,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79700,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9212067500,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16426768500,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22807301500,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004190800,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4945915100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2017137400,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2298108500,
              "status": "passed"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10492928900,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4556396900,
              "status": "passed"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 259078100,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1183176600,
              "status": "passed"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 266101400,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3631771600,
              "status": "passed"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 780951200,
              "status": "passed"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1698705900,
              "status": "passed"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 60800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 94300,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3808862000,
              "status": "passed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 770904500,
              "status": "passed"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26598969200,
              "status": "passed"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1112893000,
              "status": "passed"
            },
            "line": 81,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5007874500,
              "status": "passed"
            },
            "line": 82,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3157045500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 83,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 84,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 26872500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 772700,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 136100,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10637894000,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012751800,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14360271800,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11006525800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 43fb9801-cd8e-4909-a4b3-9a589435d17a\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat io.appium.java_client.PerformsTouchActions.performTouchAction(PerformsTouchActions.java:41)\r\n\tat io.appium.java_client.TouchAction.perform(TouchAction.java:187)\r\n\tat com.prudential.tap.appium.AppiumCommands.scrollElement(AppiumCommands.java:876)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollUpTillElementDisplayed(TestBasePage.java:394)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1017)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/ph/home/general/PulseLoginTest.feature:93)\r\n",
              "status": "failed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button for PH LBU registration flow",
            "match": {
              "location": "RegistrationSteps.iClickSkipButtonPH()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 86,
            "name": "@invalid_pwd"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 21094600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9400627900,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2011263100,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14085639500,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011929800,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23137404700,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2011290700,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1691046700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 8ed11ec9-1a31-4b65-a9ee-738e02e77df3\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)\r\n\tat io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45)\r\n\tat io.appium.java_client.MobileElement.execute(MobileElement.java:1)\r\n\tat io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectTheLanguageToggle(PulseRegistrationScreen.java:1066)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle(RegistrationSteps.java:429)\r\n\tat ✽.Then I navigate to pulse registration page and select the lang on toggle bar(features/ph/home/general/PulseLoginTest.feature:151)\r\n",
              "status": "failed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/general/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLoginsPH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 30100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 521400,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46300,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9251553900,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005291100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13569542300,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011116400,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22121755400,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009620500,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4134081500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015301200,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8019724000,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 343157700,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4742975200,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30989184200,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2016489200,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11328684500,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6637830700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I click the continue button"
              },
              {
                "line": 30,
                "value": "#    And I choose my wellness goals under wellness plan screen"
              },
              {
                "line": 31,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 32,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 421697800,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1496396800,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6064090300,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1115540700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2428474600,
              "status": "passed"
            },
            "line": 37,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 881885600,
              "status": "passed"
            },
            "line": 38,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 714167000,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1832994000,
              "status": "passed"
            },
            "line": 40,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1471383300,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3766430400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 43,
                "value": "#    And I click the continue button"
              },
              {
                "line": 44,
                "value": "#    And I answer as \"${option.yes.text}\" to \"Any Food allergies?\""
              },
              {
                "line": 45,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 46,
            "name": "I skip the avatar screen if present",
            "match": {
              "location": "RegistrationSteps.iClickAvatarSkipButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2292361500,
              "status": "passed"
            },
            "line": 47,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 48,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 49,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11187313600,
              "status": "passed"
            },
            "line": 50,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 408364600,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 474252100,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3880827100,
              "status": "passed"
            },
            "line": 53,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13752800900,
              "status": "passed"
            },
            "line": 54,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4008120500,
              "status": "passed"
            },
            "line": 55,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 665205800,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20195996200,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4002723600,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2540077200,
              "status": "passed"
            },
            "line": 59,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 60
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 256862100,
              "status": "passed"
            },
            "line": 61,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000093800,
              "status": "passed"
            },
            "line": 62,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14019156200,
              "status": "passed"
            },
            "line": 63,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@regtst_ph"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 9631600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10447321400,
              "status": "passed"
            },
            "line": 66,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2007746400,
              "status": "passed"
            },
            "line": 67,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4070681400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9dc8a165-1b2a-4288-849f-dd52393b67c8\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"CONTINUE WITH EMAIL\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickRegisterButton(PulseRegistrationScreen.java:205)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.clickRegisterWithEmail(RegistrationSteps.java:149)\r\n\tat ✽.And user click on \"CONTINUE WITH EMAIL\" with Email button(features/ph/home/general/PulseRegistrationTest.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 74,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 75,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 79
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 80,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 81,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 82,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 85,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 10707400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 48875100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9dc8a165-1b2a-4288-849f-dd52393b67c8\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Sign Up\u0027 or  @text\u003d\u0027Daftar\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickRegisterContinueButton(PulseRegistrationScreen.java:214)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.clickOnContinue(RegistrationSteps.java:155)\r\n\tat ✽.Given taps on continue \"Sign_Up\" button(features/ph/home/general/PulseRegistrationTest.feature:86)\r\n",
              "status": "failed"
            },
            "line": 86,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 91
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 102,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 47983300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 88351900,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9dc8a165-1b2a-4288-849f-dd52393b67c8\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Password\u0027)]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.enterRegistrationDetails(PulseRegistrationScreen.java:263)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.enterRegistrationDetails(RegistrationSteps.java:37)\r\n\tat ✽.When user enters registration details(features/ph/home/general/PulseRegistrationTest.feature:95)\r\n",
              "status": "failed"
            },
            "line": 95,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 96
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@RegistrationsPH"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 22967900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 150613300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9dc8a165-1b2a-4288-849f-dd52393b67c8\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Password\u0027)]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.enterRegistrationDetails(PulseRegistrationScreen.java:263)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.enterRegistrationDetails(RegistrationSteps.java:37)\r\n\tat ✽.When user enters registration details(features/ph/home/general/PulseRegistrationTest.feature:95)\r\n",
              "status": "failed"
            },
            "line": 95,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 96
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@RegistrationsPH"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionPH"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 105,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 55600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10268121400,
              "status": "passed"
            },
            "line": 106,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2008059700,
              "status": "passed"
            },
            "line": 107,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12916566300,
              "status": "passed"
            },
            "line": 108,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013986200,
              "status": "passed"
            },
            "line": 109,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23101386000,
              "status": "passed"
            },
            "line": 110,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012922200,
              "status": "passed"
            },
            "line": 111,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3901720000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 112,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 113,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010935500,
              "status": "passed"
            },
            "line": 114,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8238989100,
              "status": "passed"
            },
            "line": 115,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 116
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 119
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 279177200,
              "status": "passed"
            },
            "line": 120,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1897021500,
              "status": "passed"
            },
            "line": 121,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 124,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 98800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 916500,
              "status": "passed"
            },
            "line": 125,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61900,
              "status": "passed"
            },
            "line": 126,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10848780300,
              "status": "passed"
            },
            "line": 127,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2006645100,
              "status": "passed"
            },
            "line": 128,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13399394800,
              "status": "passed"
            },
            "line": 129,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2014187100,
              "status": "passed"
            },
            "line": 130,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21749272700,
              "status": "passed"
            },
            "line": 131,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015392900,
              "status": "passed"
            },
            "line": 132,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4032562300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 133,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 134,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016735700,
              "status": "passed"
            },
            "line": 135,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7549331600,
              "status": "passed"
            },
            "line": 136,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 137
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 138
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 139
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 140
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 332855100,
              "status": "passed"
            },
            "line": 141,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5926852000,
              "status": "passed"
            },
            "line": 142,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31646024200,
              "status": "passed"
            },
            "line": 143,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005987800,
              "status": "passed"
            },
            "line": 144,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 161255600,
              "status": "passed"
            },
            "line": 145,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10940452100,
              "status": "passed"
            },
            "line": 146,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 147
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1013092900,
              "status": "passed"
            },
            "line": 148,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007824600,
              "status": "passed"
            },
            "line": 149,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 301424400,
              "status": "passed"
            },
            "line": 150,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 152,
            "value": "#Not adding to PH regression as the reg screen order keeps changing for the LBU"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 46500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 58900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 153,
        "name": "Verify the Registration screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-registration-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11870924500,
              "status": "passed"
            },
            "line": 154,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 155
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1008371300,
              "status": "passed"
            },
            "line": 156,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1684964600,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1012750000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 158,
                "value": "#    Then verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen"
              },
              {
                "line": 159,
                "value": "#    And I choose my wellness goals under wellness plan screen"
              }
            ],
            "line": 160,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 543584200,
              "status": "passed"
            },
            "line": 161,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108300,
              "status": "passed"
            },
            "line": 162,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5453435300,
              "status": "passed"
            },
            "line": 163,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 401338700,
              "status": "passed"
            },
            "line": 164,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1991220400,
              "status": "passed"
            },
            "line": 165,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1003741800,
              "status": "passed"
            },
            "line": 166,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 973655300,
              "status": "passed"
            },
            "line": 167,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79100,
              "status": "passed"
            },
            "line": 168,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6337719600,
              "status": "passed"
            },
            "line": 169,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1072111500,
              "status": "passed"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1010897500,
              "status": "passed"
            },
            "line": 171,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2093722600,
              "status": "passed"
            },
            "line": 172,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 377087800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 173,
                "value": "#    Then verify BMI validation message \"${bmi.alert.text}\" on registration workflow screen"
              }
            ],
            "line": 174,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2888498300,
              "status": "passed"
            },
            "line": 175,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1004506200,
              "status": "passed"
            },
            "line": 176,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 775907400,
              "status": "passed"
            },
            "line": 177,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107800,
              "status": "passed"
            },
            "line": 178,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 353476000,
              "status": "passed"
            },
            "line": 179,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1199518500,
              "status": "passed"
            },
            "line": 180,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 181,
            "value": "#    Then I wait for 1 sec"
          },
          {
            "line": 182,
            "value": "#    And I click the continue button"
          },
          {
            "line": 183,
            "value": "#    Then verify validation message \"${diet.preference.alert.text}\" on registration workflow screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 186,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 19497500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 721100,
              "status": "passed"
            },
            "line": 187,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58900,
              "status": "passed"
            },
            "line": 188,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10401500000,
              "status": "passed"
            },
            "line": 189,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006915800,
              "status": "passed"
            },
            "line": 190,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7257674200,
              "status": "passed"
            },
            "line": 191,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007131700,
              "status": "passed"
            },
            "line": 192,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 88976300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 239a9ca0-ad74-4dc2-8473-a2668f70df25\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Spinner[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.changeTheCountryName(PulseRegistrationScreen.java:1015)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheCountry(RegistrationSteps.java:306)\r\n\tat ✽.Then I change the country as required on registration page(features/ph/home/general/PulseRegistrationTest.feature:193)\r\n",
              "status": "failed"
            },
            "line": 193,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 194,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 195,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 196,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 197,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 198,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 199
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 200
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 201
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 202
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 203,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 204,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 205,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 207,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 208,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 209,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 185,
            "name": "@otpreset_tst_ph"
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App for PH LBU",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app-for-ph-lbu",
    "keyword": "Feature",
    "uri": "features/ph/home/general/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@RegistrationsPH"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 41300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10278734600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16100490200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#    And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22696860600,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3013927300,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4902060600,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 115500,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3561029800,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10822178000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 312589400,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10011060800,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10757131500,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14145173600,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 49000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6007353400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#   Given User has pulse app"
              }
            ],
            "line": 25,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7795229000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              },
              {
                "line": 27,
                "value": "# And I click the MyCommunities icon"
              }
            ],
            "line": 28,
            "name": "I click the MyCommunities icon in Home Screen",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunitiesss()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6002626400,
              "status": "passed"
            },
            "line": 29,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 369144900,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9491138800,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 46800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 339880100,
              "status": "passed"
            },
            "line": 37,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4525080600,
              "status": "passed"
            },
            "line": 38,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 190475700,
              "status": "passed"
            },
            "line": 39,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8595488000,
              "status": "passed"
            },
            "line": 40,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5009118500,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1177414100,
              "status": "passed"
            },
            "line": 45,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3758463500,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4815465500,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16225999500,
              "status": "passed"
            },
            "line": 48,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2859669300,
              "status": "passed"
            },
            "line": 49,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4021572400,
              "status": "passed"
            },
            "line": 51,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1531152900,
              "status": "passed"
            },
            "line": 53,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3112471200,
              "status": "passed"
            },
            "line": 54,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 55
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 56
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 49700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9037330200,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013826100,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9455325600,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8556159500,
              "status": "passed"
            },
            "line": 62,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4194898700,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1592050900,
              "status": "passed"
            },
            "line": 64,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1025435200,
              "status": "passed"
            },
            "line": 66,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7647570500,
              "status": "passed"
            },
            "line": 67,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4885500200,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4136032300,
              "status": "passed"
            },
            "line": 71,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4263507400,
              "status": "passed"
            },
            "line": 72,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5119076500,
              "status": "passed"
            },
            "line": 73,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 30267500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 109279100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5ba2640c-8750-4738-bcc4-37158df880f1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickSkipfeedbutton(MyCommunitiesScreen.java:662)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickSkipbutton(MyCommunitiesSteps.java:208)\r\n\tat ✽.Then I click skip button in feeds screen(features/ph/home/mycommunities/PulseMyCommunities.feature:77)\r\n",
              "status": "failed"
            },
            "line": 77,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I wait for 13 sec",
            "match": {
              "arguments": [
                {
                  "val": "13",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I wait for 13 sec",
            "match": {
              "arguments": [
                {
                  "val": "13",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 89
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 14047500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15008662300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 93,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 94,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36162200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5ba2640c-8750-4738-bcc4-37158df880f1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Category\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${category.text}\" in app screen(features/ph/home/mycommunities/PulseMyCommunities.feature:95)\r\n",
              "status": "failed"
            },
            "line": 95,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 17712400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5007141600,
              "status": "passed"
            },
            "line": 107,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96961700,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5ba2640c-8750-4738-bcc4-37158df880f1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.Clickstaricon(MyCommunitiesScreen.java:464)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.Clickstarutton(MyCommunitiesSteps.java:153)\r\n\tat ✽.And I click the Back icon in Stay Active screen(features/ph/home/mycommunities/PulseMyCommunities.feature:108)\r\n",
              "status": "failed"
            },
            "line": 108,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 17426900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42009800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 5ba2640c-8750-4738-bcc4-37158df880f1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${my.communities.text}\" in app screen(features/ph/home/mycommunities/PulseMyCommunities.feature:111)\r\n",
              "status": "failed"
            },
            "line": 111,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communtiesph"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 50400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10445413600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16243861200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21926567000,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2997095000,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4944685200,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 47100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 147800,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3680277400,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10537809600,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 296826500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012432600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11250338400,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14282721500,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 37500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2727040700,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3001281100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 351315100,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8752397700,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3005753100,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 41000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4758529700,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2537297800,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3494028000,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 354704500,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4588666400,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10228712100,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10229288700,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3002219000,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4459039900,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1354567800,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1306798300,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 38300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 112600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 733300,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49700,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10597427000,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002958500,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15162276800,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003049000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23052570400,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2011935500,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4014007600,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001112000,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7342531600,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 310311200,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32109543000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001329200,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63116540800,
              "status": "passed"
            },
            "line": 24,
            "name": "I click skip button for PH LBU registration flow",
            "match": {
              "location": "RegistrationSteps.iClickSkipButtonPH()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015916200,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@ph_reg_tst1"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 27,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 118900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 40600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10820283300,
              "status": "passed"
            },
            "line": 29,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17607730100,
              "status": "passed"
            },
            "line": 30,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22065702500,
              "status": "passed"
            },
            "line": 31,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5013238100,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4931243700,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3598523700,
              "status": "passed"
            },
            "line": 36,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10584220300,
              "status": "passed"
            },
            "line": 37,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#      | UserName | pulse56823065633@mailsac.com |"
                  }
                ],
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 40
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 277614600,
              "status": "passed"
            },
            "line": 41,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5002001500,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11623476500,
              "status": "passed"
            },
            "line": 43,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14172248900,
              "status": "passed"
            },
            "line": 44,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001988200,
              "status": "passed"
            },
            "line": 45,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Navigates to PRU Shoppe screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;navigates-to-pru-shoppe-screen",
        "after": [
          {
            "result": {
              "duration": 34700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11494207400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 49,
                "value": "#    Then user should be landed to \"Home\" screen"
              },
              {
                "line": 50,
                "value": "#    And I wait for 2 sec"
              }
            ],
            "line": 51,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 130700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify first time User are presented with T\u0026C to proceed to the Pru Shoppe",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-first-time-user-are-presented-with-t\u0026c-to-proceed-to-the-pru-shoppe",
        "after": [
          {
            "result": {
              "duration": 48200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2015936000,
              "status": "passed"
            },
            "line": 54,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 266670000,
              "status": "passed"
            },
            "line": 55,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to navigate to Free PA with COVID+Vaccine Protection tile",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-free-pa-with-covid+vaccine-protection-tile",
        "after": [
          {
            "result": {
              "duration": 40100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5012659200,
              "status": "passed"
            },
            "line": 59,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 960366300,
              "status": "passed"
            },
            "line": 60,
            "name": "I click on pru Free PA COVID Vaccine protection tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToFreePACovidVaccineProtect()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3003326100,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "Verify Free PA with COVID+Vaccine Protection coverage details and conditions are listed above Show More link",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-free-pa-with-covid+vaccine-protection-coverage-details-and-conditions-are-listed-above-show-more-link",
        "after": [
          {
            "result": {
              "duration": 42900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2730195000,
              "status": "passed"
            },
            "line": 64,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pavaccine.package.text}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.1}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.2}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.3}"
                ],
                "line": 68
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify the  Show More link is clickable in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the--show-more-link-is-clickable-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12880933100,
              "status": "passed"
            },
            "line": 71,
            "name": "user click on following button \"${show.more.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.more.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify the Free PA with COVID+Vaccine Protection coverage details and conditions are listed on click Show More link",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-free-pa-with-covid+vaccine-protection-coverage-details-and-conditions-are-listed-on-click-show-more-link",
        "after": [
          {
            "result": {
              "duration": 1145515500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12657548300,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tYou are required to review the terms and conditions which include the product exclusions, prior to availing this product text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature:74)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 74,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pavaccine.package.text.package.info.4}"
                ],
                "line": 75
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.5}"
                ],
                "line": 76
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.1}"
                ],
                "line": 77
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.2}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.3}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.4}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.5}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.6.6}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.7}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.8}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${pavaccine.package.text.package.info.9}"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify the  Show Less link is clickable in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the--show-less-link-is-clickable-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8070807100,
              "status": "passed"
            },
            "line": 88,
            "name": "user click on following button \"${show.less.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.less.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify the Your Details section in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-your-details-section-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 1159844900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15786826000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tYour Details text is displayed on page  expected [true] but found [false],\n\tScan your ID text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature:91)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 91,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${your.details.text}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${scan.your.id.text}"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 94,
            "value": "#      | ${allowed.id.text}   |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 44100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 96,
        "name": "Verify all the field headers in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-all-the-field-headers-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 1167859600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 41104350100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tID Number text is displayed on page  expected [true] but found [false],\n\tFirst Name text is displayed on page  expected [true] but found [false],\n\tMiddle Name text is displayed on page  expected [true] but found [false],\n\tLast name text is displayed on page  expected [true] but found [false],\n\tDate of birth text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature:97)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 97,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${id.no.text}"
                ],
                "line": 98
              },
              {
                "cells": [
                  "${firstname.text}"
                ],
                "line": 99
              },
              {
                "cells": [
                  "${middlename.text}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${lastname.text}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "${prushoppe.gender.text}"
                ],
                "line": 102
              },
              {
                "cells": [
                  "${prushoppe.disease.dob}"
                ],
                "line": 103
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 105,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4600673400,
              "status": "passed"
            },
            "line": 106,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Verify User should be able to see the fields in Your Details section",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-fields-in-your-details-section",
        "after": [
          {
            "result": {
              "duration": 1138190200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73724932400,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNationality text is displayed on page  expected [true] but found [false],\n\tPlace of Birth text is displayed on page  expected [true] but found [false],\n\tAddress text is displayed on page  expected [true] but found [false],\n\tCity/Province text is displayed on page  expected [true] but found [false],\n\tCountry Code text is displayed on page  expected [true] but found [false],\n\tEmail Address text is displayed on page  expected [true] but found [false],\n\tOccupation text is displayed on page  expected [true] but found [false],\n\tMobile Phone Number text is displayed on page  expected [true] but found [false],\n\tReferral code (optional) text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature:109)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 109,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${ph.nationality}"
                ],
                "line": 110
              },
              {
                "cells": [
                  "${ph.placeofbirth}"
                ],
                "line": 111
              },
              {
                "cells": [
                  "${ph.proshoppe.address}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "${ph.proshoppe.city}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${ph.proshoppe.country.code}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "${ph.email.address}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${ph.occptn}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "${ph.mobile.phone.number}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "${ph.referral.code}"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 120,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4583294100,
              "status": "passed"
            },
            "line": 121,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify the Terms and Conditions text in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-terms-and-conditions-text-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 996153000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16798238100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tBy clicking PROCEED, I confirm and acknowledge that all the information I provided above including the product package I chose are correct. text is displayed on page  expected [true] but found [false],\n\tBy clicking PROCEED, I confirm and acknowledge that all the information I provided above including the product package I chose are correct. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature:124)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAA790lEQVR4Xu2d95tURfb//WH/g32efZ79A/Yf2HW/7u7HsKursGtgEUExkgRElBwEzChRBFGQnCSDAUUk5wySQcIwMMQhMwNDpr79OuNp79xuZrpmGOiuOa/nqenue+uGrnrXuTVddU7ds/u+vzlLlkJO98Q3WLIUWjKRWwo+mcgtBZ9M5JaCTyZyS8EnE7ml4JOJ3FLwyURuKfgUjMj3/uthd/jNNu7Q663dngcfStlfnWl/vWfc6TFj3dkZM1xh7z5u99/+npLHUjkpUV57HnzQ7fn7P1L3/Zoo47wnnkjZnkm68yLni/wqgr3//JeIM55n32O13J7/u7/0cyKvfC6nAAqat3BX8g+4m5cuuRsXLrgr+/a5Ay++lJLvxGeDXeEnA5LX3/PAg+702LHuaPceZfJxreO9e7sTAweVSYfbtUs556E33pTrRjneq5fb+/AjKXlrVEqU4bH33neFffu5o926pe6/r7T8T37xhTv//ffuzMSJ7tzXX7uzU6e6/U/VKZPv1JfDSus1Pz+lrjJJd1TkB19+RW70QOL1SIcO7uK6de7i2rWJ9x2TeQr79nXFi5e4ks1bRNxnvprozs+eLfn23P9AyjkpqGtHj7r8hs+LFT/YqLE79FqrhNDzShtUJO/Z6dPd4bbt3Nlp093+p+tJ4dIYzkyeXCbfvscec+7GDXdp505389o1d2nbNleydau7vHt32esnzs99Xt6zx5Vs/Nld2b9fRM69nh47LuVeNeU3eFbuO749mJQolyNdu7rzP85JlO+L7vwPP0i5x/NR/odav1Fm277a/0mU6eYy5SPGq7jY3Th/3hUvXZpynorSnRV5QoDnZs50B19p5Eo2bBBrhyXnSx1u09adHj1avlz+M/XdheXL3f66T7viJUtdwWuvJRrE+rTWseDV5iLIvP8+LuIp+uknV7RggYgtv36DMnkR+alhw93Rrm8lrMY37ti777rjH/dyZ1NEXssVzZkjjeHC6tXuTEKwp4YMSYh3XZl83E/xkiVyraPdussT4MyECe5GUZE0kPi9kg42bebczZvScOP7QklnJk1KCPzHRLlOkc+8nvvmW3dq5Mgy+fKffU6s95FOnV3xgoUJqz4k0d3r7Y73/KhMPkROvZX8/HP2i5yEkEXkCcun2y7v2uX2/OP/pPvC52PvvJvYv1FEfu67WfIIw+rv+/ejKefDEkdFniSxLf7YQ+SIm/OdS/Sfz06Z4k5+/nlakXN9HqVUDo/S02PGuEvbt5fJRyNSeDTnPfGkNEag4cbvlZSXuCeeDDSu+L5Q0ulx49KLfOjQlLw80Wn0CnUUz3OzpMQV9v9Engg5JXIsGdabPi3vEcjBxk2kNR94/vmEsCa5oz3edpcTFhEBk+dgk6Yp5+PReCnRlTjSpasr7Nc/WVgXVqxMyVv001x3MWGZ9yT65FiR/XXquKL580Xs0Xw0Jnf9evJcyqUdO1LOyTagG3bz8uVkXvr08bw1JiXK93CbNq544ULpjhTNnecKWrZMzfdrOjn0SykzLHXyf7FIwpJTx9RJToj8cELUCBpriUUl7atVOyHsF6QbgXWkr3ZqxEix7vSzi+bNk5YcP5cmzndh5Sp38+pVd/PKlUThLnL7Hn0sJd/+/9V1BS1+K2y6RvTf6QfG8x546WXZF0376/wvJR99ewQOdLEuLF/hzs/5Sb5TPG+NSgi9XXv5R5E6TNkfy8vTMl09kOjaXsnLk8QPBfH9FaU7LvLqTPTv9z70z5Tt1Z2wPlQo1jtdQ7B0d1NQIrdkKV0ykVsKPpnILQWfTOSWgk8mckvBJxO5peCTidxS8Ome+ICHpUBTy9fKT6+R0hwXSQWvNknZlgvpnuQ4tBEuN26UjgaXk9JNYwgFE3lNIAORM6U4VEzkNQFEnhBxirDj1jxQTOQ1Daa1JkQvKdFFiYpftgWIidwoJTKnOzRM5EbwmMiN4DGRG8FjIjeyFn7UvBDfWAkqJfJLly65j3r1cSUlJfFdhnHbIJpNoeN/4pvuypUr7iq/AlXiH2RvkSPwxk2buw8/6lWpCxpZBr+hX+EnxNLBoJv8rMjnXweH5PXXemZf8lcYjtNR0sQ2+SmSxLEkPc+VyE+T5IuMrCav8eu13U3ep/5ef+PadXfo8BG3dcs2t3/vPnfhwsV4lnLxEjmW2wSee9xIiGzz1m3xzULRgoXu0Ott3bEPervTo8a6E5994Y736u+OvtvTFS9f6Y507OquFp6UvIX9PnUl20qjE5yfM8+dmTxV3l/audsd/+Bjd7Rrd3e89yfu5Jej3OkJk92RDl3cqcT7Szt++TXfLlfYpzSiwrWTp9zhth3lt/qClq1F6KfHf+XOTJom+y9u2OTOL1jiTo4c706Nn+KK125wZ775wZ0cNtpdWFsa9iNTDWYs8suXL7tGTV519/3jATdg4Gdu4KDPy6S8vNLoUUb2cT0h8uFjxruf5i9yG37e7C4nHv0bNm2Rfed/mO1ODh7irp067fLr1nPHEwYMcV9YttId7/mxO/RqC3f12HHJe+yd993FnzfJ+3PffOdOjx4j70u2bndHO3Vxh1q1dhfXb3LXzpx1ZxMN4NSXI9y102eTlrpky1Z3rMc78v7q8ROuoFFTEXl+g4bu1OjxiQY2JGHpf7X6iXsuWrLcnftutis6UODOnT/vtu38xRWeOOlKLpa4XXv2uWOFJ0rzVkDGIr+euJn2Hbu4e//fP9yw4aPcqDHjyqSDBwvihxhZAiJfkhDu8lVr3N59+934ydPc0aPHZB8iP/DCK+7o2x+4s9NnusJevd3h9l0Sgq+fEO+OmMjfq1DkJwZ8lrDGU92ZiZPd4TYdEtZ5orv667VuKfKn67uDiXsoWrBY9kU5nWgw+/IPyHs0eDhxLwg+L/9gLOetyVjkcC3Rh+rQqatr276TXNDIDeiuTEoI+NsffpTPWHUFkZ8YOJiWIJ8ROZb81NDh7tSwEe5ol26uaNESd/3sOXewcTN35UCpMTv3zSx3YvAX8gS4+POWpMgv782T/WLJhw5zJYWF7npxsWy7UnDIHWzURM5VtHhpoivU2d0ovuAOPPu8u3LwsDvQ8EXpityIBFDFYq9Zv1G+Q3Ei787de+X17LnzyTwV4SVy+E3oHd3VgGeuhcrBhNA2bfmtf345IZoLa9YlPxcvW5EQ6nZ3/fQBdzphka8m/uE7+cUwd7zvpyJ+5dKu3Yn+8Sh3auRYeX9+7gJ3LtGIrp0+U7p/23bZf3LEGFe8YnXyuOIlyxL98gGJfvvIhIU/7opXrXVnEg2Q7gmRic9MmS759R/QrTt2uoOHDrtLie7y4cQT4dCR0lStIgeEPnLUGPmlxcghfp2U5TBOpOivJWXyMb88O+qWrkm815B/8JArKcn8/iolciPH0J/40kyvDXn2oWIirwnwm3YacZcn9BtpDPyd4trNG+7o1SJ+Nr8tmMhrAhmIXIQe6bqcvxI5Ps5NujqXEi8XJbkbicw3b9/TgLsovn41IXYEX/q5KpjIawKZirzCbgvdnpJE3uI06UJpX177/STep+vzl8PVxCElCWVfjKXL129WWuwm8ppAhiKvyM/zJtY7Rdy/pitF7sal84n3l1POW3HjKQUhx8UdTYg/szOVxUReE7gdIr95/TdBx5MI/FxpulyUet4MhI4Fj4s6XSq57m/PTeQ1gQxFXm5YiutXfhN1LN24fP43kSfSzavkTXP+W4Bs42IuL13z1LmJvCaQqcjLs7bldFWiAi8VeWqXpbzzI9q4kMtLl8tpi+kwkdcEMhF5eV0VuI5wUwVepqtSSZFn2lXRdMlEblQf9BMySf7Ez1BR8sFEbgSPidwIHhO5ETwmciN4TORG8JjIsxR8avGGUXAix3HX5vD74y3yd955x73//vuSdu3a5SZNmhTPkmT16tVSWUqbNm3c3r175T3nqak88sgjyZg1lGGTJk3c0aNH3aJFi5J5Bg0alCwrePPNN93p06fd22+/ndwWZffu3a5169byft++feXWS03DW+SvvfZamc8U5ooVK9x7773ntm7d6j755BN5T+XVrl3bTZkyJZn3lVdecY0bNxZPj2bNmsm28ePHuw8++MD9/PPPbunSpVK53bp1k+Peeustl5eX5w4fPux69uzphg8fnjxXLvPvf//bjRo1St7T2Js2beoOHTrklixZImXYo0cP16BBAxH5d999J9/9ySefTIr8yJEjsm3YsGHJc3Lcn//8Z/fDDz+4HTt2uM8//zyZjzqhzHnt1auXlGP//v2lrGH69OlSBzt37kyeLyS8RY44seIUFo9TrMfo0aNFoPv373ft2rUTq4LIqZBz584lj23RooWbP3+++/LLL+U8HM9nLP7rr78u2zds2OAWLlwoIjh27Jhci+PWrl3rOnXqJOfNdVq1aiWWma5Hly5d5Am3ZcsW+f6UA+6FlO+ePXvkuwPlpSJv2bKllEfnzp1F0IDIBwwYIA1m5cqVIvLt27e7jRs3SrmRj33w0ksvlfrqduggeTBcmzZtcq+++mryHkPCW+RxS64ixxJfuHDBrVq1SqzT7Nmz04ocKNxatWq5oqIiqdRly5bJealkCp1zTJs2zZ05c0bO9eyzz7pvv/1WrNrJk6WBbnIZxDZmzBjXsWNHt379eilDFfkbb7wheQYOHOh++eUXaQwQ7a6kKw9E/umnn7r8/Hz33//+V0ROwkrTkNhP44K2bdvKK08MukjNmzeXc1EPIeItcqxCFApw4sSJUohYXioMC0MXZuzYsWW6GIgbEO/DDz9cGnIu0X3hUclx5MdSr1u3Tirx7Nmzrnfv3mLZOSeCj/bxcxVEhkF4/PHH5Z9JypDGzfenm0Z3je4KT8YPP/xQUt26daXcsPAIM14edDWGDh0q74cMGeJGjhwpAqfMn3/+ebHUWneIGz7++GMxQjS2jz76SIQeIt4irwgqLRq+K/oLQTri+W9FpvlCIF5m8c+QaXmkOzYdmebLRW67yA0j2zCRG8FjIjeCx0RuBI+J3AgeE7kRPHdE5IWFrPxSfTDsn0vw2zRjAKRMfgZMx8WLF8sEwiwuLpZz8aqwxs6pU6eSn7kuxzGecSv4/V4JZU0ob5FPmDChzChmOjZv3uyWL18u7xmle/TRR6Vw41Apn332WXxzxujcCwaPcol58+a5goICma8SF/mJEydkslZFUL46xYEheuYQMTB0/HhpwHxAsAzSKcwDYv+aNWuS2+LMmDFD6gwYeQ4BL5GfP39eJlkx5I6QGX3r3r27iJ73gwcPluFq3jO6hqX56quv3Ny5c93UqVPlMxODoF+/fjKMXK9ePSl8JnVx/OTJk91PP/0ko6CMBPbt21fOx2gc4mC4m9G+bdu2ybEMizNah9V59913RfgzZ86UEVO2R+d3ZAuLFy+WsqThI2jExPwdnkjMSWHuCd8HMfKZoXv2Mw9FB21o2CpW5goxuQuRUx7UByPOvEfkDPXznuuqyBlt5py8V1EDdUID4jrcF6uukY/jmfDF3CLKnnOhAfJzPaYg8Jn92YaXyIH5ERQKQ8oMIyNyKgXxMiyNhaJwfvyxdFUDhrAZsuYVi8MQNfCKFWMIm4L+/vvvZTvn4z0FS+XRSADRIwieJMyB4ZHLscAwNZVKY9LPNESuSyUj+GyC+2TIHsEhbMoMUXOvfMeDBw/Kd0fgCId5LXHrSxnrOcjHsD0ip9w4hgaklpz6gagl5ymgx3F+hbw8TRAy16COmA3JZ/JyLA0AUaMD6oH74DuRB0OUbaOn3iLHkmJZEDsVxHwKCnTOnDnSorGcFDRC5Usz92TBggViqZlVR+PAonft2lUKkOm0zH9mjguNAOGqyMmv86IROTMSuRZzLhAD5wBEzdyNcePGieVhElNU5N988030K9x1aJBKOpEfOHBAhE5CMGrVoyBGypGyRYRMkFOR00D4PwgRck6OpX+OsFXkWHe6S5w/6oihDYLzMWcIwVMP/P8QFzl1z/kQOd+J7dE+fbbgLXIKkElEfJkRI0ZI94TCpYuBZccq8M8PfW0KjMIBCpxH3qxZs2S2nQoPYVKpzINmOwVGZVDxNCasElDgXJvGxTXZRwVzDawHYLE5B8fSwKhoKiHbuiuUESJCNAgF44AIsYo0UvZjABAS34OGzXeKQgMAyg6x0zgwEuTjM+JWUVNXlCOGgLrRc+n5o/9g6nk5F42Hc3E/nEsbJPdG+XMc59PvwDWpv2zDW+SGkWuYyI3gMZEbweMlcvpg27Ztt1RO4h+18igs5JeL1OMsZZ58B6m8RG4YuYiJ3AgeE7kRPCZyI3hM5EbwmMiN4DGRG8FjIjeCx0RuBI+J3AgeE7kRPCZyI3i8RY7fZKaEGgrYyC28RR6NT46HCG5ruLbhTkXiPSsg4Cb1wAMPiPcJ4EmCUzI+nHjEqPMzCc8izsN+vItwRsZtjvOrUzNeRYZRGaokcsSJCxre3XjW45yMFzefcePSNWwAJ1p8NNnOahS4SeFxzhIfCLlRo0YialZBwKUKP018C4kOwKuukmAYvlRJ5IQoYGUEfCzbt28v/oRff/21CBK/wrjI8c/E2ZW8hI0gBAWhKfDvZMUJ0JUVaDCEN3j66aclmDwNwTAqg7fIETXe8SS6EFheLDQrGuDgTOwTlu3AA5w1aHCUBboyLO+ByPHQZ7UEhM1SHjg16yoUePsDXRecarHo/B9AuAvDqAzeIo+DaKNRoPDu1s/xfXGiYc7KI9N8hpGOKovcMLIdE7kRPCZyI3hM5EbwmMiN4DGRG8FzR0Re3UuFMyhlGLfCW+QsMU4A+fIgCqqGJybiKStNpIt6xG/oDBBVFj02HtbYMKJ4iRxxM8eEJTcI08skKuKNs50RSobpx48f7/r06SNzWRjEoVEQkJ944XxmrgrwyhyXZ555RuaxMAmL41mRgoDuPXv2lPjjBPcnHjlD/8yTIT46I6aEY+ZYhv6Z5MUIK5PDmNzFCCorU3Ac90HIYqPm4iVyiK408cUXX4gQiRGOyIk1TmD36EoTzFMhrjivt1ppghUPdKUJpgvcaqUJ4ndzDaYLxFea4B5yZaUJ487iLXJdaWLAgAES+J0ps3RFEBhdEywnAsXyYm2xyAieOSgEdadx6PwVXWmC7SNHjhRLH11O5VYrTfAE4docC4iaa9EgCGaf7StNGHcWb5Gz4gCLVzEdllUdRo0aJV2F2bNnuyFDhsgKCuyjMdAdQfjAUntYbKwqc8bp8sDo0aNltQS6F2xnaRUEyzYaE+cDZjpybZ4krHDBPrbR92cpF2AGJOfgWP4vYFYkjUEniRk1E2+RG0auYSI3gsdEbgSPl8htpQlL2ZDSjbmUh5fIDSMXMZEbwWMiN4LHRG4Ej4ncCB4TuRE8JnIjeEzkRvCYyI3gMZEbwWMiN4LHW+SEayb+ONFofRyImQNekW9oTYF595999pk4dKTj7Nmz8U235PDhwxIJWOft40KI44iiHleKnpv5/jUlxqS3yPGjJIg+hYXrGyD2+fPnS+xxotcSeB93NCCEM84NhHHGbY6EFxGOFSdOnBAfTRwbahLEXKfBq68qosR/FU8oyrJu3bri+IFBoVxx9YuC8wnlBtQHjUYDq+JmSNx33c8rDQDHkc2bN7t69erJdWgYGzdulG2h4y3yFi1ayCsCLSwslMoiZjnB93FRw70NP0zc4CjYtm3byr46depIfvLi2kaoZuKO4+7G9ppEkyZN5BUHbpytcd5esmSJiJ9w1ThoY6E7deok3lX4tCq49eEqiAcUnlD4yo4ZM6aMyIn9Tj0g9pYtW4pRwcjg0N2gQQMxRNQDVr5Zs2bitRUy3iLXAqeAH3/8cbE0xCjn8UcXhsKl0HBvwzVNA/Hjh4lj8mOPPSZ5aRCIfOHChdHT1whU5BgB3PlwHcSVEEOA1dUFCWrXri1lhUHgKQm8x90Q6481njBhghgNBZHzBODcdCtV5LgXAsfQIHilu0K3CZfDkPEWOf6dVAyPuhdeeEEqhZUl6MLwyI2LnErh9cknnxSL3bhxY3lE4utZU0WOmOnCYUUpE552S5cuFVHzhNRoBGxHwJS5giXHcvM/DoYmncgpW5y5qaO4yFlEga6QibwCeOzhPKz/SFIhLHfCZHYehVgZKgtPfqwOFYrnPCEp6MtzLK/k0X+YahI0egIi6eR//b+FJ11RUZF0Y+g3Y715UtKFiUI/GwEDztrRf+hZtoay1r425+T/II1iRn7+4SVCAhadbpGvE0KuUSmRG0YuYSI3gsdEbgSPidwIHhO5ETwmciN4vEXOz4XRn5yIYstPg1H4mYqfEkOjvDVJfYnP46HM0p2fn//SzTFhaF/hOGI/kheoD2JI6gASP0vys6Gen9/Js7V+0pVBVfEWOfMtGLYHfgP/29/+Jr93R+E3YKLahsY7H/ZyO3ftLrNt1Liv3Nz5fgNaLB7AEL5C2GsGedJVMPHZVbwK+YjwqzAqytSJjh07yvgDq2LzWzxTJhA60wMYqCPUNtsZCR0+fHhyoYRsgWjHnbu/4w4cLEhuo4F/+vkQt3rd+khOP7xFzhLgWsDMkWDkDJETypmJQsypUJEzJ4NZcVRiCBw5etS90aGz27Fzl3weNW6C+3TwkLSWtiIIaQ0MyiBORBcXM6jIKXcgbHVc5DobFLGTl0lbmpcJYCyMAEylYMgfy07dMV8m29i7L8+1bt/J5SeErgKnnNMZgEzxFjnD9oxYMpRMoWGVEDmzDokPjuhV5AzhU3m86qMz11Gh9xs4uNICBxU50xp4MjLyq5O1ovHUVeRYZcBKq8hZxUPzsvABTwPQBoBxYeRTpwXoAgiMiLJPR02zjb15+0XoH/X9pMoCB2+RM9EKwTKLjUJVkTPtluF85qqoyOna0D+MTxXNdY4cPeZGjp1QaYGDipx5I8R4Z3EB3QbMTaFyKW/+B2JVDT4zNyVuyZlmgTFRaBB6LA0EQVNnNJBFixa5goIC6ZMzKSxb2ZcQ+sQp0+ObK4W3yHXJEl4pfCwIcy+wKHRXmJhFIRIwnwqk+2LLmaQSnZimCxPwz6eyfv16mTyl5U2fmz61dj2Y06JwvHYVmavCZDny6j+nGBz2MQeGuqIBkXhfE/AWuWHkGiZyI3hM5EbweImcn5/27cuzVE46c6Z8J2QcSnbv3mOpConxGR+8RG4YuYiJ3AgeE7kRPCZyI3hM5EbwmMiN4DGRG8FjIjeCx0RuBI+J3AgeE7kRPFklcpwrcM0yjNuJt8g1rjXggRIPFkmQT0IR4xFE1FofcAMjpvakSZPEo4UgooZRVbxFTihg4mvjFY6rG25beKXg7zllyhQ3evRoCUGMSNmOpwqucbjCsboETra4eamzLa5Z+I0iaBU5HjF4lBP/HI8jPF0IsYDrlmH44i1yLDluVO3atUuKHPHh79mwYUNZGgXPciw5eQjCj38hcT9wyWrevLmch+34SM6bN08cbWk8KnL2cQ0aAE+Gzp07SyOKh74wjEyolMgBJ9h7771XRE4QfrotBI+Pi5yg7ypynJ75DLzioY53P76GrK6QTuRAMHrCNhhGZfAWOfFV4MaNGyJqHCnwAqcLQreECe2IFOcARM0iWXRHWPmA7sqgQYPkeLokNATES6Po1auXdFlwgCYPjYfzEGmKbhD9dMOoDN4iv9MQOEfFbhiVIetFTlcm9NXJjOol60VuGFXFRG4Ej4ncCB4TuRE8JnIjeLxFzgQqRh5JDPLw0x7b+H083c98/DbOb+qGcbfwFjmDO/ysR2JYHoETjZXhd94jaAZ5NMoR+dhGXkZFNdY0n30jIRlGZaiUyLHOJGACloqc9yxvzZLZxL9mO0toMypKwHem0rKyAp/Jy0APy14bRnVSKZEjZB2gSSdyXRYEsavIEbdui84b5xjDqE68RR4XZTqRY6Gx9FjzdCInL6vG0V3R7YZRXXiLnJmDUZhXzmQq/gnlPSJH3HRD6Ivzzyj9b4St+QFrT56qLEliGJngLfKK0F9bDCNbuO0iN4xsw0RuBI+XyG2lCUvZkNChD14iN4xcxERuBI+J3AgeE7kRPCZyI3hM5EbwmMiN4DGRG8FjIjeCx0RuBI+J3Ageb5HrfHH1DMIJQj2BqgJTdEeOHCnz0oHzcx2dh47j9I0bqQ7ROF1YGDmjPLxFTnzxiRMnSnRbEsLcvHlzPJs3AwcOdGvXrk06OhPSefz48RK8n0D8q1atEqdoZebMmRLeecyYMW7Dhg3J7YYRx1vkGp8cq8qKEypyQjf37t1bhF9YWCgiJXg+K0QMHjxYQjNr2GdYvny5CLhNmzbiClevXj03YsSI5H62Y8kRM0L+5JNPxK2uVq1a8vm5556T0NC8J2+zZs3ctm3bkscbhuItcmKSE0+ceOOrV69OinzZsmUSV7x+/foivp07d7qrV6+6HTt2uL///e+uX79+ssyKdjloLFhtujtYcRoIAfwVgvQT6J/tM2bMkBjoBQUFrlOnTrKf+OY4VaslJ2H5DSOOt8jVkisqciwp8VZefvll6c4sXbpU+uo0hEaNGklfOxp+on379tLfxqKPHTs2ReSsLkEjoS/OihUqcp4OwNOBgP0qckJemMiNdHiLHAFHWbFihXQ3hg8fLl0W1gVC7P379xeLj9CXLFniPvzwQ7HICh7+bKMbQn5WmdB/MoGVJXr06OHef/99yTtr1ixxoqb7AgicJ8DKlSulb06iQRlGHG+RG0auYSI3gsdEbgSPidwIHhO5ETwmciN4TORG8HiLnAGd7du3S4r+rq3oBKvyYDIWxzMaym/fDPrEo+VWBoKHMv9Fg4oyDSAaoJTBpmiAUa7LqCvTBwhaaoSJt8iZKIVQSAgEwSIeVpFA9PPnz5cIRyQaBEIiRDMzBVVIDNwwgMQ+RkbZzxwXhvw5ly7LwjkRKoNFwKBQfMkWrkm8c+6Fc65ZsyYp5Lw8Ii7tk/3AwBT7ED73w0AW98gUBK7D+Y3w8BY5I4xYYISBYObOnSviQDBEs12wYIEInMbAkDyW9cCBAzL0rsunIHIESAzzqMiJZY4gmQdDA+BaTPbatGmTXJNhfUSM+AGxMpyPUJlawOv69evLiHzLli0yHZc5MtwDDY175ljOT6PiuzCCSl4Tenh4izxuyREx6CvCQeQICWEiPkSOpVQQ+bp160R8NAy6OIgcETPpioaC1aVLoyxevFjOh+C1C0IXR99zX1h1xKogchoJ94r4VeQ6NZd7Y/ouIuc+EDz3ZoSFt8gRMdaOhGDiIkeMiJaJVwgV0aQTefSzihwrzXlpIJyba9GtYAotiUZA/1m7Lwic4xAngk0ncrXkpLjIaUTch4k8bLxFrn1gEt0G7SPrK8Km+6GzDnnVz0r8M08Eui6IF9FxLu3L81m7H1jl+EoX5KVhcA6Oj/4DyfH8E6pdEF2dThcJID/n5BiuwT35Rkw1sh9vkRtGrmEiN4LHRG4Ej5fI6ePu3PmLJUt3Nfmu5O0lcsPIRUzkRvCYyI3gMZEbwWMiN4LHRG4Ej4ncCB4TuRE8JnIjeEzkRvCYyI3gqZTImXOtLmgK88hxX1Pw2tF528adhxVBtD7wAShvnjxz8akrjsFP1qfemM+fifP63aRSIv/4448lqH4U3MsIwawQPxy/SuPOM2fOHPfOO+9IfHeiC+NVhZMLdZIOPLLmzZvnXnnlFalDjiWqcCbgeRUNuZ2NeIscz5qOHTtKwpuGL/n6669L0HwKaOrUqbKCxFNPPSUib9Cggfv0008l5PIHH3wgwfuZRaYrUeDiRoxzwjy/99578csZlaBFixbJ9ziFT5s2zf3www/uoYceErdEXciga9eu8krZU6/UI2D1iUPP9g4dOogB45U6x8+WWPFAfVHfbGvYsKHr06eP69atm3h1kZ983377rSRCcBOK+27gLfJFixaJhSARfoIbp6uilrx169aSTy25FhyiR+xPPPGE+F42bdpUCgh3NmKUs48GY1SdVq1alfk8evRo8YXV7dQZDuFYedwOifMOL774ojylESr+r4iabimfcSNE/CyeQBx6hM1xnBv/WowcUP9oYcKECfJ569at7sknn5T6ZSmcu7GImbfIWZ+H1R34clhjVoig74fFUJHjO0mrRuQqelaioEBxRiYhaJyeKSgelTQUrIFRdbDUdCGwqF26dEmKXFcJQaB/+ctfpP+NGHEOBzVICiLnqat1ib8tXRmOf+SRR+SzihwtAPWNMzlL6vB0WLhwoRg0+vlcTxc+u5N4iZwbjPa7Wb6Ef1awDIid2Cv0//jMowoHYm3RbOfxNnToUCl8Co48BP+hIHicaV6javDPIF1DBMkPABggIibQZZw9e7bU40svvSR5yafEy3/KlClSVzh6Y72pI3VYpx6BcxPh4KuvvpLPeo5hw4ZJfkKMaBcH4We9yI0w4On59ddfy3tEHDom8hpITRB2FBO5ETwmciN4TORG8JjIjeAxkRvB4y1yBgD43ZOUbqWJTP9zZ0oAgwNxiDCrMBARnfRlZEZFdZTphCrmuzBoxygl9aUrdTDIkw7i0TOox3X5fZzBv0zgfgi8Wl14i5w44IxokjRCLIM+CFKD8HPTJAqJfAwHM3wfnbnI4AQhmnVwgAKhMHXpcN5zPMPC7KPwuB7Dy7wHvYZWGgNTupRKTSZdHSEinzqiLCl7jmeQD+PFfqYDMC1DZyqSn+M5NwNPGCnEzmeWm+caNDTiwLNNrxc9nmuTh3qm/rQOuWa0fqn3ytSvt8iZUKUrM+hKE7RwCoLRMOaz8GUoaG6QYPsImvkMUZETz5z97CM/x2PZWXkCS8RQMdegoJklx8go2xk5ZV4Fx2qsdPJyD+TF8lCgNZloHSHSdHWkq4FE64hXrSOOV0FhiBAacd2ZHkBdUNYIk2MQLZa7NIzgTrkWdYDIqTOuw3W5PtfjM/VEfnSha0ixnftgEhn3p/XLNRhV5Ro0MjVymeItcm6EFqaLSsWD8MdXmuCm4kH4KQCmg/JFGdKnUMgDWHIKkgIgn4qcymLpFATNNua/EP+c89Ol4Zrs43OmXaZQuVUdUY5AHSHan3766ZZ1RAPRWPAIn/qg/BE4Vp66of4QKVD2gMjJh1VnOgDnRKA0GEQKiJZzcw2ujQVH5Nwf98s5aEB6v3oM9c51fLs23iL3WWmCL4IY4wWINeZL8CSgQGiZel4sua4wx6SgqMh1O9aAx50urcK1eApwHQqBSqjJ3KqOVDSZ1BHly3HUDfNTVOQYFP0/CQNFuVPeeiwCjVpaFTl1zX1pXQMT8+japBM51ydftIuEHtCA75PaW+QVrTRBX5oCoRApACysfo6eQ2E7+zmeL6x9Nd7T+vlCUU8VCklXjuDcXIPjKRy213SBQ7SOELmWX7rVQG5VR0DZs5/tuhoIYuW8gOgxPjQS/d+K6+lyN8Cx6pXENXRFQNB/TDkn19L7i678odcH6hZd+OItcsMAfXLmAiZyI3hM5EbweImcPvj27Tss3cV05Ej5TsMlJZdSjgktnTtXdlXuivASuWHkIiZyI3hM5EbwmMiN4DGRG8FjIjeCx0RuBI+J3AgeE7kRPCZyI3hM5EbwVErkTGJn4n103vDthLnJeLcwab68AJF4F5W3gkJlYO6yerkAc9rTLSYwa9YsmfOsMNGfif3RY6MwDxonBb4X87txBsAZoSpwXzrXGkeG6P2UB/eK505NwVvkhOolNjmuU4QFBia/6wR4JsYD4kOgfKZCmSjPewLv63sEpD6FUf9PYmRPnz5dgscTuxxwBNA8nJcJ9FwfwVC5t8tZAoeAP/zhD0lHg379+rnmzZvL+4sXLyYn9hOqmO+lXiqIl4Y/efJk+cz9RI0AEWIJtIlb4AsvvCCiJD44+bQhR78j5RNdBgXnhPh3JBw20WaBMMvqLAy8cgyveg1eKSsaKEH5ox48XCt6bDov/1zFW+QtW7ZMvsc/EJclhEuioolfToESyhlPnccff1xC9nIc/pv//Oc/XX5+vnv00UfduHHjJHY1+aPnVVEBVuf777+XMMAICwtESOJBgwa5hx56SETHNQn6rw2iKiDyJk2aSENGJJybVRO4D96zUgZPEO6FBtC4cWPxjOGzipyA89yfxuwGRI7l5rvynfGVJDh937593YABA9x3330noa2J742Frl+/vpQbDYL74Fx8Rw2YD8QTp1zwtVSR6zUJlo9Tw//+9z8Jk/3cc8+5wYMHu3bt2onIaSCsCDJjxgwpX0I4v/rqq2J4KFeMTCh4i1wDuQOWCmuKFcfitG3bVgqZimRNIUSuQfjZBxroXbcjTHz9ouvZUNgK19DlQRAG+fQeWA4EB1dWr0Bw0eMqCyLnSYKgieXNE4t7Jb42DrRYQj7zPXki0XCJzc1KCyry//znP3I/Tz/9dNI6InLEjShpJDR0LDllhfB0FQiEifC1fDgvomelDs4ZNQaUJedv1KiRlC8i1+M4p54LtPw5HyLne+lnGhLnplzxsdW8oeAtclo8jsg8qqlorA1Cw8MeAbKNxzoVkE7kKlDdjqf+n/70p6TfIGCF8AVECAT0J2EtWXuGuNpYIfqiLP+BkyznQiy36g/7wH2wVg7CrVOnjjQyvsvEiROlq7F3714pA74n1x41apSEXoiKnCcRguN/F0UtucJ3o4GryPmOuJQhQKyrLk/CK90KXrHo0e+oBoP/Xf74xz/KNWnolA2rdkRFzjX0fFyD++YeeCqyXAp5MSJ0U2q8yCnA4cOHixXCaRkR8JmVBbBsiODDDz+UvjuFjjUEtRyIhVAEuh1U8ArH0WB4vNJg9DPCQxRcAyGy0gX3gzXF+kajb1UWnkrqnY6ogXtFYKyyQaNmH9+H67O0DPz4448iGgwADRdx0e9V8EanUSh0C+jeAeeKf0fOB/pKt5CnY/Q7RsuQcqUsCByEVaa7wTWIdQJa/pyP0BDk5x75vnptvh9PKp40IeEt8tsNhUvFGEZ1cddFbhjVjYncCB4TuRE8JnIjeEzkRvCYyI3gqbLI+V2VgRp+z+b3Xd4zL0NH+nIRVhVmaJ7BGX5H5mdOEr8n8zs1Q+v8Ps73ZYSQ36UZxqcsGAAbMmRIMrwxv/WTOA8jpvy+zxgDv/Xz+z4DQlWdqGWUT6VEHl0GhVEynQmnE3uobLbnIoiPQR6+C4L85ptvJPg8YYwZKWTgi4Eh5rYwuINgdfYfomf4XydtEbubPISfZiSUAR3CHSuMcgLH6CQt4/bjLXJG8xjCR+jMmOM9I31MMwUqmBHNyix7kQ0wRUFH/Bi+5/syzM1cFg3+zigvc1B4xUozwYqJW0x1ePbZZ+WzrjGPsDmWaQpYbo5jiJ0nHnNvaExMdcjlJ1+24y1yJmIhYioFC6ZzrZkdiIUjMbyfq5ac+SZYbECQWGBmWzLTj6m/WFysNyIFnWJM94Zy4VWP1XjeDOnTvdEuHWXF8D1dH54MzHI0qg9vkUN0OQssOJOaqDgsO6+sLoDlykUQJlNQscRMqqLPjbWmz03fmf4282RmzpwpXRH650wc69SpkzRuuh7sIz8Tt9jP8bwnDR06VI6nC0O5cT7yG9VHpUQeBcuEuLVPqSuB5TJ0uaJLi+DVow4LzAhkH4nvzZMLsauzA/+f8JntwHFRZwfOxcQ24Kmo/Xej+qiyyA0j2zGRG8HjJXL+icL3MZdTRc6+dDvix1jKrlRRHcbxEjn9zYKCQzmdKvLup78cP8ZSdqX4KnUV4SVyw8hFTORG8JjIjeAxkRvBYyI3gsdEbgSPidwIHhO5ETwmciN4TORG8JjIjeDxFvmiRYtk4j8p3QoM6SDqKnHECQoaBX/KuAcRwSijjr146USdNAzDF2+REx8bwZKYKIMHEH6efMbNC291wOuF7TgP4BbGxCiNM64QuF+deYHj8bLBNQzni40bN0qEXLz/8SmlATADje34UwLb8bLBaYNr4KOpq0EYBniLnPjXhGXGZxFR1apVS8IBP/zww7JiASsa4O3Cqgn4ROL+hUsYnjRRkePVz3ZczfB9JC/+kcTLRuTdu3eXWOT16tUTkbMyBdFvOS8hkYkBToMisD33Q5hl4poT0D/acAzDW+RYcnX/wtriiQ4auB2hMecXP0ZileCkm07kBIEnLjmB5ImLjY8kYidmNyLXAPPEJUHkGpS+du3aEueE6+KKxnXwqidiADG4cSAOaSkQo+p4ixyhElqBRLiGdCKn24Fo6XoQfiGdyHnP3G38H7HKWGO1/IicNXCId/Lyyy+XETnXw3OeNXbo0xMUH+uNszBB6unSsDyIYSjeIkdgrHBAIiwD4RpAXwmzQD8cL3f6x/SX+QeVrg2rMAD9ZxqCwrE8FbDENB4aBF0eAvsQ1AdvHT0/1p7Go8cT14RuEufHSZilSGgUhqF4i9wwcg0TuRE8JnIjeEzkRvCYyI3gMZEbwXPbRW5xttNj5XL3uK0iJ9CnhjS+FfyeTSRcRkWByVdM0mIbv6/zGzeJQSI+xyPkMleFQShgMIm8XJOIsiydTdLf6pk/E10FGaHxezuvnIe8DB7xmzzTDHivaMx1XQ6d83MfXMt3whjTD7hnDfNs3Fm8RU4FIxyN+qoRW3lVkSMaxMfgDCAURMOADwM7nEMnWJEP4SNKXjV4P5O6yM/gj85URNQIhu1AmGhAjLqNCVyck1eO1TyASBnMilpVzs1nGl10VmV0BQ3ujQbBK0Lle3IfTASjsWij5D7Yx/fg+2pj5PuqyPkO7OM998x5deUOGhr7ogsY8B3YpmXJd+AzjY5rcl7OwTWi5WD8hrfIsZKIgoKmAhhaBwSiIuc9YqZCqbio8IHtKnIaAPsZwdRwx9FQyVxLRc4rFYpwOZ+KkuM1XDSCiYaOVpGzDYFwjIqc+48+JaIiRzA0ZhWwio375TvxisAQJEmfJhzHfq6nDZUnhIqcJwn5KAMalp6Xffok0acHsI37pVGROI5zUu4knQmqZaqzQI3f8Ba5ioZKozJVGFGRY8nYTwUhWCqDitMpsFGRU8nAcTQMzhldkygqcgSEhUbgKlhQy0Yj0Uan6P1qA2GarlpFtkWDR+r5OI82FL4D96MLgOkTS7sgCBWB8v04jnPSOLiGClpFTl7unfNwL2wj8b0oG71+1Brr/bON47S82M531W4Z56bs9Olh/Ia3yLG4VLpadCqQSmVeioo82t9VS8ZnfQxHRU63R/MiCOa7IFrtS0dFrt0PEtfiWPKqOKINSYl2V0AtORaQY+P7gP0IiP18FwStllktPCK+lcg5hnwszULDjVpyrsH35Rx0MbgOZaddFfbxSvlwrJYP+TAefB/OzQxME3lmeIucQo7/UhD/nG5b/HOU8vbFIW80v8+xvui5tZ9Pg0VUmYQOLu++yrv/+Od02+KfjfLxFnlNXf4DgWN5SZmI3MgevEVuGLmGl8hDCMJvKfdTtQbhpy949eo1S5buavL9n8RL5IaRi5jIjeAxkRvBYyI3gsdEbgSPidwIHhO5ETwmciN4TORG8JjIjeAxkRvB4y1ynCYIuUzUWYJr3k6IRw7jx4+P7TGMyuMt8tdeey05C4yA/DgREIecGOFEoMWzh9UhCKhPRFu24a2DgEnEFiesM54tBNUn3PKQIUMkOu2DDz4onjPELscrhnMS9hnPmHHjxrlBgwbJsXgQGUameItcg+MDscgRJ7HBmRlGOGfiiCP85cuXS4hlhI1f5EcffSQB8xEsy6xwDK+sUlGnTh1xStAY5DwpvvjiC/HHxOWNGOcE88e9iwaxefPm5D0YRkV4ixwBavyQJk2aiKUeMWKEfKYro0LFXQzR06XBH1JFjgMyvpKsIPHmm2+KTyRPBKxzVOT9+/dPeruTD5Hj44iVX79+fenNGEYGeIscB1xWlejataubP3++WHC6FD179pQg+iS6GSxrgsMyy6+wDhArSSDyt99+W0SMwy3WnH0vvviiCBgh4+Het29fceSla9KtWzeJlUL3h4bAChM4URtGpniLvCogcg1KZBh3ijsqcpyA7Z9G405zR0VuGHcDE7kRPCZyI3hM5EbwmMiN4DGRG1kDYy4bft7k4lFVDhYccscLSyMRVwYTuZE1MB2kz4CBbsLkqUmh5x846Fq37+zy9udHcvphIjeyCoKp9hkwyI2fNNXtzz/g3ujQ2e3L2x/P5oWJ3Mg6mK/Ud8BnrmmrN6oscDCRG1kJQj92m5aGMZEbwWMiN4LHRG4Ej5fIS0ouue3bd1iydFcTOvTBS+SGkYuYyI3gMZEbwWMiN4LHRG4Ej4ncCB4TuRE8JnIjeEzkRvCYyI3gMZEbwVMtIidUsw/49jF/2Afyl7fGOrEWy9tfVbg+wUuN7Mdb5ATeJJhnly5dJCJtHAJ/+gbRJz4ix/lAlNzjt5hUf/HiRbnHiiAiL0ybNs0rfB2Nh0i7ROzdsGFDfLeRZXiLnCD8QMRahM4rgTwnTZoklu2BBx6QyLaHDh0S4RKjvKioSALoz5o1y40dO9Z9+eWXIg72z507N0XkS5culUD+iPDChQsS5ZbjESIRbd977z3XoEEDETlx0MlLwH+F8+fl5UmkXBolYaAvXbrkvv/+eznP0KFDZf/9998vCwFwX/gWEkudc7EQAJF0x4wZI1F3WTCA78Y9shgADreIHLGz4oaR3XiLnFjiCIXwzfPmzXNt2rSRWOSIAeHwGVq0aCHiJeY4oiE/QnrhhRdEfIibhvDyyy+XETndABoSQkJkhIHOz893q1evdsOHD3fNmzeXlS4QF8c3bdpU4p+zXWnVqpUcz30SsP+XX35xffr0cc2aNZNGw8oYNCCEqoLdtm2brHpBQ+I7TpkyRSz1smXLpGEuWbLEFRQUSChqRM8xoDHVjezFW+RUMis+UMlU9jPPPCNiJGFZETPUrVs3uR2RY42BVSMAkbLKRMOGDcuInAD/PCFAr4PwEDJx0Gk8QHcF8dauXVuuMX36dNkO+rQhvjmipvvC9fRYFgeYM2eONEjtevD0mTp1quznMyJfsWKF27RpkzQungZ0axo3biz3oiIn1rqR3XiLXAXEsihvvfWWPOIJrE8fmHV+VOQE3Ue4PP4RcVzkCKx3797uoYceSnZtlB49eshKFFhfhEbAf87LyhME7ueciJtG1blzZ8nLChQKn/nHE+vM9RA7axmxMgZW/KWXXpIG1L17d1lIAMHSGBAs1/z8889F8FGRc066SY888ogsRKAi59xGduMt8nRgaXnsx6FbUd4vHLrAVjro0ih0YejqKPHjonkBSztgwAB5z3H6yw2WnPd6r9xb/B/O+LmjxPfxvwPdLiO7uS0iz0b4RzTewFiI63ZiC3TlBsGK3DAUE7kRPCZyI3hM5EbwmMiN4PEWOT+jMbhCiv6sdyepaHJWRXDv8Z8OfWAqg5E7eIt85cqVMoJJYk5KHFZUrm4Y4mcKgS+M0B47dkwGcxj8qSxc38gdvEW+atUqseY60LN48WKZzMRvxowyMmTO0Pz27dtlG42BEU0mUqkF3LhxozwF2E9DYR4JE7YYxGGEkfMyH+bs2bMy6hj9PZrrkkdnEHJN3q9Zs0ZGQPfu3Sv5Ge1k6XIaJaOdzDvhd3LOx+AR52Y7gtXBJKw75+L+OBezLDkXn7kn8vP7+8KFCyUvn9evXy+Nx8hevEWOSJgJSEKoiAv0FVEhAOaCYNUXLVokUwCiy40jehKCQozMP0dEnINtvN+9e7eIJ2412c6MQARLY+J6wDXYznwYrsvcFBoNoud+ECoNQp8ANDjOzX3pCCgWXueh0wj02jRUGh0NF9hOA+B+aeA0OiN78RY5llxBDGpR9ZVGQJ+ZfLzSLYiLnOMYDkdwiFaXI+ccWEeOQ6jpRM4TAdExjwVxITTyIzpEzqxBzkW/++TJkyJy9sdFzj7m2iBS3gP3yL3SeLknbUA0RLo5nAP4juRjdiTX4jxG9uItckSJFSVhDdVxQl8RDZYZq8ijnm4CIsIyRqER6JwXugCcD7HQxaDrwmcaSNQxg64K51W4F6w5+REeIkWciB9xs49uB6JVQdKIuCbzyxEteXVuC40Pa802rq3dJ84FNC6+E08x8iJ+9vt6Qhl3Fm+R3w4QI43hdoCoaST65DCMOHdF5OlmLBpGdXFXRG4YdxIvkdOP3bXrF0uW7mpChz54idwwchETuRE8JnIjeEzkRvCYyI3gMZEbwWMiN4LHRG4ET6VEzmQrJlKVl9I5VMSJBwXKhEyPiQYRuhWZnisOE74q4xUVDXRU3cQDMmUKE8/iQZRuFxUFm6ou7iH0mW8inBqxBctLhFGLH0dQ0Hr16iU///Wvf03JU1G69957U7alS0899ZREzIpvj6b77rsvZVsmiaClpPj2dIngoQQg5T1xFOvXr5+SpzrSc889J+Hw4tsrSh06dHD/+te/UrbfjkQUYUILxrdXd7onAX8sWQo5pWywZCm0lLLBkqXQUsoGS7dI/D+BZ9LdTtxH/N4slZtSNli6Rfrd737nfv/739/1xH3E781SuSllgyVLoaWUDZYsBZX+PwbKdQiBMp83AAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 124,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${pavaccine.package.tnc.2}"
                ],
                "line": 125
              },
              {
                "cells": [
                  "${pavaccine.package.tnc.2}"
                ],
                "line": 126
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "Verify the Terms and Conditions can be accepted in Free PA with COVID+Vaccine Protection screen",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-terms-and-conditions-can-be-accepted-in-free-pa-with-covid+vaccine-protection-screen",
        "after": [
          {
            "result": {
              "duration": 58000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2724457000,
              "status": "passed"
            },
            "line": 129,
            "name": "User accept the term and conditions in PRU Shoppe Screen",
            "match": {
              "location": "PruShoppeSteps.acceptGYRTTerms()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 131,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 45300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4440753200,
              "status": "passed"
            },
            "line": 132,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 134,
        "name": "Verify the presence of PROCEED button",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-presence-of-proceed-button",
        "after": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 461225200,
              "status": "passed"
            },
            "line": 135,
            "name": "I verify proceed button is displayed on pru shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyProceedBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 137,
        "name": "Verify the validation error messages on click of PROCEED button",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-the-validation-error-messages-on-click-of-proceed-button",
        "after": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 479031300,
              "status": "passed"
            },
            "line": 138,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2815268700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 139,
                "value": "#  And I verify following error message \"${ph.prushoppe.validation.id.image}\" is displayed"
              }
            ],
            "line": 140,
            "name": "I verify the validation error message is displayed for following field on the Pru Shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ID Number",
                  "${ph.prushoppe.validation.id}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "Middle Name",
                  "${ph.prushoppe.validation.middlename}"
                ],
                "line": 142
              },
              {
                "cells": [
                  "Place of Birth",
                  "${ph.prushoppe.validation.pob}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "City/Province",
                  "${ph.prushoppe.validation.city}"
                ],
                "line": 144
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4576606300,
              "status": "passed"
            },
            "line": 145,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 491590100,
              "status": "passed"
            },
            "line": 146,
            "name": "I verify the validation error message is displayed for following field on the Pru Shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Occupation",
                  "${ph.prushoppe.validation.ocptn}"
                ],
                "line": 147
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify image of unauthorised ID not accepted",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-image-of-unauthorised-id-not-accepted",
        "after": [
          {
            "result": {
              "duration": 47200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3926102300,
              "status": "passed"
            },
            "line": 150,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3994372600,
              "status": "passed"
            },
            "line": 151,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3922811300,
              "status": "passed"
            },
            "line": 152,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4574104200,
              "status": "passed"
            },
            "line": 153,
            "name": "user click on Scan Your ID link",
            "match": {
              "location": "PruShoppeSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005024500,
              "status": "passed"
            },
            "line": 154,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4226643700,
              "status": "passed"
            },
            "line": 155,
            "name": "user selects Camera option",
            "match": {
              "location": "PruShoppeSteps.pickCamera()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9894382600,
              "status": "passed"
            },
            "line": 156,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10270092000,
              "status": "passed"
            },
            "line": 157,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5015002100,
              "status": "passed"
            },
            "line": 158,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 479317300,
              "status": "passed"
            },
            "line": 159,
            "name": "I verify following error message \"${ph.prushoppe.validation.id.image}\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "${ph.prushoppe.validation.id.image}",
                  "offset": 34
                }
              ],
              "location": "PruShoppeSteps.validateErrorTxt(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 161,
        "name": "Verify user can enter other mandatory fields",
        "description": "",
        "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app;verify-user-can-enter-other-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14075337600,
              "status": "passed"
            },
            "line": 162,
            "name": "user enters your details in pru shoppe protection screen",
            "match": {
              "location": "PruShoppeSteps.enterYourDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ID Number",
                  "TST5689"
                ],
                "line": 163
              },
              {
                "cells": [
                  "Middle Name",
                  "Tst Name"
                ],
                "line": 164
              },
              {
                "cells": [
                  "Place of Birth",
                  "Tst Place"
                ],
                "line": 165
              },
              {
                "cells": [
                  "Address",
                  "Tst Address"
                ],
                "line": 166
              },
              {
                "cells": [
                  "City/Province",
                  "Tst City"
                ],
                "line": 167
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4584284200,
              "status": "passed"
            },
            "line": 168,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3597634300,
              "status": "passed"
            },
            "line": 169,
            "name": "user enters your details in pru shoppe protection screen",
            "match": {
              "location": "PruShoppeSteps.enterYourDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Occupation",
                  "${ph.prushoppe.ocptn.student}"
                ],
                "line": 170
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Free PA with COVID+ Vaccine Protection functionality on one pulse App",
    "description": "",
    "id": "verify-free-pa-with-covid+-vaccine-protection-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/prushoppee/Pru_Free_PAwithCOVIDVaccine.feature",
    "tags": [
      {
        "line": 1,
        "name": "@ph_pa_covidvaccine"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@prushoppePH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 35400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 57900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 904500,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11712004300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001749200,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14532938500,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1998667300,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22973839000,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007319300,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4608369300,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005691300,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7526566200,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 345991900,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34086558400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003691700,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65150655800,
              "status": "passed"
            },
            "line": 23,
            "name": "I click skip button for PH LBU registration flow",
            "match": {
              "location": "RegistrationSteps.iClickSkipButtonPH()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015207000,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 26,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 46300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10970047100,
              "status": "passed"
            },
            "line": 28,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15534851700,
              "status": "passed"
            },
            "line": 29,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22369554500,
              "status": "passed"
            },
            "line": 30,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000566600,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008438400,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 33,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 45800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 44400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3570618500,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10564187700,
              "status": "passed"
            },
            "line": 36,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 37,
                    "value": "#      | UserName | pulse56823065633@mailsac.com |"
                  }
                ],
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 39
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 350524200,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4999864300,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10377513100,
              "status": "passed"
            },
            "line": 42,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14780907400,
              "status": "passed"
            },
            "line": 43,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004599400,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 46,
            "value": "#  Scenario: Launch the app and select the country as per specified lbu"
          },
          {
            "line": 47,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 48,
            "value": "#    And user click on \"CONTINUE WITH EMAIL\" with Email button"
          },
          {
            "line": 49,
            "value": "#    Then I change the country as required on registration page"
          },
          {
            "line": 50,
            "value": "#    Then I wait for 5 sec"
          },
          {
            "line": 51,
            "value": "#    And I click the Sign in link"
          },
          {
            "line": 52,
            "value": "#"
          },
          {
            "line": 53,
            "value": "#  Scenario: login to the app with correct credentials using \"Continue with Email\""
          },
          {
            "line": 54,
            "value": "#    Given I select the language option on toggle bar as required on login page"
          },
          {
            "line": 55,
            "value": "#    When user enters credentials"
          },
          {
            "line": 56,
            "value": "#      | UserName | pulse56823065633@mailsac.com |"
          },
          {
            "line": 57,
            "value": "#      | Password | Pas$1234                     |"
          },
          {
            "line": 58,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 59,
            "value": "#    And I wait for 5 sec"
          },
          {
            "line": 60,
            "value": "#    And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\""
          },
          {
            "line": 61,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 62,
            "value": "#    And I wait for 5 sec"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "Navigate to PRU Shoppe screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;navigate-to-pru-shoppe-screen",
        "after": [
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12376303700,
              "status": "passed"
            },
            "line": 65,
            "name": "I click on pru shoppe button on the home page",
            "match": {
              "location": "PruShoppeSteps.navigateToPruShoppeHomePage()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify first time User are presented with T\u0026C to proceed to the Pru Shoppe",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-first-time-user-are-presented-with-t\u0026c-to-proceed-to-the-pru-shoppe",
        "after": [
          {
            "result": {
              "duration": 41500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5001114200,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272562600,
              "status": "passed"
            },
            "line": 70,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to navigate to GYRT tile",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-gyrt-tile",
        "after": [
          {
            "result": {
              "duration": 122500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5007424800,
              "status": "passed"
            },
            "line": 73,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1389227900,
              "status": "passed"
            },
            "line": 74,
            "name": "I click on pru GYRT tile on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.navigateToGYRT()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008624300,
              "status": "passed"
            },
            "line": 75,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify the GYRT coverage details and conditions are listed above Show More link",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-gyrt-coverage-details-and-conditions-are-listed-above-show-more-link",
        "after": [
          {
            "result": {
              "duration": 36000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2767744100,
              "status": "passed"
            },
            "line": 78,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${gyrtpackage.text}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${gyrtpackage.info.1}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${gyrtpackage.info.2}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${gyrtpackage.info.3.1}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${gyrtpackage.info.3.2}"
                ],
                "line": 83
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify the  Show More link is clickable in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the--show-more-link-is-clickable-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 34400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12671212700,
              "status": "passed"
            },
            "line": 87,
            "name": "user click on following button \"${show.more.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.more.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the GYRT coverage details and conditions are listed on click Show More link",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-gyrt-coverage-details-and-conditions-are-listed-on-click-show-more-link",
        "after": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1216224800,
              "status": "passed"
            },
            "line": 90,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${gyrtpackage.info.4}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${gyrtpackage.info.5}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${gyrtpackage.info.6}"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 95,
        "name": "Verify the  Show Less link is clickable in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the--show-less-link-is-clickable-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 42700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13943707900,
              "status": "passed"
            },
            "line": 96,
            "name": "user click on following button \"${show.less.text}\" on prushoppe screen",
            "match": {
              "arguments": [
                {
                  "val": "${show.less.text}",
                  "offset": 32
                }
              ],
              "location": "PruShoppeSteps.clickButtonOnPrushoppeScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "Verify the Your Details section in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-your-details-section-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 50200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 868947600,
              "status": "passed"
            },
            "line": 99,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${your.details.text}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "${scan.your.id.text}"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 102,
            "value": "#      | ${allowed.id.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "Verify all the field headers in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-all-the-field-headers-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2781398200,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${id.no.text}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${firstname.text}"
                ],
                "line": 107
              },
              {
                "cells": [
                  "${middlename.text}"
                ],
                "line": 108
              },
              {
                "cells": [
                  "${lastname.text}"
                ],
                "line": 109
              },
              {
                "cells": [
                  "${prushoppe.disease.gender.text}"
                ],
                "line": 110
              },
              {
                "cells": [
                  "${prushoppe.disease.dob}"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4605915900,
              "status": "passed"
            },
            "line": 114,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 116,
        "name": "Verify User should be able to see the fields in Your Details section",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-fields-in-your-details-section",
        "after": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5885625800,
              "status": "passed"
            },
            "line": 117,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${ph.nationality}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "${ph.placeofbirth}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "${ph.proshoppe.address}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "${ph.proshoppe.city}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "${ph.proshoppe.country.code}"
                ],
                "line": 122
              },
              {
                "cells": [
                  "${ph.email.address}"
                ],
                "line": 123
              },
              {
                "cells": [
                  "${ph.occptn}"
                ],
                "line": 124
              },
              {
                "cells": [
                  "${ph.mobile.phone.number}"
                ],
                "line": 125
              },
              {
                "cells": [
                  "${ph.referral.code}"
                ],
                "line": 126
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 128,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 41300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4570530400,
              "status": "passed"
            },
            "line": 129,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 131,
        "name": "Verify the Terms and Conditions text in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-terms-and-conditions-text-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6020088100,
              "status": "passed"
            },
            "line": 132,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${gyrtpackage.tnc.1.1}"
                ],
                "line": 133
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.2}"
                ],
                "line": 134
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.3}"
                ],
                "line": 135
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.4}"
                ],
                "line": 136
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.5}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.6}"
                ],
                "line": 138
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.7}"
                ],
                "line": 139
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.1.8}"
                ],
                "line": 140
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.2.1}"
                ],
                "line": 141
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.2.2}"
                ],
                "line": 142
              },
              {
                "cells": [
                  "${gyrtpackage.tnc.2.3}"
                ],
                "line": 143
              },
              {
                "comments": [
                  {
                    "line": 144,
                    "value": "#      | ${gyrtpackage.tnc.2.4} |"
                  }
                ],
                "cells": [
                  "${gyrtpackage.tnc.2.5}"
                ],
                "line": 145
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 147,
        "name": "Verify the Terms and Conditions can be accepted in GYRT screen",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-terms-and-conditions-can-be-accepted-in-gyrt-screen",
        "after": [
          {
            "result": {
              "duration": 47700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2483333500,
              "status": "passed"
            },
            "line": 148,
            "name": "User accept the term and conditions in PRU Shoppe Screen",
            "match": {
              "location": "PruShoppeSteps.acceptGYRTTerms()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 150,
        "name": "Scroll down for further validation",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;scroll-down-for-further-validation",
        "after": [
          {
            "result": {
              "duration": 34500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4520132900,
              "status": "passed"
            },
            "line": 151,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 153,
        "name": "Verify the presence of PROCEED button",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-presence-of-proceed-button",
        "after": [
          {
            "result": {
              "duration": 56800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 434751800,
              "status": "passed"
            },
            "line": 154,
            "name": "I verify proceed button is displayed on pru shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyProceedBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 58100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Verify the validation error messages on click of PROCEED button",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-the-validation-error-messages-on-click-of-proceed-button",
        "after": [
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 441073800,
              "status": "passed"
            },
            "line": 157,
            "name": "I click on Proceed button on prushoppe screen",
            "match": {
              "location": "PruShoppeSteps.clickOnProceedBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4044900400,
              "status": "passed"
            },
            "line": 158,
            "name": "I verify the validation error message is displayed for following field on the Pru Shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ID Number",
                  "${ph.prushoppe.validation.id}"
                ],
                "line": 159
              },
              {
                "cells": [
                  "Middle Name",
                  "${ph.prushoppe.validation.middlename}"
                ],
                "line": 160
              },
              {
                "cells": [
                  "Place of Birth",
                  "${ph.prushoppe.validation.pob}"
                ],
                "line": 161
              },
              {
                "cells": [
                  "City/Province",
                  "${ph.prushoppe.validation.city}"
                ],
                "line": 162
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4583418900,
              "status": "passed"
            },
            "line": 163,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1142570100,
              "status": "passed"
            },
            "line": 164,
            "name": "I verify the validation error message is displayed for following field on the Pru Shoppe screen",
            "match": {
              "location": "PruShoppeSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Occupation",
                  "${ph.prushoppe.validation.ocptn}"
                ],
                "line": 165
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 167,
        "name": "Verify image of unauthorised ID not accepted",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-image-of-unauthorised-id-not-accepted",
        "after": [
          {
            "result": {
              "duration": 48000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3942632400,
              "status": "passed"
            },
            "line": 168,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3981562000,
              "status": "passed"
            },
            "line": 169,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3938846400,
              "status": "passed"
            },
            "line": 170,
            "name": "I scroll up",
            "match": {
              "location": "BaseSteps.scrollUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4617567900,
              "status": "passed"
            },
            "line": 171,
            "name": "user click on Scan Your ID link",
            "match": {
              "location": "PruShoppeSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2004769100,
              "status": "passed"
            },
            "line": 172,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4244935200,
              "status": "passed"
            },
            "line": 173,
            "name": "user selects Camera option",
            "match": {
              "location": "PruShoppeSteps.pickCamera()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9578807400,
              "status": "passed"
            },
            "line": 174,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10486840400,
              "status": "passed"
            },
            "line": 175,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5014338500,
              "status": "passed"
            },
            "line": 176,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 415103100,
              "status": "passed"
            },
            "line": 177,
            "name": "I verify following error message \"${ph.prushoppe.validation.id.image}\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "${ph.prushoppe.validation.id.image}",
                  "offset": 34
                }
              ],
              "location": "PruShoppeSteps.validateErrorTxt(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify user can enter other mandatory fields",
        "description": "",
        "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app;verify-user-can-enter-other-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 145700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13153597100,
              "status": "passed"
            },
            "line": 180,
            "name": "user enters your details in pru shoppe protection screen",
            "match": {
              "location": "PruShoppeSteps.enterYourDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ID Number",
                  "TST5689"
                ],
                "line": 181
              },
              {
                "cells": [
                  "Middle Name",
                  "Tst Name"
                ],
                "line": 182
              },
              {
                "cells": [
                  "Place of Birth",
                  "Tst Place"
                ],
                "line": 183
              },
              {
                "cells": [
                  "Address",
                  "Tst Address"
                ],
                "line": 184
              },
              {
                "cells": [
                  "City/Province",
                  "Tst City"
                ],
                "line": 185
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4573087500,
              "status": "passed"
            },
            "line": 186,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2017698100,
              "status": "passed"
            },
            "line": 187,
            "name": "user enters your details in pru shoppe protection screen",
            "match": {
              "location": "PruShoppeSteps.enterYourDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Occupation",
                  "${ph.prushoppe.ocptn.student}"
                ],
                "line": 188
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Group Yearly Renewable Term Insurance(GYRT) functionality on one pulse App",
    "description": "",
    "id": "verify-group-yearly-renewable-term-insurance(gyrt)-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/prushoppee/Pru_Group Yearly Renewable Term Insurance(GYRT).feature",
    "tags": [
      {
        "line": 1,
        "name": "@ph_gyrt"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@prushoppePH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify that No linked policies information message is displayed",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-no-linked-policies-information-message-is-displayed",
        "after": [
          {
            "result": {
              "duration": 12772100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10768615600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 303300,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8804997800,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10691057600,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 343551600,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10015076800,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30880308600,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6488626600,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38121300,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 7b407fce-338e-4f5b-adf7-3e0112caf90e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027My\u0027]/following::android.widget.TextView[@text\u003d\u0027Policies\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.MyPoliciesScreen.clickMyPolicies(MyPoliciesScreen.java:79)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyPolicySteps.iClicksOnIconInHomeScreen(MyPolicySteps.java:26)\r\n\tat ✽.When I clicks on \"${prushoppe.policies.txt}\" icon in Home screen(features/ph/mypolicies/MyPolicies.feature:15)\r\n",
              "status": "failed"
            },
            "line": 15,
            "name": "I clicks on \"${prushoppe.policies.txt}\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "${prushoppe.policies.txt}",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 16,
                "value": "#    And I clicks on Proceed button to accept the terms and conditions"
              }
            ],
            "line": 17,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "User can see the list of linked policies",
            "match": {
              "location": "MyPolicySteps.userCanSeeTheListOfLinkedPolicies()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify that user can access his policies from Home screen",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-user-can-access-his-policies-from-home-screen",
        "after": [
          {
            "result": {
              "duration": 43200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9351649300,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7285383500,
              "status": "passed"
            },
            "line": 22,
            "name": "user click on \"${continue.with.google.text}\" with Google button",
            "match": {
              "arguments": [
                {
                  "val": "${continue.with.google.text}",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickcontinuewithGoogle_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15941530100,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the \"Email\"  in Continue with Gmail",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterEmail_Id(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${login.id.continue.with.google}"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Password",
                  "pulsesgqa@123"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9356739300,
              "status": "passed"
            },
            "line": 26,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2511924100,
              "status": "passed"
            },
            "line": 27,
            "name": "I clicks on \"${my.policies.textchange}\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.policies.textchange}",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1633971200,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Proceed button to accept the terms and conditions",
            "match": {
              "location": "MyPolicySteps.iClicksOnProceedButtonToAcceptTheTermsAndConditions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2964124000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    Then User can see the list of linked policies"
              }
            ],
            "line": 30,
            "name": "Verify the policy details on my policies home screen",
            "match": {
              "location": "MyPolicySteps.verifyPolicyDetailsOnPolicyHomeScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 731686500,
              "status": "passed"
            },
            "line": 31,
            "name": "User clicks on \"${policydetails.inforce.txt}\" button to access the PruSafe COVID Vaccine",
            "match": {
              "arguments": [
                {
                  "val": "${policydetails.inforce.txt}",
                  "offset": 16
                }
              ],
              "location": "MyPolicySteps.userClicksOnButtonToAccessThePruSafeCOVIDVaccine(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5001671600,
              "status": "passed"
            },
            "line": 32,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 728975100,
              "status": "passed"
            },
            "line": 33,
            "name": "User will be landed in Policy Info screen",
            "match": {
              "location": "MyPolicySteps.userWillBeLandedInPolicyInfoScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 46649819800,
              "status": "passed"
            },
            "line": 34,
            "name": "Verify the Policy Info screen UI",
            "match": {
              "location": "MyPolicySteps.verifyThePolicyInfoScreenUI()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 742933000,
              "status": "passed"
            },
            "line": 35,
            "name": "User clicks on \"${policydetails.benefits.investment.txt}\" tab",
            "match": {
              "arguments": [
                {
                  "val": "${policydetails.benefits.investment.txt}",
                  "offset": 16
                }
              ],
              "location": "MyPolicySteps.userClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12635533800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "## removing the validation for investment fund as it is not there on UI as on 23/04/2021"
              }
            ],
            "line": 37,
            "name": "User can verify the benefits screen UI",
            "match": {
              "location": "MyPolicySteps.userCanVerifyTheBenefitsScreenUI()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 693430700,
              "status": "passed"
            },
            "line": 38,
            "name": "User click on \"${policydetails.contract.txt}\" tab",
            "match": {
              "arguments": [
                {
                  "val": "${policydetails.contract.txt}",
                  "offset": 15
                }
              ],
              "location": "MyPolicySteps.userClickOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3499970900,
              "status": "passed"
            },
            "line": 39,
            "name": "User can verify the Policy Contract screen UI",
            "match": {
              "location": "MyPolicySteps.userCanVerifyThePolicyContractScreenUI()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 704404500,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on Submit a Claim button",
            "match": {
              "location": "MyPolicySteps.userClicksOnSubmitAClaimButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1946912600,
              "status": "passed"
            },
            "line": 41,
            "name": "User can see an authentication pop-up to authenticate the transaction",
            "match": {
              "location": "MyPolicySteps.userCanSeeAnAuthenticationPopUpToAuthenticateTheTransaction()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 237709200,
              "status": "passed"
            },
            "line": 42,
            "name": "User clicks on Mobile number checkbox",
            "match": {
              "location": "MyPolicySteps.userClicksOnMobileNumberCheckbox()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 246591200,
              "status": "passed"
            },
            "line": 43,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2838432100,
              "status": "passed"
            },
            "line": 44,
            "name": "User can see OTP verification screen",
            "match": {
              "location": "MyPolicySteps.userCanSeeOTPVerificationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22036875600,
              "status": "passed"
            },
            "line": 45,
            "name": "User enters Invalid OTP and clicks on Continue button",
            "match": {
              "location": "MyPolicySteps.userEntersInvalidOTPAndClicksOnContinueButton(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "OTP",
                  "123456"
                ],
                "line": 46
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7871545800,
              "status": "passed"
            },
            "line": 47,
            "name": "User can see that Invalid OTP error message",
            "match": {
              "location": "MyPolicySteps.userCanSeeThatInvalidOTPErrorMessage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 730953800,
              "status": "passed"
            },
            "line": 48,
            "name": "User clicks on Cancel button",
            "match": {
              "location": "MyPolicySteps.userClicksOnCancelButton()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can view his registered policies under My Policies",
    "description": "",
    "id": "verify-that-user-can-view-his-registered-policies-under-my-policies",
    "keyword": "Feature",
    "uri": "features/ph/mypolicies/MyPolicies.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegressionPH"
      },
      {
        "line": 1,
        "name": "@pulseRegressionPH"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@MyPoliciesPh"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 40500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 13327800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11640392000,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110200,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9433992100,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1688400,
              "status": "passed"
            },
            "line": 8,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10296306600,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 352948800,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9984852000,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29895928400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027We sent a verification code to\u0027)]/following::android.view.ViewGroup[1]//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.enterOTP(PulseRegistrationScreen.java:311)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.enterOTPInPulse(RegistrationSteps.java:294)\r\n\tat ✽.And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"(features/ph/wealth/WealthChannel.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 12750600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13723500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BaseSteps.scrollDown(BaseSteps.java:52)\r\n\tat ✽.And I scroll down(features/ph/wealth/WealthChannel.feature:18)\r\n",
              "status": "failed"
            },
            "line": 18,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "I click on Wealth Channels on landing page",
            "match": {
              "location": "WealthSteps.iNavigateToWealthChannelScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 22,
                "value": "# Scenario: Verify User should be able to see the wealth screen options"
              },
              {
                "line": 23,
                "value": "# And I verify following social cite options are displayed"
              }
            ],
            "line": 25,
            "name": "I verify following wealth channel option are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingwhealthchannel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 26
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 27,
            "value": "#      |Teach your child with Cha-Ching                                                    |"
          },
          {
            "line": 28,
            "value": "#  #    |First Steps                                                    |"
          },
          {
            "line": 29,
            "value": "#      |The importance of investor education                             |"
          },
          {
            "line": 30,
            "value": "#      |Remove The Weeds                                                 |"
          },
          {
            "line": 31,
            "value": "#      |Dispel investment myths to achieve desired investment outcomes   |"
          },
          {
            "line": 32,
            "value": "#      |Investing 123                                                    |"
          },
          {
            "line": 33,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 29349000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5079621900,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageUP(TestBasePage.java:377)\r\n\tat com.onepulse.app.screens.WealthScreen.clickWealthChannelTopic(WealthScreen.java:127)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iClickOnWealthChannelTopic(WealthSteps.java:59)\r\n\tat ✽.Then I click on \"Teach your child with Cha-Ching\" wealth channel topic(features/ph/wealth/WealthChannel.feature:35)\r\n",
              "status": "failed"
            },
            "line": 35,
            "name": "I click on \"Teach your child with Cha-Ching\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify User should be able to see the story post Like, Share, Comment options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-story-post-like,-share,-comment-options",
        "after": [
          {
            "result": {
              "duration": 18343400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10136207200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.WealthScreen.isWealthStaticTextDisplayed(WealthScreen.java:527)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(WealthSteps.java:317)\r\n\tat ✽.And I verify following social cite options are displayed(features/ph/wealth/WealthChannel.feature:38)\r\n",
              "status": "failed"
            },
            "line": 38,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 16930400,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 64476400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Like\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickLikeButton(WealthScreen.java:175)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iLikeThePost(WealthSteps.java:75)\r\n\tat ✽.And I Like the post(features/ph/wealth/WealthChannel.feature:44)\r\n",
              "status": "failed"
            },
            "line": 44,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I read the \"Teach your child with Cha-Ching\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I verify \"Teach your child with Cha-Ching\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 48,
            "value": "#    And I Like the post"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 22826800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5052715200,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Share\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickShareButton(WealthScreen.java:215)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iShareThePost(WealthSteps.java:90)\r\n\tat ✽.And I share the post(features/ph/wealth/WealthChannel.feature:51)\r\n",
              "status": "failed"
            },
            "line": 51,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 19909000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5029438100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Teach your child with Cha-Ching\")]/following::android.widget.TextView[5]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:254)\r\n\tat com.onepulse.app.screens.WealthScreen.readCommentCount(WealthScreen.java:242)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iReadThePostCommentCount(WealthSteps.java:100)\r\n\tat ✽.And I read the \"Teach your child with Cha-Ching\" post comment count(features/ph/wealth/WealthChannel.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "I read the \"Teach your child with Cha-Ching\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "I verify \"Teach your child with Cha-Ching\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 23560300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5080601100,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Teach your child with Cha-Ching\")]/../following::android.widget.ScrollView[1]/android.view.ViewGroup/android.view.ViewGroup[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickWealthChannelTopicDetailView(WealthScreen.java:135)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iClickOnTopicForDetailsFullView(WealthSteps.java:64)\r\n\tat ✽.Then I click on \"Teach your child with Cha-Ching\" topic for details full view(features/ph/wealth/WealthChannel.feature:60)\r\n",
              "status": "failed"
            },
            "line": 60,
            "name": "I click on \"Teach your child with Cha-Ching\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 13474200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5008504000,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10094684400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.getSize(RemoteWebDriver.java:804)\r\n\tat com.prudential.tap.appium.AppiumCommands.swipe(AppiumCommands.java:432)\r\n\tat com.onepulse.app.screens.TestBasePage.scrollPageDown(TestBasePage.java:204)\r\n\tat com.onepulse.app.screens.WealthScreen.isWealthStaticTextDisplayed(WealthScreen.java:527)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(WealthSteps.java:317)\r\n\tat ✽.And I verify following social cite options are displayed(features/ph/wealth/WealthChannel.feature:64)\r\n",
              "status": "failed"
            },
            "line": 64,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 67
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 13545500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 49407800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Like\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickLikeButton(WealthScreen.java:175)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iLikeThePost(WealthSteps.java:75)\r\n\tat ✽.And I Like the post(features/ph/wealth/WealthChannel.feature:69)\r\n",
              "status": "failed"
            },
            "line": 69,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 22053900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5054615400,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Share\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickShareButton(WealthScreen.java:215)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iShareThePost(WealthSteps.java:90)\r\n\tat ✽.And I share the post(features/ph/wealth/WealthChannel.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 15810500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5052915500,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Comment\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.enterCommentOnFullViewPage(WealthScreen.java:280)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iCommentInFullViewPostArticle(WealthSteps.java:115)\r\n\tat ✽.And I comment in full view post article \"${wealth.topic.comment}\"(features/ph/wealth/WealthChannel.feature:77)\r\n",
              "status": "failed"
            },
            "line": 77,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 79,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 16570200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3079070000,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy command to the remote server. Original error: socket hang up\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c0e95b4d-74ab-4a25-a1df-990ec7177a95\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[contains(@text,\u0027First Steps\u0027)]/preceding::android.widget.ImageView}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor23.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.clickFullViewBackButton(WealthScreen.java:165)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iNavigateToStoryPostPage(WealthSteps.java:70)\r\n\tat ✽.Then I navigate to story post page(features/ph/wealth/WealthChannel.feature:80)\r\n",
              "status": "failed"
            },
            "line": 80,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I click on \"Teach your child with Cha-Ching\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Teach your child with Cha-Ching",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@WealthChannelPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@wealth"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      },
      {
        "line": 1,
        "name": "@PHWealthChannels"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 396945100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10240331100,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121100,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36369048200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 421bfb23-3c9c-4c5c-957d-b01b7ea96097\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027CONTINUE WITH EMAIL\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.navigateToLoginPage(PulseRegistrationScreen.java:857)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.iNavigateToLoginPage(LoginSteps.java:267)\r\n\tat ✽.When I navigate to login page(features/sg/profile/LegalAndLegacy.feature:8)\r\n",
              "status": "failed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 4642437000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4999983400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 457193500,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11561087300,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8867833900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tRegulatory text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyTermsandCondition(DieticianSteps.java:238)\r\n\tat ✽.Then I verify following texts are displayed in terms and condition screen(features/sg/profile/LegalAndLegacy.feature:25)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 25,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 30,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 3959309800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2332598000,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19585067400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 421bfb23-3c9c-4c5c-957d-b01b7ea96097\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickPulseicon(CustomerConnectScreen.java:647)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickpulseIcon(CustomerConnectSteps.java:171)\r\n\tat ✽.And I click the pulse icon in Account screen(features/sg/profile/LegalAndLegacy.feature:33)\r\n",
              "status": "failed"
            },
            "line": 33,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 35,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 3831680400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8384102200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 421bfb23-3c9c-4c5c-957d-b01b7ea96097\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Regulatory\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickRegulatory(CustomerConnectScreen.java:691)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickRegulatory(CustomerConnectSteps.java:194)\r\n\tat ✽.And I click the Regulatory icon in legal screen(features/sg/profile/LegalAndLegacy.feature:39)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 38,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 39,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 40,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 41,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 50,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalsg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  }
]