[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 123731243,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 295461738,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 145065,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34092,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25340708177,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4055150,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12865451443,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10624428557,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000860871,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 431959797,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4232559287,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1720763901,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52056,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 68675,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1681783717,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28007,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 361758348,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18424275224,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 284639606,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000339062,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26874634815,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13922791592,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat org.testng.Assert.failNotEquals(Assert.java:494)\n\tat org.testng.Assert.assertTrue(Assert.java:42)\n\tat org.testng.Assert.assertTrue(Assert.java:52)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.landingPageValidation(LoginSteps.java:92)\n\tat âœ½.Then user should be landed to \"Home\" screen(features/PulseLoginTest.feature:23)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56514,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46770,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 43471,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16950,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10671800407,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000328378,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12655458005,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10435492438,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000277151,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 320079501,
              "status": "passed"
            },
            "line": 31,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4164499693,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1716529173,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18387875623,
              "status": "passed"
            },
            "line": 34,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 36
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3699411828,
              "status": "passed"
            },
            "line": 37,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 313535382,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 783071107,
              "status": "passed"
            },
            "comments": [
              {
                "line": 39,
                "value": "## need to check validation message"
              }
            ],
            "line": 40,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 259853770,
              "status": "passed"
            },
            "comments": [
              {
                "line": 41,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 42,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3682315223,
              "status": "passed"
            },
            "line": 43,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 804631648,
              "status": "passed"
            },
            "line": 45,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 946674247,
              "status": "passed"
            },
            "line": 46,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53516,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46543,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 41071,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10553975,
              "status": "passed"
            },
            "line": 49,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 135232,
              "status": "passed"
            },
            "line": 50,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 51
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10396070012,
              "status": "passed"
            },
            "line": 53,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12709835123,
              "status": "passed"
            },
            "line": 54,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10384179424,
              "status": "passed"
            },
            "line": 55,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000272135,
              "status": "passed"
            },
            "line": 56,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 281540290,
              "status": "passed"
            },
            "line": 57,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4051198461,
              "status": "passed"
            },
            "line": 58,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1934307521,
              "status": "passed"
            },
            "line": 59,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18161570014,
              "status": "passed"
            },
            "line": 60,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 62
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3708211928,
              "status": "passed"
            },
            "line": 63,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 323299001,
              "status": "passed"
            },
            "line": 64,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1323871705,
              "status": "passed"
            },
            "line": 65,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 312217350,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3664271635,
              "status": "passed"
            },
            "line": 67,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 806235644,
              "status": "passed"
            },
            "line": 69,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1948740666,
              "status": "passed"
            },
            "line": 70,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54525,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47711,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 43070,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11569,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 182037,
              "status": "passed"
            },
            "line": 73,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3747902697,
              "status": "passed"
            },
            "line": 74,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 75
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 799513081,
              "status": "passed"
            },
            "line": 76,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000390828,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25135909967,
              "status": "passed"
            },
            "line": 78,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1431765799,
              "status": "passed"
            },
            "comments": [
              {
                "line": 79,
                "value": "#    Then I wait for 30 sec"
              },
              {
                "line": 80,
                "value": "#    Given I create connection for api service"
              },
              {
                "line": 81,
                "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
              },
              {
                "line": 82,
                "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
              }
            ],
            "line": 83,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000234388,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 7 sec",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 94941239,
              "status": "passed"
            },
            "comments": [
              {
                "line": 85,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 86,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39264,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34741,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify Account should be locked after entering more than 5 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-5-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1255700187,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19604,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 575310,
              "status": "passed"
            },
            "line": 90,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50591,
              "status": "passed"
            },
            "line": 91,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18056072197,
              "status": "passed"
            },
            "line": 92,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000229915,
              "status": "passed"
            },
            "line": 93,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12784678909,
              "status": "passed"
            },
            "line": 94,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10889651893,
              "status": "passed"
            },
            "line": 95,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000264507,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 388729689,
              "status": "passed"
            },
            "line": 97,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8298101000,
              "status": "passed"
            },
            "line": 98,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 101
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 102
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 512953698,
              "status": "passed"
            },
            "line": 103,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29465077471,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000239485,
              "status": "passed"
            },
            "line": 105,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66915646026,
              "status": "passed"
            },
            "line": 106,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5586124332,
              "status": "passed"
            },
            "line": 107,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 718489493,
              "status": "passed"
            },
            "line": 108,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8149922768,
              "status": "passed"
            },
            "line": 109,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000266270,
              "status": "passed"
            },
            "line": 110,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41168300633,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat org.testng.Assert.failNotEquals(Assert.java:494)\n\tat org.testng.Assert.assertTrue(Assert.java:42)\n\tat org.testng.Assert.assertTrue(Assert.java:52)\n\tat com.onepulse.app.screens.PulseLoginScreen.verifyInvalidPasswordMessage(PulseLoginScreen.java:585)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.verifyInvalidPasswordErrorMsg(LoginSteps.java:264)\n\tat âœ½.Then I enter invalid password on login screen and verify the error message(features/PulseLoginTest.feature:111)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 111,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 114
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53775,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51798,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 122,
        "name": "Verify the Login Functionality using \"Continue with Google\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-google\"",
        "after": [
          {
            "result": {
              "duration": 4919035499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25498,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10974153744,
              "status": "passed"
            },
            "line": 123,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10131733855,
              "status": "passed"
            },
            "line": 124,
            "name": "user click on \"CONTINUE WITH GOOGLE\" with Google button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH GOOGLE",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickcontinuewithGoogle_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32257283221,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 1a4d23e7-6ddb-4199-a19b-da1322bdc3f7\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Add another account\u0027)]}\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.PulseLoginScreen.EnterEmail_Id(PulseLoginScreen.java:900)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.EnterEmail_Id(LoginSteps.java:368)\n\tat âœ½.And I click the \"Email\"  in Continue with Gmail(features/PulseLoginTest.feature:125)\n",
              "status": "failed"
            },
            "line": 125,
            "name": "I click the \"Email\"  in Continue with Gmail",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterEmail_Id(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${facebook.text}"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 127
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 128,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 45142,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35258,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 49339,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10170,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 582790,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54781,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10388257432,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000237113,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12637511679,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000221511,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10264531826,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000217259,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 362848487,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8457655282,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 427955447,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28728106422,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000211817,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9784377576,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 223531139,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1629413739,
              "status": "passed"
            },
            "line": 26,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 968464097,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6762851870,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3211790394,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1223504709,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5984083722,
              "status": "passed"
            },
            "line": 31,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 821058814,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2811908214,
              "status": "passed"
            },
            "line": 33,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 977067059,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1073160550,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2598391787,
              "status": "passed"
            },
            "line": 36,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 888822477,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2128832526,
              "status": "passed"
            },
            "line": 38,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 972551295,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3420219227,
              "status": "passed"
            },
            "line": 40,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1338562637,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2597331642,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 620750876,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2048583047,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 45,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 634657314,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3704076606,
              "status": "passed"
            },
            "line": 47,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 805068411,
              "status": "passed"
            },
            "line": 48,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4342928224,
              "status": "passed"
            },
            "line": 49,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5467364506,
              "status": "passed"
            },
            "line": 50,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000554453,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 419963760,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8149855794,
              "status": "passed"
            },
            "line": 53,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000238463,
              "status": "passed"
            },
            "line": 54,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1869281454,
              "status": "passed"
            },
            "line": 55,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 56
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 258387292,
              "status": "passed"
            },
            "line": 57,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000213799,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5470380544,
              "status": "passed"
            },
            "line": 59,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 65641,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 44933,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12521,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10859059171,
              "status": "passed"
            },
            "line": 63,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000246317,
              "status": "passed"
            },
            "line": 64,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12534117924,
              "status": "passed"
            },
            "line": 65,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000225447,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10661528295,
              "status": "passed"
            },
            "line": 67,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000268591,
              "status": "passed"
            },
            "line": 68,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 364372933,
              "status": "passed"
            },
            "line": 69,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1371882798,
              "status": "passed"
            },
            "line": 70,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 75,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 76,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 77,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 61180,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33633,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 45849,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14479,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 352823480,
              "status": "passed"
            },
            "line": 81,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1920426648,
              "status": "passed"
            },
            "line": 82,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55376,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38285,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 97,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 69058,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10960,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2097413781,
              "status": "passed"
            },
            "line": 90,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 91
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 479365528,
              "status": "passed"
            },
            "line": 92,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 746451043,
              "status": "passed"
            },
            "line": 93,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 94
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@registration"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53370,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28121,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 34372,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10657,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2142305042,
              "status": "passed"
            },
            "line": 90,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 91
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 475839873,
              "status": "passed"
            },
            "line": 92,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 868010538,
              "status": "passed"
            },
            "line": 93,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 94
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@onepulseRegistration"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@registration"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 99,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 33169,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27456,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 101,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 45841,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11008,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10560104932,
              "status": "passed"
            },
            "line": 102,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000235337,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12558523762,
              "status": "passed"
            },
            "line": 104,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000247377,
              "status": "passed"
            },
            "line": 105,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10663935335,
              "status": "passed"
            },
            "line": 106,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000224958,
              "status": "passed"
            },
            "line": 107,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 413110229,
              "status": "passed"
            },
            "line": 108,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8501943444,
              "status": "passed"
            },
            "line": 109,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 110
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 111
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 113
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 564839817,
              "status": "passed"
            },
            "line": 114,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1756560905,
              "status": "passed"
            },
            "line": 115,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 116
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45470,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 119,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 1036152025,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24145,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 587320,
              "status": "passed"
            },
            "line": 120,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50042,
              "status": "passed"
            },
            "line": 121,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10203847999,
              "status": "passed"
            },
            "line": 122,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000221689,
              "status": "passed"
            },
            "line": 123,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12557614382,
              "status": "passed"
            },
            "line": 124,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000242771,
              "status": "passed"
            },
            "line": 125,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10297655339,
              "status": "passed"
            },
            "line": 126,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000214007,
              "status": "passed"
            },
            "line": 127,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 293468089,
              "status": "passed"
            },
            "line": 128,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7864269801,
              "status": "passed"
            },
            "line": 129,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 130
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 131
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 132
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 133
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 508780934,
              "status": "passed"
            },
            "line": 134,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28762899958,
              "status": "passed"
            },
            "line": 135,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000212871,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2347229391,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 020f34c4-4e78-466f-8961-7f4c43870402\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.EditText)[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:255)\n\tat com.onepulse.app.screens.PulseRegistrationScreen.verifyCountryCode(PulseRegistrationScreen.java:998)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.verifyCountryCode(RegistrationSteps.java:353)\n\tat âœ½.Then I verify the country code should be displayed correctly on phone number screen(features/PulseRegistrationTest.feature:137)\n",
              "status": "failed"
            },
            "line": 137,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 139
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 142,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34816,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Gender screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-gender-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 72055,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11251,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10104022179,
              "status": "passed"
            },
            "line": 145,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 146
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 201029050,
              "status": "passed"
            },
            "line": 147,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000307709,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 661462421,
              "status": "passed"
            },
            "line": 149,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 854999205,
              "status": "passed"
            },
            "line": 150,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 382973927,
              "status": "passed"
            },
            "line": 151,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 956269259,
              "status": "passed"
            },
            "line": 152,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000237352,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 790743955,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 677778269,
              "status": "passed"
            },
            "line": 155,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5294326557,
              "status": "passed"
            },
            "line": 156,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3215363430,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1221703271,
              "status": "passed"
            },
            "line": 158,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000207714,
              "status": "passed"
            },
            "line": 159,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 691088564,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 702068025,
              "status": "passed"
            },
            "line": 161,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5630531015,
              "status": "passed"
            },
            "line": 162,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 771044119,
              "status": "passed"
            },
            "line": 163,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000240549,
              "status": "passed"
            },
            "line": 164,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1175116561,
              "status": "passed"
            },
            "line": 165,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 808698528,
              "status": "passed"
            },
            "line": 166,
            "name": "verify validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 868293960,
              "status": "passed"
            },
            "line": 167,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 988283437,
              "status": "passed"
            },
            "line": 168,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000223340,
              "status": "passed"
            },
            "line": 169,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1313391585,
              "status": "passed"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 934724111,
              "status": "passed"
            },
            "line": 171,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 519791617,
              "status": "passed"
            },
            "line": 172,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 873887551,
              "status": "passed"
            },
            "line": 173,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000232543,
              "status": "passed"
            },
            "line": 174,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1103371192,
              "status": "passed"
            },
            "line": 175,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 831942919,
              "status": "passed"
            },
            "line": 176,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 382453,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 832826,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 517649,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 234481,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 495847,
              "status": "passed"
            },
            "line": 180,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38121,
              "status": "passed"
            },
            "line": 181,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10512437992,
              "status": "passed"
            },
            "line": 182,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000228675,
              "status": "passed"
            },
            "line": 183,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12725983702,
              "status": "passed"
            },
            "line": 184,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000233275,
              "status": "passed"
            },
            "line": 185,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10250570010,
              "status": "passed"
            },
            "line": 186,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000209014,
              "status": "passed"
            },
            "line": 187,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 259673004,
              "status": "passed"
            },
            "line": 188,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7823311718,
              "status": "passed"
            },
            "line": 189,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 190
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 191
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 192
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 193
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 496700071,
              "status": "passed"
            },
            "line": 194,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90000222461,
              "status": "passed"
            },
            "line": 195,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3559703911,
              "status": "passed"
            },
            "line": 196,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26872288103,
              "status": "passed"
            },
            "line": 197,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000255698,
              "status": "passed"
            },
            "line": 198,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8484211154,
              "status": "passed"
            },
            "line": 199,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseRegistration"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 64100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36631,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 74654,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15839,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 553531,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64411,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10618970819,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000210036,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12621679150,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000211046,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9698969755,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000226316,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 255980575,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7799824937,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 479919119,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000209605,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27449029737,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000232007,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11488920408,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 262502803,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1543593711,
              "status": "passed"
            },
            "line": 26,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 989235687,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6791847624,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3212945377,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1255466101,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6160355754,
              "status": "passed"
            },
            "line": 31,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 961777901,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2907641984,
              "status": "passed"
            },
            "line": 33,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1115151124,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1107823165,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2021849382,
              "status": "passed"
            },
            "line": 36,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 872649294,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2381306101,
              "status": "passed"
            },
            "line": 38,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 874051927,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3833801774,
              "status": "passed"
            },
            "line": 40,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 890899711,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2861823424,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 656851112,
              "status": "passed"
            },
            "line": 43,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2086076987,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 45,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 725549054,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5639098126,
              "status": "passed"
            },
            "line": 47,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 763711156,
              "status": "passed"
            },
            "line": 48,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4411425254,
              "status": "passed"
            },
            "line": 49,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5631217185,
              "status": "passed"
            },
            "line": 50,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 685989206,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8100491892,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000241479,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1909216178,
              "status": "passed"
            },
            "line": 54,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 55
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 223022178,
              "status": "passed"
            },
            "line": 56,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000302255,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5586268076,
              "status": "passed"
            },
            "line": 58,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47254,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31392,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able navigate to Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center",
        "after": [
          {
            "result": {
              "duration": 38608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8296,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3420261649,
              "status": "passed"
            },
            "line": 61,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44153,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33748,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 35517,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10088,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2166045056,
              "status": "passed"
            },
            "line": 64,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "No Notifications Yet"
                ],
                "line": 65
              },
              {
                "cells": [
                  "You do not have any notifications yet, check this section regularly for any updates."
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40564,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 46310,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "Verify User should be able to login using already registered credentials",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-already-registered-credentials",
        "after": [
          {
            "result": {
              "duration": 34619,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7253,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10765072671,
              "status": "passed"
            },
            "line": 70,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12087256284,
              "status": "passed"
            },
            "line": 71,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18663981214,
              "status": "passed"
            },
            "line": 72,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 74
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 422703680,
              "status": "passed"
            },
            "line": 75,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000241742,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7996395773,
              "status": "passed"
            },
            "line": 77,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5766839550,
              "status": "passed"
            },
            "line": 78,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28550,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "Verify User should be able navigate to Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center",
        "after": [
          {
            "result": {
              "duration": 1062223796,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18748,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9485081425,
              "status": "passed"
            },
            "line": 81,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16883657874,
              "status": "passed"
            },
            "line": 82,
            "name": "I handle the pulse mate popup",
            "match": {
              "location": "WealthSteps.iHandleThePulseMatePopup()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3757514462,
              "status": "passed"
            },
            "line": 83,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4000768684,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8926433188,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 9f82c47c-c7a2-49fd-b17a-42ee28edbeb3\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027My Notifications\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.PulseManageProfileScreen.viewNotificationFromNotificationCenter(PulseManageProfileScreen.java:1291)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.userViewTheFirstNotificationFromNotificationCenter(LoginSteps.java:449)\n\tat âœ½.And user view the first notification from notification center(features/home/NotificationCenter.feature:85)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 85,
            "name": "user view the first notification from notification center",
            "match": {
              "location": "LoginSteps.userViewTheFirstNotificationFromNotificationCenter()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 41050,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27365,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 41321,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8016,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10205684518,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 151450,
              "status": "passed"
            },
            "line": 6,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12567065917,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9641320048,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000213381,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 242798715,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4033909983,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1709957563,
              "status": "passed"
            },
            "line": 12,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43832,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29649,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 1222374696,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14808,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 125525,
              "status": "passed"
            },
            "line": 15,
            "name": "I assign \"${Communities.text}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Communities.text}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 44
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 288885730,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18172375754,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 291276098,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000359627,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8567254984,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13367709693,
              "error_message": "java.lang.AssertionError: expected [true] but found [false]\n\tat org.testng.Assert.fail(Assert.java:94)\n\tat org.testng.Assert.failNotEquals(Assert.java:494)\n\tat org.testng.Assert.assertTrue(Assert.java:42)\n\tat org.testng.Assert.assertTrue(Assert.java:52)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.landingPageValidation(LoginSteps.java:92)\n\tat âœ½.Then user should be landed to \"Home\" screen(features/home/mycommunities/PulseMyCommunities.feature:23)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28526,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22809,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 1257035457,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 205343797528,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Communities\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.isMycommunitiesJoin(MyCommunitiesScreen.java:101)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.isMycommunitiesJoin(MyCommunitiesSteps.java:31)\n\tat âœ½.And User should be verify \"${my.communities.text}\" tab in Home screen(features/home/mycommunities/PulseMyCommunities.feature:26)\n",
              "status": "failed"
            },
            "line": 26,
            "name": "User should be verify \"${my.communities.text}\" tab in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 23
                }
              ],
              "location": "MyCommunitiesSteps.isMycommunitiesJoin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 29,
            "name": "I verify the following texts \"Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 60574,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26993,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 1139399833,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14535,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8355297044,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1721)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat âœ½.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:34)\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 37,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43441,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 40,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 1172888304,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23490,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000278049,
              "status": "passed"
            },
            "line": 41,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8291259526,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"All Communities\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1721)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat âœ½.And I clicks on \"${All.Communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:42)\n",
              "status": "failed"
            },
            "line": 42,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 51,
            "name": "I verify the following text \"TEST1\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 52
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 54,
            "value": "#      | testAutomation testAutomation |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 38457,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37114,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 1129934264,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15389,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24591793860,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:491)\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickFeeds(MyCommunitiesScreen.java:294)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickIcons(MyCommunitiesSteps.java:101)\n\tat âœ½.And I click the Post icon in My communities(features/home/mycommunities/PulseMyCommunities.feature:57)\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 64,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44405,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30810,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 1186606247,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18552,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20083411465,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:491)\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickShareIcon(MyCommunitiesScreen.java:525)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.ClickShareIcon(MyCommunitiesSteps.java:164)\n\tat âœ½.And I click the share icon in Post screen(features/home/mycommunities/PulseMyCommunities.feature:67)\n",
              "status": "failed"
            },
            "line": 67,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 70,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29896,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 1151598605,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14144,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16510285698,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:491)\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickSkipfeedbutton(MyCommunitiesScreen.java:630)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickSkipbutton(MyCommunitiesSteps.java:197)\n\tat âœ½.Then I click skip button in feeds screen(features/home/mycommunities/PulseMyCommunities.feature:74)\n",
              "status": "failed"
            },
            "line": 74,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 87,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 1201382922,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14789,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 463155565,
              "status": "passed"
            },
            "line": 90,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8291253093,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Category\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1721)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat âœ½.And I clicks on \"${category.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:91)\n",
              "status": "failed"
            },
            "line": 91,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "I clicks on \"Mental Health\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Mental Health",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27622,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22976,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 1223301695,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20160,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8388057537,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cce43eba-5983-4cc4-899d-14b97a3e9888\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1721)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat âœ½.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:104)\n",
              "status": "failed"
            },
            "line": 104,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 107,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  @pulseenvironment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 43144,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that user can view previous air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-previous-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 154041,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19497,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10880901900,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 169493,
              "status": "passed"
            },
            "comments": [
              {
                "line": 8,
                "value": "#  And user click on \"CONTINUE WITH GOOGLE\" with Google button"
              },
              {
                "line": 9,
                "value": "#  And I click the \"Email\"  in Continue with Gmail"
              },
              {
                "line": 10,
                "value": "#    | Emailid  | ${facebook.text} |"
              },
              {
                "line": 11,
                "value": "#    | Password  | pulsesgqa@123 |"
              }
            ],
            "line": 12,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11180375258,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18531292047,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 426139133,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000216791,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7689289752,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 425401262,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4792722775,
              "status": "passed"
            },
            "line": 21,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39486819041,
              "status": "passed"
            },
            "comments": [
              {
                "line": 22,
                "value": "#  Intermittently the code is unable to locate My env due to the Health page scrolling"
              }
            ],
            "line": 23,
            "name": "I clicks on My Environment icon",
            "match": {
              "location": "MyEnvironmentSteps.iClicksOnMyEnvironmentIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24037266815,
              "status": "passed"
            },
            "line": 24,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 888052150,
              "status": "passed"
            },
            "line": 25,
            "name": "User clicks on Previous Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnPreviousAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6594538211,
              "status": "passed"
            },
            "line": 26,
            "name": "User can view \"Previous\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5661719545,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on \"Swipe Up for Details\" button to view the Previous day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewThePreviousDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3502251446,
              "status": "passed"
            },
            "line": 28,
            "name": "User can see the \"Previous\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1607066602,
              "status": "passed"
            },
            "line": 29,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45756,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31729,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify that user can view Current air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-current-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 37661,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9128,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1100662957,
              "status": "passed"
            },
            "line": 33,
            "name": "User clicks on \"Back\" icon from \"Previous Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Previous Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23097056200,
              "status": "passed"
            },
            "line": 34,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 890380049,
              "status": "passed"
            },
            "line": 35,
            "name": "User clicks on Current Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnCurrentAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5932260349,
              "status": "passed"
            },
            "line": 36,
            "name": "User can view \"Current\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5769220289,
              "status": "passed"
            },
            "line": 37,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5496476697,
              "status": "passed"
            },
            "line": 38,
            "name": "User can see the \"Current\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1280898949,
              "status": "passed"
            },
            "line": 39,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34604,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27108,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify that user can view air quality details  for next few days under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-air-quality-details--for-next-few-days-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 56606,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8819,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1053793617,
              "status": "passed"
            },
            "line": 43,
            "name": "User clicks on \"Back\" icon from \"Current Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Current Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23263676669,
              "status": "passed"
            },
            "line": 44,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 826847286,
              "status": "passed"
            },
            "line": 45,
            "name": "User clicks on \"How is my air quality over the next few days\" icon in Environments Home Page",
            "match": {
              "arguments": [
                {
                  "val": "How is my air quality over the next few days",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentsHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5932775234,
              "status": "passed"
            },
            "line": 46,
            "name": "User can view \"Forecast\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Forecast",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5703368635,
              "status": "passed"
            },
            "line": 47,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4251375854,
              "status": "passed"
            },
            "line": 48,
            "name": "User can see the \"ForeCast\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "ForeCast",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 979845615,
              "status": "passed"
            },
            "line": 49,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48883,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21990,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify that user can access and view Neighbourhood air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-neighbourhood-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 42231,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8253,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1362321021,
              "status": "passed"
            },
            "line": 53,
            "name": "User clicks on \"Back\" icon from \"Next Few Days Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Next Few Days Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1517610820,
              "status": "passed"
            },
            "line": 54,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1345215714,
              "status": "passed"
            },
            "line": 55,
            "name": "User clicks on My Neighbourhood air icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnMyNeighbourhoodAirIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6385642734,
              "status": "passed"
            },
            "line": 56,
            "name": "User can view \"Heat Map\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Heat Map",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 57,
            "value": "#    When User clicks on \"Swipe Up for Details\" button to view current day air quality details"
          },
          {
            "line": 58,
            "value": "#    Then User can see the \"Heat Map\" Air Quality Details"
          },
          {
            "line": 59,
            "value": "#    When User clicks on \"Swipes Down To Close\" button to close the details"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 41258,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 61725,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify that user can access and view Fires nearby under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-fires-nearby-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 40199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9044,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 676156850,
              "status": "passed"
            },
            "line": 63,
            "name": "User clicks on \"Back\" icon from \"Neighbourhood Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Neighbourhood Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22826114426,
              "status": "passed"
            },
            "line": 64,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 771364852,
              "status": "passed"
            },
            "line": 65,
            "name": "User clicks on Fires NearBy icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnFiresNearByIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6097348372,
              "status": "passed"
            },
            "line": 66,
            "name": "User can view \"Fires Nearby\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Fires Nearby",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5735209065,
              "status": "passed"
            },
            "line": 67,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1139424019,
              "status": "passed"
            },
            "comments": [
              {
                "line": 68,
                "value": "#    Then User can see the \"Fires Nearby\" Air Quality Details"
              }
            ],
            "line": 69,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38397,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify that user can view effects of the poor environment and upcoming activities under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-effects-of-the-poor-environment-and-upcoming-activities-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 39936,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9237,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1173773251,
              "status": "passed"
            },
            "line": 73,
            "name": "User clicks on \"Back\" icon from \"Fires Nearby\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Fires Nearby",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22853957978,
              "status": "passed"
            },
            "line": 74,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1336598585,
              "status": "passed"
            },
            "line": 75,
            "name": "User clicks on \"Why is it important to monitor my environment\" icon in environment Home Page",
            "match": {
              "arguments": [
                {
                  "val": "Why is it important to monitor my environment",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3669215970,
              "status": "passed"
            },
            "line": 76,
            "name": "User can view short term and long term effects screen",
            "match": {
              "location": "MyEnvironmentSteps.userCanViewShortTermAndLongTermEffectsScreen()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can view air quality details under My Environment screen",
    "description": "",
    "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/MyEnvironments.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sg_myenvironment"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 33753,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19154,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials and the BabyLon call 995 flow must be verified",
        "description": "",
        "id": "verify-the-babylon-call-995-flow-on-pulse-health-\u0026-wealth-app;user-should-be-able-to-login-on-app-with-correct-credentials-and-the-babylon-call-995-flow-must-be-verified",
        "after": [
          {
            "result": {
              "duration": 48104,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11070,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11159273703,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 160579,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${Babylon.call}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.call}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 40
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11387751146,
              "status": "passed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18601817901,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 346481458,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000238081,
              "status": "passed"
            },
            "comments": [
              {
                "line": 13,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7387204938,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7882210471,
              "status": "passed"
            },
            "comments": [
              {
                "line": 16,
                "value": "# Then I wait for 6 sec"
              },
              {
                "line": 17,
                "value": "#    Then I click skip button"
              },
              {
                "line": 18,
                "value": "#    And I navigate to Babylon Page and Accept TermsAndCondition"
              }
            ],
            "line": 19,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43674914176,
              "status": "passed"
            },
            "comments": [
              {
                "line": 20,
                "value": "#    Then change personal details"
              },
              {
                "line": 21,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 22,
                "value": "#      | FirstName | Pulse |"
              },
              {
                "line": 23,
                "value": "#      | LastName  | QA    |"
              },
              {
                "line": 24,
                "value": "#      | Gender    | Male  |"
              },
              {
                "line": 25,
                "value": "#      | DOB         | 3-August-1972    |"
              },
              {
                "line": 26,
                "value": "#    And I confirm the registration"
              },
              {
                "line": 27,
                "value": "#  Then I wait for 6 sec"
              },
              {
                "line": 28,
                "value": "#    When user clicks on Health link"
              },
              {
                "line": 29,
                "value": "#    When user clicks on \u0027Feeling Unwell\u0027 link"
              },
              {
                "line": 30,
                "value": "#    When user clicks on \u0027Continue\u0027 if it comes"
              },
              {
                "line": 31,
                "value": "#    When user clicks on Babylon \u0027Get Started\u0027 link if it comes"
              },
              {
                "line": 32,
                "value": "#    When user clicks on Babylon \u0027Confirm\u0027 link if it comes"
              }
            ],
            "line": 33,
            "name": "I enter \"Suicide\" symptoms on Babylon screen And select \"Thinking about ending your life.\"",
            "match": {
              "arguments": [
                {
                  "val": "Suicide",
                  "offset": 9
                },
                {
                  "val": "Thinking about ending your life.",
                  "offset": 57
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000208299,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 197102951,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#    When user enters the symptom in Babylon"
              },
              {
                "line": 36,
                "value": "#    Then user clicks on bot suggestion"
              }
            ],
            "line": 37,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Iâ€™m sorry youâ€™re having thoughts of self-harm or suicide. Iâ€™m stopping your assessment as this is beyond my capability. You can talk to someone from the Samaritans of Singapore (SOS) at 1800-221 4444. If this is an emergency, call 995 immediately. Please know youâ€™re not alone."
                ],
                "line": 38
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 582037940,
              "status": "passed"
            },
            "line": 39,
            "name": "I close the babylon symptoms checker screen",
            "match": {
              "location": "BabylonSteps.closeBabylonSymptomsScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3302448465,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "#    Then I close the babylon Screen"
              },
              {
                "line": 41,
                "value": "#    When user clicks on \u0027Feeling Unwell\u0027 link"
              },
              {
                "line": 42,
                "value": "#    When I navigate to Health Page and check symptoms"
              }
            ],
            "line": 43,
            "name": "user views chat history",
            "match": {
              "location": "BabylonSteps.userClickChatHistory()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17805414487,
              "status": "passed"
            },
            "line": 44,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon call 995 flow on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-the-babylon-call-995-flow-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabyLonCall995.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonCall995"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 42126,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20642,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 9,
        "name": "User should be able to access Babylon from Pulse app and perform Perianal lump workflow",
        "description": "",
        "id": "verify-the-babylon-perianal-lump-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-perianal-lump-workflow",
        "after": [
          {
            "result": {
              "duration": 44362,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11393,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10536289795,
              "status": "passed"
            },
            "line": 10,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 125561,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${Babylon.AnalLump}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.AnalLump}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 44
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11323864365,
              "status": "passed"
            },
            "line": 12,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18507733472,
              "status": "passed"
            },
            "line": 13,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 15
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 425171083,
              "status": "passed"
            },
            "line": 16,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000242754,
              "status": "passed"
            },
            "comments": [
              {
                "line": 17,
                "value": "#   Then I wait for 59 sec"
              }
            ],
            "line": 18,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7789730215,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7879142402,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "#    Then I click skip button"
              },
              {
                "line": 22,
                "value": "#    And I navigate to Babylon Page and Accept TermsAndCondition"
              }
            ],
            "line": 23,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41635992095,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    Then change personal details"
              },
              {
                "line": 25,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 26,
                "value": "#      | FirstName | Pulse |"
              },
              {
                "line": 27,
                "value": "#      | LastName  | QA    |"
              },
              {
                "line": 28,
                "value": "#      | Gender    | Male  |"
              },
              {
                "line": 29,
                "value": "#      | DOB         | 3-August-1972    |"
              },
              {
                "line": 30,
                "value": "#    And I confirm the registration"
              },
              {
                "line": 31,
                "value": "# Then I wait for 6 sec"
              }
            ],
            "line": 32,
            "name": "I enter \"Anal Lump\" symptoms on Babylon screen And select \"Feeling a lump around the opening of the back passage\"",
            "match": {
              "arguments": [
                {
                  "val": "Anal Lump",
                  "offset": 9
                },
                {
                  "val": "Feeling a lump around the opening of the back passage",
                  "offset": 59
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1241912127,
              "status": "passed"
            },
            "comments": [
              {
                "line": 33,
                "value": "#    When I handle questions and answer"
              },
              {
                "line": 34,
                "value": "#      | Is there any other related symptom youâ€™d like to tell me about? | No |"
              }
            ],
            "line": 35,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 36
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 270669490639,
              "status": "passed"
            },
            "line": 37,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Other people with your symptoms sometimes experience pain around the buttocks or anus. Have you experienced this?",
                  "No"
                ],
                "line": 38
              },
              {
                "cells": [
                  "This is a bit personal, but have you noticed any of these problems around your anus?",
                  "Skin irritation##Submit"
                ],
                "line": 39
              },
              {
                "cells": [
                  "One symptom that can be concerning is bleeding from the anus. Have you experienced this?",
                  "Yes"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Where have you seen the blood?",
                  "Mixed in with my stools"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Have you noticed any of these issues when you pass stool?",
                  "I have to strain to pass a stool##Submit"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Do any of these describe your poos (stools)?",
                  "None of the above##Submit"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Have you gained or lost weight recently without trying to?",
                  "No"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Have you ever had sex (vaginal or anal)?",
                  "Yes"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Have you had sex (vaginal or anal) in the past 6 months?",
                  "No"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Please select any of the following sexual activities that apply to you, I ask this question because some sexual activities can increase your risk of infection.",
                  "None of the above##Submit"
                ],
                "line": 47
              },
              {
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For months"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Do you have any pain in your abdomen?",
                  "No"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Do you have or have you recently had a fever?",
                  "No"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Have you experienced any difficulty breathing?",
                  "None of the above##Submit"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Is your heart beating faster than usual?",
                  "No"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Have you felt dizzy or light-headed recently?",
                  "No"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Has there been a significant change in your bowel habits, lasting for a few days or more?",
                  "Yes"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6481502454,
              "status": "passed"
            },
            "comments": [
              {
                "line": 55,
                "value": "#      | Are you currently diagnosed with any of these bowel conditions?                                                   | No##Submit                               |"
              },
              {
                "line": 56,
                "value": "#      | Have either of your parents, or any siblings, ever been diagnosed with bowel cancer?                              | No                                       |"
              },
              {
                "line": 57,
                "value": "#      | Have you noticed that you\u0027re passing gas more than usual or not at all?                                           | None of the above                        |"
              },
              {
                "line": 58,
                "value": "#      | Have you taken any opioid painkillers recently, such as codeine or morphine?                                      | No                                       |"
              },
              {
                "line": 59,
                "value": "#      | Has there been a significant change in your bowel habits, lasting for a few days or more?                         | No                                       |"
              },
              {
                "line": 60,
                "value": "#      | Have you been diagnosed with primary sclerosing cholangitis?                                                      | No                                       |"
              },
              {
                "line": 61,
                "value": "#      | Are you feeling tired, unwell, lethargic or run down?                                                             | No                                       |"
              },
              {
                "line": 62,
                "value": "#      | Do you ever get stomach acid or food coming back up?                                                              | None of the above##Submit                |"
              },
              {
                "line": 63,
                "value": "#      | Do you have a fever?                                                                                              | No                                       |"
              },
              {
                "line": 64,
                "value": "#      | Have you gained or lost weight recently without trying to?                                                        | No                                       |"
              },
              {
                "line": 65,
                "value": "#      | Do you feel sick or have you vomited?                                                                             | None of the above##Submit                |"
              },
              {
                "line": 66,
                "value": "#      | Is your stomach bloated or swollen?                                                                               | None of the above##Submit                |"
              },
              {
                "line": 67,
                "value": "#      | Do you drink less than 5 glasses (1.2 litres) of water a day?                                                     | Yes                                      |"
              },
              {
                "line": 68,
                "value": "#      | On average, do you eat less than the recommended amount of fibre (5 servings of fruit and veg per day)?           | Yes                                      |"
              },
              {
                "line": 69,
                "value": "#      | For how long have you been experiencing all of your symptoms?                                                     | For months                               |"
              },
              {
                "line": 70,
                "value": "#      | Do you smoke cigarettes?                                                                                          | I\u0027ve never smoked                        |"
              },
              {
                "line": 71,
                "value": "#      | Have you noticed anything unusual about your stools?                                                              | None of the above##Submit                |"
              }
            ],
            "line": 73,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Great, we\u0027re all done. Please remember, this service is only for general information purposes and isn\u0027t a personal or medical diagnosis. If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10654548364,
              "status": "passed"
            },
            "line": 76,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 743778807,
              "status": "passed"
            },
            "line": 77,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Piles or haemorrhoids"
                ],
                "line": 78
              },
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 79
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 824146118,
              "status": "passed"
            },
            "line": 80,
            "name": "I select on \"Piles or haemorrhoids\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "Piles or haemorrhoids",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 54
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3036859120,
              "status": "passed"
            },
            "line": 81,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Piles or haemorrhoids"
                ],
                "line": 82
              },
              {
                "cells": [
                  "This can usually be treated by a pharmacist."
                ],
                "line": 83
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Some of your answers indicate that this condition could be the cause:"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Straining when passing stool"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Fresh blood in stool"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Lump around anus"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Anus irritation"
                ],
                "line": 89
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 349632226,
              "status": "passed"
            },
            "line": 92,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2080272259,
              "status": "passed"
            },
            "line": 93,
            "name": "I select on \"Something potentially serious\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "Something potentially serious",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 62
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2925335562,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 95
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 96
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Change in bowel habit"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Straining when passing stool"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Fresh blood in stool"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Lump around anus"
                ],
                "line": 101
              },
              {
                "cells": [
                  "Anus irritation"
                ],
                "line": 102
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14498686327,
              "status": "passed"
            },
            "line": 103,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14176442224,
              "status": "passed"
            },
            "line": 104,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Perianal lump workflow is working as expected",
    "description": "Following condition should meet to run this script:\nAge:48\nSex:Male\nCountry:Singapore",
    "id": "verify-the-babylon-perianal-lump-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonAnalLump.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonAnalLump"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27877,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15905,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 9,
        "name": "User should be able to access Babylon from Pulse app and perform Breast lump workflow",
        "description": "",
        "id": "verify-the-babylon-maligant-neoplasm-breast-lump-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-breast-lump-workflow",
        "after": [
          {
            "result": {
              "duration": 76844,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7051,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 81779,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${pulse.babylon.breastlump.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.breastlump.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 61
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10750502064,
              "status": "passed"
            },
            "comments": [
              {
                "line": 11,
                "value": "#    Given I generate random number and assign to variable \"RANDOM_NUMBER\""
              },
              {
                "line": 12,
                "value": "#    And I calculate age of the user is 54 in \"dd-MM-yyyy\" format from current date and assign to variable \"DOB\""
              },
              {
                "line": 13,
                "value": "#    And I assign value to following variables"
              },
              {
                "line": 14,
                "value": "#      | USER_NAME     | pulsesgqa+${RANDOM_NUMBER}@gmail.com |"
              },
              {
                "line": 15,
                "value": "#      | USER_PASSWORD | Pas$1234                             |"
              },
              {
                "line": 16,
                "value": "#      | DOB           | ${DOB}                               |"
              },
              {
                "line": 17,
                "value": "#    And I register to pulse using API"
              }
            ],
            "line": 18,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11989598572,
              "status": "passed"
            },
            "line": 19,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17993835018,
              "status": "passed"
            },
            "line": 20,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 343544644,
              "status": "passed"
            },
            "line": 23,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000279204,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "# Then I wait for 55 sec"
              }
            ],
            "line": 25,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8913834042,
              "status": "passed"
            },
            "line": 26,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8073379330,
              "status": "passed"
            },
            "comments": [
              {
                "line": 27,
                "value": "#   And I navigate to Babylon Page and Accept TermsAndCondition"
              },
              {
                "line": 28,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 29,
                "value": "#      | FirstName | Pulse  |"
              },
              {
                "line": 30,
                "value": "#      | LastName  | QA     |"
              },
              {
                "line": 31,
                "value": "#      | Gender    | Female |"
              },
              {
                "line": 32,
                "value": "#    And I confirm the registration"
              }
            ],
            "line": 33,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41531844003,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "#  Then I wait for 2 sec"
              }
            ],
            "line": 35,
            "name": "I enter \"Breast Lump\" symptoms on Babylon screen And select \"A lump or mass under the skin of the breast\"",
            "match": {
              "arguments": [
                {
                  "val": "Breast Lump",
                  "offset": 9
                },
                {
                  "val": "A lump or mass under the skin of the breast",
                  "offset": 61
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 736168723,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "# When I handle questions and answer"
              },
              {
                "line": 37,
                "value": "#  | Is there any other related symptom youâ€™d like to tell me about? | No |"
              }
            ],
            "line": 38,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 39
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 222543992451,
              "status": "passed"
            },
            "line": 40,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 41,
                    "value": "#  | Are you pregnant?                                                                     | No                              |"
                  },
                  {
                    "line": 42,
                    "value": "#  | Are you currently breastfeeding?                                                      | No                              |"
                  }
                ],
                "cells": [
                  "Have you had any pain in your breasts?",
                  "No"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Have you noticed any of the following changes in your breast(s)?",
                  "Nipple pointing inwards##Submit"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Does your breast feel hot to touch?",
                  "No"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Have you had any discharge from your nipple recently?",
                  "Yes"
                ],
                "line": 46
              },
              {
                "cells": [
                  "How would you describe your nipple discharge?",
                  "Bloody or blood-stained"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Have either of your parents, or any siblings, ever been diagnosed with breast cancer?",
                  "Yes"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Has your mother, or any sisters, ever been diagnosed with ovarian cancer?",
                  "No"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Can you feel a lump in your armpit?",
                  "Yes"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Have you gained or lost weight recently without trying to?",
                  "No"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Have you recently injured your breast?",
                  "No"
                ],
                "line": 52
              },
              {
                "comments": [
                  {
                    "line": 54,
                    "value": "#  | Have you noticed any change to your vision?                                           | No                              |"
                  }
                ],
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For weeks"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Do you have or have you recently had a fever?",
                  "No"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Does the slightest knock or bump cause you to bruise?",
                  "No"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Do you have pain in your bones?",
                  "No"
                ],
                "line": 60
              },
              {
                "cells": [
                  "Do you have a significantly weakened immune system due to an existing condition or from taking medication?",
                  "No"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6165552689,
              "status": "passed"
            },
            "comments": [
              {
                "line": 62,
                "value": "#  | Do you have a headache?| No                              |"
              },
              {
                "line": 63,
                "value": "#  | Do you have a rash?| No                              |"
              },
              {
                "line": 64,
                "value": "#  | Have you been shivering intensely or uncontrollably? |"
              },
              {
                "line": 65,
                "value": "#  | Are your lymph glands swollen?                                                        | No                              |"
              },
              {
                "line": 66,
                "value": "#  | Do you feel sick or have you vomited?                                                 | None of the above##Submit       |"
              },
              {
                "line": 67,
                "value": "#  | Has your appetite changed recently?                                                   | None of the above               |"
              },
              {
                "line": 68,
                "value": "#  | Do you smoke cigarettes?                                                              | I\u0027ve never smoked               |"
              },
              {
                "line": 69,
                "value": "#  | Are you feeling tired, unwell, lethargic or run down?                                 | No                              |"
              }
            ],
            "line": 73,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10470075604,
              "status": "passed"
            },
            "line": 76,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1452063532,
              "status": "passed"
            },
            "line": 77,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 78
              },
              {
                "cells": [
                  "Breast abscess"
                ],
                "line": 79
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 761376391,
              "status": "passed"
            },
            "line": 80,
            "name": "I select on \"Something potentially serious\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "Something potentially serious",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 62
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3081995534,
              "status": "passed"
            },
            "line": 81,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 82
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 83
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 84
              },
              {
                "cells": [
                  "Some of your answers indicate that this condition could be the cause:"
                ],
                "line": 85
              },
              {
                "cells": [
                  "Lump or mass in armpit"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Inverted nipple"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Blood-stained nipple discharge"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Family history of breast cancer"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Breast lump"
                ],
                "line": 90
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 424470596,
              "status": "passed"
            },
            "line": 92,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1891222517,
              "status": "passed"
            },
            "line": 93,
            "name": "I select on \"Breast abscess\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "Breast abscess",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 47
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2736781007,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Breast abscess"
                ],
                "line": 95
              },
              {
                "cells": [
                  "This usually requires seeing a GP urgently."
                ],
                "line": 96
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Lump or mass in armpit"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Inverted nipple"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Blood-stained nipple discharge"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Breast lump"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13420749635,
              "status": "passed"
            },
            "line": 103,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16286394136,
              "status": "passed"
            },
            "line": 104,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Maligant Neoplasm Breast lump workflow is working as expected",
    "description": "Following condition should meet to run this script:\nAge:54\nSex:Female\nCountry:Singapore",
    "id": "verify-the-babylon-maligant-neoplasm-breast-lump-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonBreastLump.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_breast_lump"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@refactorTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27178,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13680,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 8,
        "name": "User should be able to access Babylon from Pulse app and perform Human Immune Virus Rash workflow",
        "description": "",
        "id": "verify-the-babylon-human-immune-virus-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-human-immune-virus-rash-workflow",
        "after": [
          {
            "result": {
              "duration": 34884,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6370,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10988055414,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 137055,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${Babylon.virusrash}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.virusrash}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 45
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11011790700,
              "status": "passed"
            },
            "line": 11,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18407022549,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 14
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 422741914,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000231535,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8210290830,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9154317392,
              "status": "passed"
            },
            "comments": [
              {
                "line": 18,
                "value": "#  Then I wait for 6 sec"
              },
              {
                "line": 19,
                "value": "#    Then I click skip button"
              },
              {
                "line": 20,
                "value": "#    And I navigate to Babylon Page and Accept TermsAndCondition"
              }
            ],
            "line": 21,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41660026586,
              "status": "passed"
            },
            "comments": [
              {
                "line": 22,
                "value": "#    Then change personal details"
              },
              {
                "line": 23,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 24,
                "value": "#      | FirstName | Pulse |"
              },
              {
                "line": 25,
                "value": "#      | LastName  | QA    |"
              },
              {
                "line": 26,
                "value": "#      | Gender    | Male  |"
              },
              {
                "line": 27,
                "value": "#      | DOB         | 3-August-1972    |"
              },
              {
                "line": 28,
                "value": "#    And I confirm the registration"
              },
              {
                "line": 29,
                "value": "# Then I wait for 6 sec"
              }
            ],
            "line": 30,
            "name": "I enter \"Rash \" symptoms on Babylon screen And select \"Change in appearance of skin colour or texture\"",
            "match": {
              "arguments": [
                {
                  "val": "Rash ",
                  "offset": 9
                },
                {
                  "val": "Change in appearance of skin colour or texture",
                  "offset": 55
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 824208760,
              "status": "passed"
            },
            "comments": [
              {
                "line": 33,
                "value": "#      | Is there any other related symptom youâ€™d like to tell me about? | No  |"
              }
            ],
            "line": 34,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 370754579241,
              "status": "passed"
            },
            "line": 36,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Does your rash become lighter in colour when you press on it?",
                  "Yes"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Have you experienced any difficulty breathing?",
                  "I don\u0027t know##Submit"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Do you have any problems with your tongue?",
                  "None of the above##Submit"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Does any part of your face look swollen?",
                  "I don\u0027t know"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Do you have any of these problems with your eyelid(s)?",
                  "I don\u0027t know##Submit"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Do you have or have you recently had a fever?",
                  "Yes"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Do you have a cough?",
                  "Yes"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Is it a dry cough or are you bringing something up?",
                  "Dry"
                ],
                "line": 44
              },
              {
                "comments": [
                  {
                    "line": 45,
                    "value": "#      | What are you coughing up?                                                                | Clear or white phlegm                                  |"
                  }
                ],
                "cells": [
                  "Have you been coughing a lot more at night?",
                  "No"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Do you have a sore throat or any of these problems?",
                  "Swollen tonsils##Submit"
                ],
                "line": 47
              },
              {
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For months"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Have you gained or lost weight recently without trying to?",
                  "Lost weight unexpectedly"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Does the slightest knock or bump cause you to bruise?",
                  "No"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Do you have pain in your bones?",
                  "No"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Do you have a significantly weakened immune system due to an existing condition or from taking medication?",
                  "No"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Is there an unusual lump or swelling in the front middle part of your neck?",
                  "Yes"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Have either of your parents or any siblings been diagnosed with an overactive thyroid?",
                  "Yes"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Have either of your parents, or any siblings, ever been diagnosed with thyroid cancer?",
                  "Yes"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Do you have any pain in your abdomen?",
                  "No"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Do any of these describe your poos (stools)?",
                  "They are loose or watery (diarrhoea), and I\u0027m going more often than usual##Submit"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Have you had diarrhoea more than 6 times in one day?",
                  "Yes"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Do you regularly have diarrhoea at night?",
                  "No"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Have you noticed your skin or the whites of your eyes going yellow?",
                  "No"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8532142105,
              "status": "passed"
            },
            "comments": [
              {
                "line": 61,
                "value": "#      | Are you feeling tired, unwell, lethargic or run down?                                    | Yes                                                    |"
              },
              {
                "line": 62,
                "value": "#      | Which of these describes how you feel?                                                   | Generally unwell, tired, lethargic or fatigued##Submit |"
              },
              {
                "line": 63,
                "value": "#      | Have you gained or lost weight recently without trying to?                               | Lost weight unexpectedly                               |"
              },
              {
                "line": 64,
                "value": "#      | Does the slightest knock or bump cause you to bruise?                                    | No                                                     |"
              },
              {
                "line": 65,
                "value": "#      | Is there an unusual lump or swelling in the front middle part of your neck?              | No                                                     |"
              },
              {
                "line": 66,
                "value": "#      | Have either of your parents or any siblings been diagnosed with an overactive thyroid?   | No                                                     |"
              },
              {
                "line": 67,
                "value": "#      | Have either of your parents, or any siblings, ever been diagnosed with thyroid cancer?   | No                                                     |"
              },
              {
                "line": 68,
                "value": "#      | Do you have any pain in your abdomen?                                                    | No                                                     |"
              },
              {
                "line": 69,
                "value": "#      | Have you noticed your skin or the whites of your eyes going yellow?                      | No                                                     |"
              },
              {
                "line": 70,
                "value": "#      | Do you have a headache?                                                                  | No                                                     |"
              },
              {
                "line": 71,
                "value": "#      | Do you have any problems moving your neck?                                               | None of the above##Submit                              |"
              },
              {
                "line": 72,
                "value": "#      | Have you had a fit or fainted in the last month?                                         | None of the above##Submit                              |"
              },
              {
                "line": 73,
                "value": "#      | Is normal room lighting or daylight hurting your eyes?                                   | No                                                     |"
              },
              {
                "line": 74,
                "value": "#      | Do you feel sick or have you vomited?                                                    | None of the above##Submit                              |"
              },
              {
                "line": 75,
                "value": "#      | Do you have a fever?                                                                     | Yes                                                    |"
              },
              {
                "line": 76,
                "value": "#      | Are you feeling confused or unable to remember things?                                   | None of the above##Submit                              |"
              },
              {
                "line": 77,
                "value": "#      | Have you been noticeably sweating more than usual?                                       | None of the above##Submit                              |"
              },
              {
                "line": 78,
                "value": "#      | For how long have you been experiencing all of your symptoms?                            | For months                                             |"
              },
              {
                "line": 79,
                "value": "#      | Have you ever been diagnosed with a sexually transmitted infection?                      | No                                                     |"
              },
              {
                "line": 80,
                "value": "#      | Are your lymph glands swollen?                                                           | No                                                     |"
              },
              {
                "line": 81,
                "value": "#      | Do you look paler than usual?                                                            | No                                                     |"
              },
              {
                "line": 82,
                "value": "#      | Have you ever had sex (vaginal or anal)?                                                 | No                                                     |"
              },
              {
                "line": 83,
                "value": "#      | Is your heart beating faster than usual?                                                 | No                                                     |"
              },
              {
                "line": 84,
                "value": "#      | Have you noticed anything unusual about your stools?                                     | My stools are very watery##Submit                      |"
              },
              {
                "line": 85,
                "value": "#      | Have you had diarrhoea more than 6 times in one day?                                     | No                                                     |"
              },
              {
                "line": 86,
                "value": "#      | Do you regularly have diarrhoea at night?                                                | No                                                     |"
              },
              {
                "line": 87,
                "value": "#      | Have you ever consumed more than 14 units of alcohol a week on a regular basis           | None of the above                                      |"
              },
              {
                "line": 88,
                "value": "#      | Do you have joint pain in several areas of your body?                                    | No                                                     |"
              },
              {
                "line": 89,
                "value": "#      | Have you noticed any change to your vision?                                              | No                                                     |"
              },
              {
                "line": 90,
                "value": "#      | Do you have any chest pain?                                                              | No                                                     |"
              },
              {
                "line": 91,
                "value": "#      | One symptom that can be concerning is bleeding from the anus. Have you experienced this? | No                                                     |"
              },
              {
                "line": 92,
                "value": "#      | Have you been diagnosed with either of these thyroid conditions?                         | No                                                     |"
              }
            ],
            "line": 94,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Great, we\u0027re all done. Please remember, this service is only for general information purposes and isn\u0027t a personal or medical diagnosis. If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 95
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11982466918,
              "status": "passed"
            },
            "line": 97,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 801350278,
              "status": "passed"
            },
            "line": 98,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Overactive thyroid"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Thyrotoxic crisis"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 843550791,
              "status": "passed"
            },
            "line": 101,
            "name": "I select on \"Overactive thyroid\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "Overactive thyroid",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 51
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3821989021,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Overactive thyroid"
                ],
                "line": 103
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 104
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 105
              },
              {
                "cells": [
                  "Some of your answers indicate that this condition could be the cause:"
                ],
                "line": 106
              },
              {
                "cells": [
                  "Family history of hyperthyroidism"
                ],
                "line": 107
              },
              {
                "cells": [
                  "Unintentional weight loss"
                ],
                "line": 108
              },
              {
                "cells": [
                  "Diarrhoea"
                ],
                "line": 109
              },
              {
                "cells": [
                  "Severe diarrhoea"
                ],
                "line": 110
              },
              {
                "cells": [
                  "Rash that becomes lighter when pressed"
                ],
                "line": 111
              },
              {
                "cells": [
                  "Swelling in neck"
                ],
                "line": 112
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 427242475,
              "status": "passed"
            },
            "line": 114,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2184969057,
              "status": "passed"
            },
            "line": 115,
            "name": "I select on \"Thyrotoxic crisis\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "Thyrotoxic crisis",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 50
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4028300667,
              "status": "passed"
            },
            "line": 116,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Thyrotoxic crisis"
                ],
                "line": 117
              },
              {
                "cells": [
                  "This is usually treated at the emergency department."
                ],
                "line": 118
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Family history of hyperthyroidism"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Unintentional weight loss"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Diarrhoea"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Severe diarrhoea"
                ],
                "line": 123
              },
              {
                "cells": [
                  "Rash that becomes lighter when pressed"
                ],
                "line": 124
              },
              {
                "cells": [
                  "Fever"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Swelling in neck"
                ],
                "line": 126
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13640293996,
              "status": "passed"
            },
            "line": 128,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16330558256,
              "status": "passed"
            },
            "line": 129,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Human Immune Virus workflow is working as expected",
    "description": "Following condition should meet to run this script:\nAge:25\nSex:Male\nCountry:Singapore",
    "id": "verify-the-babylon-human-immune-virus-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonHumanImmVirusRash.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonVirusRash"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 54824,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19483,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 8,
        "name": "User should be able to access Babylon from Pulse app and perform Groin mass workflow",
        "description": "",
        "id": "verify-the-babylon-groin-mass-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-groin-mass-workflow",
        "after": [
          {
            "result": {
              "duration": 35689,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6359,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10501702880,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 152003,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${Babylon.hernia}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.hernia}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12192257714,
              "status": "passed"
            },
            "line": 11,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18416111224,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 14
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 422536964,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000220074,
              "status": "passed"
            },
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8287079040,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000313740,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 14 sec",
            "match": {
              "arguments": [
                {
                  "val": "14",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8833053160,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#    Then I click skip button"
              },
              {
                "line": 20,
                "value": "#    And I navigate to Babylon Page and Accept TermsAndCondition"
              }
            ],
            "line": 21,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000230301,
              "status": "passed"
            },
            "comments": [
              {
                "line": 22,
                "value": "#    Then change personal details"
              },
              {
                "line": 23,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 24,
                "value": "#      | FirstName | Pulse |"
              },
              {
                "line": 25,
                "value": "#      | LastName  | QA    |"
              },
              {
                "line": 26,
                "value": "#      | Gender    | Male  |"
              },
              {
                "line": 27,
                "value": "#      | DOB         | 3-August-1972    |"
              },
              {
                "line": 28,
                "value": "#    And I confirm the registration"
              }
            ],
            "line": 29,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42176601852,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter \"Groin mass\" symptoms on Babylon screen And select \"A lump under the skin at the hip crease.\"",
            "match": {
              "arguments": [
                {
                  "val": "Groin mass",
                  "offset": 9
                },
                {
                  "val": "A lump under the skin at the hip crease.",
                  "offset": 60
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 799530073,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | Is there any other related symptom youâ€™d like to tell me about? | No                                                             |"
              }
            ],
            "line": 32,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5124660300,
              "status": "passed"
            },
            "line": 34,
            "name": "verify user is landed to inguinal hernia consultation screen",
            "match": {
              "location": "BabylonSteps.verifyInguinalHerniaLandingScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 277074415410,
              "status": "passed"
            },
            "line": 35,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What best describes the swelling in your groin?",
                  "It comes and goes depending on my position or if I press on it"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Have you injured your groin recently?",
                  "No"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Do you have pain in your groin?",
                  "No"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Do you have any pain in your abdomen?",
                  "No"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Do you have any pain in your testicles?",
                  "No"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Have you noticed any of these changes in your testicles?",
                  "None of the above##Submit"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Does it hurt or sting when you urinate?",
                  "No"
                ],
                "line": 42
              },
              {
                "cells": [
                  "When urinating, have you noticed any of the following?",
                  "None of the above##Submit"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Do you have or have you recently had a fever?",
                  "No"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Do you feel sick or have you vomited?",
                  "None of the above##Submit"
                ],
                "line": 45
              },
              {
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For months"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Have you gained or lost weight recently without trying to?",
                  "Lost weight unexpectedly"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Have you ever had sex (vaginal or anal)?",
                  "No"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Do you have a cough?",
                  "No"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Do any of these describe your poos (stools)?",
                  "None of the above##Submit"
                ],
                "line": 50
              },
              {
                "cells": [
                  "One symptom that can be concerning is bleeding from the anus. Have you experienced this?",
                  "No"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Have you been diagnosed with either of these thyroid conditions?",
                  "No"
                ],
                "line": 52
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6776700568,
              "status": "passed"
            },
            "comments": [
              {
                "line": 54,
                "value": "#      | Do you have a body mass index (BMI) over 30 or has a medical professional told you that you\u0027re obese? | No                        |"
              },
              {
                "line": 55,
                "value": "#      | Have you lifted any heavy objects recently?                                                           | Yes                       |"
              },
              {
                "line": 56,
                "value": "#      | Have you recently come into contact with someone who has tuberculosis?                                | No                        |"
              },
              {
                "line": 57,
                "value": "#      | Have you felt a lump in your abdomen?                                                                 | No                        |"
              },
              {
                "line": 58,
                "value": "#      | Do you have pain in your back?                                                                        | No                        |"
              },
              {
                "line": 59,
                "value": "#      | Have you noticed any abnormal muscle weakness lately?                                                 | None of the above##Submit |"
              },
              {
                "line": 60,
                "value": "#      | Is your stomach bloated or swollen?                                                                   | None of the above##Submit |"
              },
              {
                "line": 61,
                "value": "#      | Has there been a significant change in your bowel habits, lasting for a few days or more?             | No                        |"
              },
              {
                "line": 62,
                "value": "#      | Have you noticed anything unusual about your stools?                                                  | None of the above##Submit |"
              },
              {
                "line": 63,
                "value": "#      | Have you noticed any of these issues when you pass stool?                                             | None of the above##Submit |"
              },
              {
                "line": 64,
                "value": "#      | This is a bit personal, but have you noticed any of these problems around your anus?                  | None of the above##Submit |"
              },
              {
                "line": 65,
                "value": "#      | For how long have you been experiencing all of your symptoms?                                         | For months                |"
              },
              {
                "line": 66,
                "value": "#      | Do you have a body mass index (BMI) over 30 or has a medical professional told you that you\u0027re obese? | No                        |"
              },
              {
                "line": 67,
                "value": "#"
              },
              {
                "line": 68,
                "value": "#      | Have you felt a lump in your abdomen?                                                                 | No                        |"
              },
              {
                "line": 69,
                "value": "#      | Do you currently have any of these prostate conditions?                                               | No##Submit                |"
              },
              {
                "line": 70,
                "value": "#      | Have you been diagnosed with a connective tissue disorder?                                            | No                        |"
              },
              {
                "line": 71,
                "value": "#      | Have you gained or lost weight recently without trying to?                                            | No                        |"
              },
              {
                "line": 72,
                "value": "#"
              },
              {
                "line": 73,
                "value": "#"
              },
              {
                "line": 74,
                "value": "#      | Are you having any problems passing urine or going more or less frequently than usual?                | No                        |"
              },
              {
                "line": 75,
                "value": "#      | Do you have bowel incontinence?                                                                       | No                        |"
              },
              {
                "line": 76,
                "value": "#      | This might sound a bit strange but does your anus feel numb when wiping?                              | No                        |"
              }
            ],
            "line": 78,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Great, we\u0027re all done. Please remember, this service is only for general information purposes and isn\u0027t a personal or medical diagnosis. If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 79
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10527907976,
              "status": "passed"
            },
            "line": 81,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 437912953,
              "status": "passed"
            },
            "comments": [
              {
                "line": 82,
                "value": "#   And Verify following 2 possible causes are displayed"
              },
              {
                "line": 83,
                "value": "#    When I click on \"inguinal hernia\" cause"
              }
            ],
            "line": 84,
            "name": "I click on \"inguinal hernia\" cause",
            "match": {
              "arguments": [
                {
                  "val": "inguinal hernia",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2256240909,
              "status": "passed"
            },
            "line": 85,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Uncomplicated inguinal hernia"
                ],
                "line": 86
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 87
              },
              {
                "comments": [
                  {
                    "line": 88,
                    "value": "#      | Lifting heavy objects              |"
                  }
                ],
                "cells": [
                  "Reducible groin mass"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Groin mass or lump"
                ],
                "line": 90
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1067115828,
              "status": "passed"
            },
            "line": 92,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007804768,
              "status": "passed"
            },
            "line": 93,
            "name": "I click on \"femoral hernia\" cause",
            "match": {
              "arguments": [
                {
                  "val": "femoral hernia",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2311602414,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Uncomplicated femoral hernia"
                ],
                "line": 95
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 96
              },
              {
                "comments": [
                  {
                    "line": 97,
                    "value": "#      | Lifting heavy objects              |"
                  }
                ],
                "cells": [
                  "Reducible groin mass"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Groin mass or lump"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14109356893,
              "status": "passed"
            },
            "comments": [
              {
                "line": 101,
                "value": "#    And I click on back button to move back to possible causes screen"
              },
              {
                "line": 102,
                "value": "#    When I click on \"Something potentially serious\" cause"
              },
              {
                "line": 103,
                "value": "#    Then I verify following conditions are displayed"
              },
              {
                "line": 104,
                "value": "#      | Uncomplicated femoral hernia       |"
              },
              {
                "line": 105,
                "value": "#      | This usually requires seeing a GP. |"
              },
              {
                "line": 106,
                "value": "#      | Unintentional weight loss          |"
              },
              {
                "line": 107,
                "value": "#      | Groin mass or lump                 |"
              }
            ],
            "line": 109,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14048163645,
              "status": "passed"
            },
            "line": 110,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Groin Mass workflow is working as expected",
    "description": "Following condition should meet to run this script:\nAge:55\nSex:Male\nCountry:Singapore",
    "id": "verify-the-babylon-groin-mass-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonInguinalHernia.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonHernia"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 39493,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21107,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 10,
        "name": "User should be able to access Babylon from Pulse app and perform Prostatic Hyperplasia workflow",
        "description": "",
        "id": "verify-the-babylon-prostatic-hyperplasia-workflow-is-working-as-expected;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-prostatic-hyperplasia-workflow",
        "after": [
          {
            "result": {
              "duration": 58741,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8678,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 459013,
              "status": "passed"
            },
            "line": 11,
            "name": "I assign \"${pulse.babylon.prostatic.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.prostatic.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 60
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 427632,
              "status": "passed"
            },
            "line": 12,
            "name": "I assign \"${parity.password}\" to variable \"USER_PASSWORD\"",
            "match": {
              "arguments": [
                {
                  "val": "${parity.password}",
                  "offset": 10
                },
                {
                  "val": "USER_PASSWORD",
                  "offset": 43
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10762530706,
              "status": "passed"
            },
            "comments": [
              {
                "line": 13,
                "value": "# Given I generate random number and assign to variable \"RANDOM_NUMBER\""
              },
              {
                "line": 14,
                "value": "# And I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\""
              },
              {
                "line": 15,
                "value": "# And I calculate age of the user is 58 in \"dd-MM-yyyy\" format from current date and assign to variable \"DOB\""
              }
            ],
            "line": 16,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12594221077,
              "status": "passed"
            },
            "comments": [
              {
                "line": 17,
                "value": "# And user click on \"CONTINUE WITH EMAIL\" with Email button"
              },
              {
                "line": 18,
                "value": "# When user enters registration details"
              },
              {
                "line": 19,
                "value": "#  | FirstName   | testAutomation |"
              },
              {
                "line": 20,
                "value": "#  | LastName    | testAutomation |"
              },
              {
                "line": 21,
                "value": "#  | Email       | ${PULSE_EMAIL} |"
              },
              {
                "line": 22,
                "value": "#  | Password    | Pas$1234       |"
              },
              {
                "line": 23,
                "value": "# And taps on continue \"Sign_Up\" button"
              }
            ],
            "line": 24,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18330702218,
              "status": "passed"
            },
            "line": 25,
            "name": "I login into pulse app with below details",
            "match": {
              "location": "LoginSteps.loginToPulseApp(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 27
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000246826,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8869211271,
              "status": "passed"
            },
            "line": 29,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23160636883,
              "status": "passed"
            },
            "comments": [
              {
                "line": 30,
                "value": "#  Then I wait for 6 sec"
              },
              {
                "line": 31,
                "value": "#  Then I click skip button"
              }
            ],
            "line": 32,
            "name": "I navigate to Babylon Page and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonPageAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 41927487384,
              "status": "passed"
            },
            "comments": [
              {
                "line": 33,
                "value": "# Then I enter babylon registration details"
              },
              {
                "line": 34,
                "value": "# | FirstName | Pulse |"
              },
              {
                "line": 35,
                "value": "# | LastName  | QA    |"
              },
              {
                "line": 36,
                "value": "# | Gender    | Male  |"
              },
              {
                "line": 37,
                "value": "# | DOB       | {DOB} |"
              },
              {
                "line": 38,
                "value": "# And I confirm the registration"
              },
              {
                "line": 39,
                "value": "# Then I wait for 2 sec"
              }
            ],
            "line": 40,
            "name": "I enter \"Difficulty passing urine\" symptoms on Babylon screen And select \"Problems passing urine.\"",
            "match": {
              "arguments": [
                {
                  "val": "Difficulty passing urine",
                  "offset": 9
                },
                {
                  "val": "Problems passing urine.",
                  "offset": 74
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 919730555,
              "status": "passed"
            },
            "comments": [
              {
                "line": 41,
                "value": "#  When I handle questions and answer"
              },
              {
                "line": 43,
                "value": "#  | Is there any other related symptom youâ€™d like to tell me about? | No                                                               |"
              }
            ],
            "line": 44,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 396866243233,
              "status": "passed"
            },
            "line": 46,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Which problems are you having when urinating?",
                  "Flow isn\u0027t as strong as usual##Dribbling after urinating##Submit"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Does it hurt or sting when you urinate?",
                  "No"
                ],
                "line": 48
              },
              {
                "cells": [
                  "When urinating, have you noticed any of the following?",
                  "Urinating more often than usual##Urgently needing to urinate##Difficulty starting to urinate##Submit"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Does your urine look different to usual?",
                  "Yes"
                ],
                "line": 50
              },
              {
                "cells": [
                  "In what way does your urine look different?",
                  "None of the above##Submit"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Have you ever been diagnosed with 3 or more urinary tract infections in a single year?",
                  "No"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Do any of these describe your poos (stools)?",
                  "I don\u0027t know##Submit"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Do you have any pain in your abdomen?",
                  "No"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Do you feel sick or have you vomited?",
                  "None of the above##Submit"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Do you have or have you recently had a fever?",
                  "No"
                ],
                "line": 56
              },
              {
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For days"
                ],
                "line": 57
              },
              {
                "comments": [
                  {
                    "line": 58,
                    "value": "# | Are you feeling tired, unwell, lethargic or run down?                                                           | No                                                                                                   |"
                  },
                  {
                    "line": 59,
                    "value": "# | Has your appetite changed recently?                                                                             | None of the above                                                                                    |"
                  },
                  {
                    "line": 60,
                    "value": "# | Are you feeling confused or unable to remember things?                                                          | None of the above##Submit                                                                            |"
                  },
                  {
                    "line": 61,
                    "value": "# | Have you ever been diagnosed with a spinal cord injury?                                                         | No                                                                                                   |"
                  }
                ],
                "cells": [
                  "Have you noticed any of these issues when you pass stool?",
                  "None of the above##Submit"
                ],
                "line": 62
              },
              {
                "cells": [
                  "One symptom that can be concerning is bleeding from the anus. Have you experienced this?",
                  "No"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Have you gained or lost weight recently without trying to?",
                  "Lost weight unexpectedly"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Do you have pain in your back?",
                  "No"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Have you noticed any abnormal muscle weakness lately?",
                  "None of the above##Submit"
                ],
                "line": 66
              },
              {
                "cells": [
                  "This might sound a bit strange but does your anus feel numb when wiping?",
                  "No"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Do you have bowel incontinence?",
                  "No"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Have you been involved in a traffic accident recently?",
                  "No"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Do you currently have any of these prostate conditions?",
                  "No##Submit"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Have you been shivering intensely or uncontrollably?",
                  "No"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Have you had any of these problems with your penis?",
                  "None of the above##Submit"
                ],
                "line": 72
              },
              {
                "cells": [
                  "Do you have any pain in your testicles?",
                  "No"
                ],
                "line": 73
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6848084695,
              "status": "passed"
            },
            "comments": [
              {
                "line": 75,
                "value": "#  | This is a bit personal, but have you noticed any of these problems around your anus?                            | None of the above##Submit                                                                            |"
              },
              {
                "line": 76,
                "value": "#  | For how long have you been experiencing all of your symptoms?                                                   | For months                                                                                           |"
              },
              {
                "line": 77,
                "value": "#  | Do you have difficulty sleeping?                                                                                | No                                                                                                   |"
              },
              {
                "line": 78,
                "value": "#  | Do you have any of the following problems?                                                                      | I don\u0027t know                                                                                         |"
              },
              {
                "line": 79,
                "value": "#  | When you ejaculate, do you find it painful?                                                                     | I don\u0027t know                                                                                         |"
              },
              {
                "line": 80,
                "value": "#  | Has your father, or any brothers, ever been diagnosed with prostate cancer?                                     | No                                                                                                   |"
              },
              {
                "line": 81,
                "value": "#  | Have you noticed any of these changes in your testicles?                                                        | I don\u0027t know##Submit                                                                                 |"
              },
              {
                "line": 82,
                "value": "#  | Do you have any of these problems with the skin around your genitals?                                           | I don\u0027t know##Submit                                                                                 |"
              },
              {
                "line": 83,
                "value": "#  | Are you much thirstier than usual?                                                                              | No                                                                                                   |"
              },
              {
                "line": 84,
                "value": "#  | Have you been diagnosed with diabetes?                                                                          | No                                                                                                   |"
              },
              {
                "line": 85,
                "value": "#  | Have either of your parents, or any siblings, ever been diagnosed with type 1 diabetes?                         | No                                                                                                   |"
              },
              {
                "line": 86,
                "value": "#  | Have either of your parents, or any siblings, ever been diagnosed with type 2 diabetes?                         | No                                                                                                   |"
              },
              {
                "line": 87,
                "value": "#  | Have you noticed your skin or the whites of your eyes going yellow?                                             | No                                                                                                   |"
              },
              {
                "line": 88,
                "value": "#  | Have you ever consumed more than 14 units of alcohol a week on a regular basis? 1 unit is equal to 1 small shot of spirit, 1 small glass of wine or 1/2 a pint of beer. | I don\u0027t know                                                                                         |"
              }
            ],
            "line": 90,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 91
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12411868809,
              "status": "passed"
            },
            "line": 92,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1361716666,
              "status": "passed"
            },
            "line": 93,
            "name": "Verify following possible causes are displayed",
            "match": {
              "location": "BabylonSteps.verifyPossibleCauses(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Benign Prostatic Hyperplasia"
                ],
                "line": 95
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 896361731,
              "status": "passed"
            },
            "line": 96,
            "name": "I select on \"Benign Prostatic Hyperplasia\" cause with offset 100 in report",
            "match": {
              "arguments": [
                {
                  "val": "Benign Prostatic Hyperplasia",
                  "offset": 13
                },
                {
                  "val": "100",
                  "offset": 61
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3726863935,
              "status": "passed"
            },
            "line": 97,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Benign Prostatic Hyperplasia"
                ],
                "line": 98
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 99
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Some of your answers indicate that this condition could be the cause:"
                ],
                "line": 101
              },
              {
                "cells": [
                  "Difficulty starting urination"
                ],
                "line": 102
              },
              {
                "cells": [
                  "Increased frequency of urination"
                ],
                "line": 103
              },
              {
                "cells": [
                  "Urgent need to urinate"
                ],
                "line": 104
              },
              {
                "cells": [
                  "Decreased flow of urine"
                ],
                "line": 105
              },
              {
                "cells": [
                  "Dribbling of urine"
                ],
                "line": 106
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1133327068,
              "status": "passed"
            },
            "line": 108,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2020096474,
              "status": "passed"
            },
            "line": 109,
            "name": "I select on \"Something potentially serious\" cause with offset 500 in report",
            "match": {
              "arguments": [
                {
                  "val": "Something potentially serious",
                  "offset": 13
                },
                {
                  "val": "500",
                  "offset": 62
                }
              ],
              "location": "BabylonSteps.clickOnCauseAtOffset(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3812106499,
              "status": "passed"
            },
            "line": 110,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Something potentially serious"
                ],
                "line": 111
              },
              {
                "cells": [
                  "This usually requires seeing a GP."
                ],
                "line": 112
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Unintentional weight loss"
                ],
                "line": 114
              },
              {
                "cells": [
                  "Difficulty starting urination"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Increased frequency of urination"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Urgent need to urinate"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Decreased flow of urine"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Dribbling of urine"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13020648002,
              "status": "passed"
            },
            "line": 121,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15891972202,
              "status": "passed"
            },
            "line": 122,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40408,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 124,
        "name": "User should be able to view the chat history in Babylon system checker screen after consultation",
        "description": "",
        "id": "verify-the-babylon-prostatic-hyperplasia-workflow-is-working-as-expected;user-should-be-able-to-view-the-chat-history-in-babylon-system-checker-screen-after-consultation",
        "after": [
          {
            "result": {
              "duration": 1050235417,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18073,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 124329,
              "status": "passed"
            },
            "line": 125,
            "name": "I assign \"${pulse.babylon.prostatic.username}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${pulse.babylon.prostatic.username}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 60
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32197,
              "status": "passed"
            },
            "line": 126,
            "name": "I assign \"${parity.password}\" to variable \"USER_PASSWORD\"",
            "match": {
              "arguments": [
                {
                  "val": "${parity.password}",
                  "offset": 10
                },
                {
                  "val": "USER_PASSWORD",
                  "offset": 43
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11128447831,
              "status": "passed"
            },
            "line": 127,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12976809320,
              "status": "passed"
            },
            "comments": [
              {
                "line": 128,
                "value": "#And user click on \"CONTINUE WITH EMAIL\" with Email button"
              },
              {
                "line": 129,
                "value": "#And I assign \"pulse726090211217@mailsac.com\" to variable \"PULSE_EMAIL\""
              }
            ],
            "line": 130,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18996717991,
              "status": "passed"
            },
            "line": 131,
            "name": "I login into pulse app with below details",
            "match": {
              "location": "LoginSteps.loginToPulseApp(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 132
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 133
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000205096,
              "status": "passed"
            },
            "comments": [
              {
                "line": 134,
                "value": "#Then I wait for 45 sec"
              },
              {
                "line": 135,
                "value": "# Given I create connection for api service"
              },
              {
                "line": 136,
                "value": "# And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
              },
              {
                "line": 137,
                "value": "# And I wait until OTP mail received"
              },
              {
                "line": 138,
                "value": "#   | UserName | ${PULSE_EMAIL} |"
              },
              {
                "line": 139,
                "value": "# And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
              },
              {
                "line": 140,
                "value": "# And I enter \"${EMAIL_OTP}\" OTP"
              }
            ],
            "line": 141,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8358626744,
              "status": "passed"
            },
            "line": 142,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24285665339,
              "status": "passed"
            },
            "line": 143,
            "name": "I navigate to Babylon Page and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonPageAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 515351642,
              "status": "passed"
            },
            "line": 144,
            "name": "I click on view chat history",
            "match": {
              "location": "BabylonSteps.clickOnViewChatScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 192501137,
              "status": "passed"
            },
            "line": 145,
            "name": "verify user is landed to Babylon Chat History Screen",
            "match": {
              "location": "BabylonSteps.verifyBabylonChatHistoryScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000222701,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8316796091,
              "status": "passed"
            },
            "line": 147,
            "name": "I verify the chat history is \"present\"",
            "match": {
              "arguments": [
                {
                  "val": "present",
                  "offset": 30
                }
              ],
              "location": "BabylonSteps.verifyBabyChatHistoryAndClickOnLatestChat(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24675483314,
              "status": "passed"
            },
            "line": 148,
            "name": "I get the count of babylon chat history in variable \"CHAT_HISTORY_COUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "CHAT_HISTORY_COUNT",
                  "offset": 53
                }
              ],
              "location": "BabylonSteps.getBabulonChatCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2520308579,
              "error_message": "java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:458)\n\tat com.onepulse.app.screens.babylon.BabylonSymptomsScreen.clickOnBabylonLatestChatHistoryLog(BabylonSymptomsScreen.java:675)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.openLatestBabylonChatHistoryLog(BabylonSteps.java:415)\n\tat âœ½.Then I open latest babylon chat history logs(features/sg/health/babylon/BabylonProstaticHyperplasia.feature:149)\n",
              "status": "failed"
            },
            "line": 149,
            "name": "I open latest babylon chat history logs",
            "match": {
              "location": "BabylonSteps.openLatestBabylonChatHistoryLog()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 151,
                "value": "##PCAPULSE-1005 Defect coverage ,below step is failing due to open defect"
              }
            ],
            "line": 152,
            "name": "I verify the chat history should show full chat",
            "match": {
              "location": "BabylonSteps.verifyFullChatInBabylonChatHistoryLogs()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I close the babylon latest Chat History screen",
            "match": {
              "location": "BabylonSteps.iCloseTheBabylonLatestChatHistoryScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 154,
                "value": "##PCAPULSE-1015"
              }
            ],
            "line": 155,
            "name": "I verify a new chat history is not created",
            "match": {
              "location": "BabylonSteps.verifyNewChatIsNotCreated()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "I move back to home screen from view chat history screen",
            "match": {
              "location": "BabylonSteps.moveToHomeScreenFromBabylonChatHistoryScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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sPFTp+V8fZAH8lS/wVEIH4VZsnJ1QyDJ0tJw21eSd95bZl169LNxL79qRctX2tKV74fn7x499q15C0MUHuDIlybZI0/1sYVFS8PzP/PcCOsbzYBho+yDteus00Ndbcc3O8N9vaL37gECigzktZmzbEB0elWIBzI8isFXhMmvvWFDRo0L24sTyfBJ7wfn86NfCtv8u7U8hHweyOO9ng0rkc+0N2cXDMRXoCf7DrQ169ZHr3dwJfPXmzrjrXB7cnT/6IlTwu0VH6yxB7v1iFav6vAePA6/tnF9Bg+PgnonrCa+D98aiUORgfgn9f2PPRWd1iTz78q5BnklOlD9gPVTL/+SOb9W8bDqo1GBNHWK1TiQqmjVmbeoKMQ0eOTB/RsHMnTs+IbbGzZ+YZ0feSKsVB6IfztkvfdWrLJufQaE9+3vGTgUGUh1tDr0jz6B/fRl9oJFtmjJ8ujT/I3otGl7wUD82sAPag+r96Ch0enN8HCg+uP8WsYv1utXANfcQLbv+DpcP7warWhdnn4m7DvixYkhFr/fX+/h7r3t4/Ub7IXxk8NpnvNA6k+3nP/UzL+U26PfvuObhu1AU2Qgzi+Wl0QH4KjxL9vI6KLYr0v84t2vL+p/zOs/UZoxa144lXkj+nXCK9PDOb9fRPt/oar0QFm4/hgzcWq0GmQantuvAfx56vmPdz00PwXyg9lv+8X5m3MXhOuaKdPftG927Q77frntq3DN4ff56y6L3suIcRNt5pz5VplKhX08XD8ta2z0hCkhXKA5DhnI8cRXr54DhoQVB2iOVhOI//dM/EK/35CRlslkVzFAaTWB+E/b/FSv/v/PAZqj1QQCfBcEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAggEAghtioqKjGGYwtMm4v/DMEzhiW1gGCY7sQ0Mw2QntoFhmOzENjAMk53YBoZhshPbwDBMdmIbGIbJTmzDMT1t27a1k08+Oba9pc2pp55qHTt2tE6dOsnxfU455ZTY45mjNrENx+y0a9fOFi9ebKeffnrsvpY0p512mm3bti3/n2po0tatW8Nj8p+HOSoT23BMzllnnWXLly9v8XH43HPPPfkNHFLnzp1jz8MclYltOCbHTzMWLVpkHTp0iN3X0sZPmw7X7bffHnse5qhMbMMxOx7J/Pnz7Ywzzojd15LmxBNPtLlz5+Y30KQ5c+aEx+Q/D3NUJrbhmJ6TTjrJTjjhhNj2ljb+ezjzzDOtffv2cnyf4+H324IntoFhmOzENjAMk53YBoZhshPbwDBMdmIbGIbJTmwDwzDZiW1gGCY7sQ0Mw3w7/wPI8gVuzkts9AAAAABJRU5ErkJggg\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 157,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Prostatic HyperPlasia workflow is working as expected",
    "description": "Following condition should meet to run this script:\nAge:58\nSex:Male\nCountry:Singapore",
    "id": "verify-the-babylon-prostatic-hyperplasia-workflow-is-working-as-expected",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonProstaticHyperplasia.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_prostatic_hyperplasia"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13624,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 8,
        "name": "User should be able to access Babylon from Pulse app and perform Rib Fracture workflow",
        "description": "",
        "id": "verify-the-babylon-rib-fracture-workflow-is-working-as-expected-and-user-can-the-chat-history-after-consultation;user-should-be-able-to-access-babylon-from-pulse-app-and-perform-rib-fracture-workflow",
        "after": [
          {
            "result": {
              "duration": 35342,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20771,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10941916106,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 216989,
              "status": "passed"
            },
            "line": 10,
            "name": "I assign \"${Babylon.rib}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${Babylon.rib}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 39
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11891599447,
              "status": "passed"
            },
            "line": 11,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18204449803,
              "status": "passed"
            },
            "line": 12,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 14
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 302694943,
              "status": "passed"
            },
            "line": 15,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000217782,
              "status": "passed"
            },
            "comments": [
              {
                "line": 16,
                "value": "# Then I wait for 59 sec"
              }
            ],
            "line": 17,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7624090384,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9478680676,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#  Then I wait for 6 sec"
              },
              {
                "line": 20,
                "value": "#    Then I click skip button"
              },
              {
                "line": 21,
                "value": "#    And I navigate to Babylon Page and Accept TermsAndCondition"
              }
            ],
            "line": 22,
            "name": "I navigate to Babylon Symptoms Page",
            "match": {
              "location": "BabylonSteps.navigateToBabylonSymptomsPage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42283778042,
              "status": "passed"
            },
            "comments": [
              {
                "line": 23,
                "value": "#    Then change personal details"
              },
              {
                "line": 24,
                "value": "#    Then I enter babylon registration details"
              },
              {
                "line": 25,
                "value": "#      | FirstName | Pulse |"
              },
              {
                "line": 26,
                "value": "#      | LastName  | QA    |"
              },
              {
                "line": 27,
                "value": "#      | Gender    | Male  |"
              },
              {
                "line": 28,
                "value": "#      | DOB         | 3-August-1972    |"
              },
              {
                "line": 29,
                "value": "#    And I confirm the registration"
              },
              {
                "line": 30,
                "value": "# Then I wait for 6 sec"
              }
            ],
            "line": 31,
            "name": "I enter \"Chest Pain\" symptoms on Babylon screen And select \"Pain in the chest.\"",
            "match": {
              "arguments": [
                {
                  "val": "Chest Pain",
                  "offset": 9
                },
                {
                  "val": "Pain in the chest.",
                  "offset": 60
                }
              ],
              "location": "BabylonSteps.enterAndSelectBabylonSymptoms(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 724184413,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Ok button after noting the caseid:",
            "match": {
              "location": "BabylonSteps.verifyCaseIdTextAndClickOkBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Thanks for taking part in user testing. Please record the following case id"
                ],
                "line": 33
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4814994209,
              "status": "passed"
            },
            "line": 34,
            "name": "verify user is landed to Rib Fracture consultation screen",
            "match": {
              "location": "BabylonSteps.verifyRibFractureLandingScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85242020571,
              "status": "passed"
            },
            "line": 35,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Where in your chest is the pain?",
                  "Right##Submit"
                ],
                "line": 36
              },
              {
                "cells": [
                  "How would you describe your chest pain?",
                  "Dull or aching"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Is your chest pain close to the worst pain you can imagine?",
                  "No"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Did your chest pain start very suddenly or gradually?",
                  "Gradually"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Does the pain in your chest go anywhere else?",
                  "No##Submit"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Do any of these make your chest pain better or worse?",
                  "Moving around makes it worse##Submit"
                ],
                "line": 41
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 176872917321,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#      | Is there any other related symptom youâ€™d like to tell me about? | No                    |"
              }
            ],
            "line": 44,
            "name": "I handle questions and answer",
            "match": {
              "location": "BabylonSteps.enterQuestionsAndAnswer(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "How long have you had all of your symptoms for?",
                  "For days"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Have you been diagnosed with diabetes?",
                  "No"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Are you diagnosed with high cholesterol?",
                  "No"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Do you currently have a diagnosis of the following blood pressure problems?",
                  "No"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Do you smoke cigarettes?",
                  "I\u0027ve never smoked"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Do you have a body mass index (BMI) over 30 or has a medical professional told you that you\u0027re obese?",
                  "No"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Do any of the following apply to you?",
                  "None of the above##Submit"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Have you experienced any difficulty breathing?",
                  "None of the above##Submit"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Do you have a cough?",
                  "No"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Is your ribcage or chest painful when you press or touch it?",
                  "Yes"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Have you injured your chest recently?",
                  "Yes"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6337530266,
              "status": "passed"
            },
            "comments": [
              {
                "line": 56,
                "value": "#      | Have you been having heart palpitations?                                    | No                        |"
              },
              {
                "line": 57,
                "value": "#      | Have you had a fit or fainted in the last month?                            | None of the above##Submit |"
              },
              {
                "line": 58,
                "value": "#      | Do you have pain in your back?                                              | No                        |"
              },
              {
                "line": 59,
                "value": "#      | Have you lifted any heavy objects recently?                                 | No                        |"
              },
              {
                "line": 60,
                "value": "#      | Have you been diagnosed with rheumatoid arthritis?                          | No                        |"
              },
              {
                "line": 61,
                "value": "#      | Does your chest feel tight when breathing?                                  | No                        |"
              },
              {
                "line": 62,
                "value": "#      | Have you previously been diagnosed with an anxiety disorder?                | No                        |"
              },
              {
                "line": 63,
                "value": "#      | Have you ever had a panic attack?                                           | No                        |"
              }
            ],
            "line": 64,
            "name": "I verify the closure summary and click on continue button",
            "match": {
              "location": "BabylonSteps.verifyClosureSummaryAndClickContinueBtn(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "text",
                  "Great, we\u0027re all done. Please remember, this service is only for general information purposes and isn\u0027t a personal or medical diagnosis. If your symptoms persist, change or worsen, or you are concerned seek further advice."
                ],
                "line": 65
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10543943411,
              "status": "passed"
            },
            "line": 67,
            "name": "I click on view results to see the possible causes",
            "match": {
              "location": "BabylonSteps.clickViewResults()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26057067767,
              "status": "passed"
            },
            "line": 68,
            "name": "Verify following 3 possible causes are displayed",
            "match": {
              "location": "BabylonSteps.avialabilityOfThreeOptions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 351557806,
              "status": "passed"
            },
            "line": 69,
            "name": "I click on \"Chest strain\" cause",
            "match": {
              "arguments": [
                {
                  "val": "Chest strain",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3139020749,
              "status": "passed"
            },
            "line": 70,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Chest wall muscle strain"
                ],
                "line": 71
              },
              {
                "cells": [
                  "This can usually be treated at home."
                ],
                "line": 72
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Some of your answers indicate that this condition could be the cause:"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Injury of chest wall"
                ],
                "line": 75
              },
              {
                "cells": [
                  "Pain in chest made worse with movement of ribs"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Right sided chest pain"
                ],
                "line": 77
              },
              {
                "cells": [
                  "Dull chest pain"
                ],
                "line": 78
              },
              {
                "cells": [
                  "Painful to press on chest"
                ],
                "line": 79
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 360243609,
              "status": "passed"
            },
            "line": 81,
            "name": "I click on back button to move back to possible causes screen",
            "match": {
              "location": "BabylonSteps.moveBackToSymptoms()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4235934513,
              "status": "passed"
            },
            "comments": [
              {
                "line": 82,
                "value": "#  When I click on \"Broken Rib\" cause"
              }
            ],
            "line": 83,
            "name": "I click on \"Costochondritis\" cause",
            "match": {
              "arguments": [
                {
                  "val": "Costochondritis",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnCause(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3023531105,
              "status": "passed"
            },
            "line": 84,
            "name": "I verify following conditions are displayed",
            "match": {
              "location": "BabylonSteps.reportDetailsView(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Costochondritis"
                ],
                "line": 85
              },
              {
                "cells": [
                  "This can usually be treated at home."
                ],
                "line": 86
              },
              {
                "cells": [
                  "Why this condition could be the potential cause?"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Injury of chest wall"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Pain in chest made worse with movement of ribs"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Right sided chest pain"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Dull chest pain"
                ],
                "line": 91
              },
              {
                "cells": [
                  "Painful to press on chest"
                ],
                "line": 92
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13682568187,
              "status": "passed"
            },
            "comments": [
              {
                "line": 94,
                "value": "#    And I click on back button to move back to possible causes screen"
              },
              {
                "line": 95,
                "value": "#    When I click on \"Costochondritis\" cause"
              },
              {
                "line": 96,
                "value": "#    Then I verify following conditions are displayed"
              },
              {
                "line": 97,
                "value": "#      | Costochondritis                                  |"
              },
              {
                "line": 98,
                "value": "#      | This can usually be treated at home.             |"
              },
              {
                "line": 99,
                "value": "#      | Why this condition could be the potential cause? |"
              },
              {
                "line": 100,
                "value": "#      | Injury of chest wall                             |"
              },
              {
                "line": 101,
                "value": "#      | Chest pain that started suddenly                 |"
              },
              {
                "line": 102,
                "value": "#      | Right sided chest pain                           |"
              },
              {
                "line": 103,
                "value": "#      | Dull chest pain                                  |"
              },
              {
                "line": 104,
                "value": "#      | Painful to press on chest                        |"
              }
            ],
            "line": 105,
            "name": "I click on back button to move back to home",
            "match": {
              "location": "BabylonSteps.moveBackToHome()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16359686755,
              "status": "passed"
            },
            "line": 106,
            "name": "I sign out from pulse app",
            "match": {
              "location": "LoginSteps.signOutFromPulseApp()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon Rib Fracture workflow is working as expected and user can the chat history after consultation",
    "description": "Following condition should meet to run this script:\nAge:39\nSex:Male\nCountry:Singapore",
    "id": "verify-the-babylon-rib-fracture-workflow-is-working-as-expected-and-user-can-the-chat-history-after-consultation",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonRibFracture.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylonRibFacture"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 41978,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20024,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 51373,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8997,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 641356,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65021,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10993747641,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12656791142,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000280815,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10415213472,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000235172,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 340001116,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8177142345,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 518406982,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000208939,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27184369487,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000211123,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10640061403,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 166517898,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1610114122,
              "status": "passed"
            },
            "line": 26,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 959397394,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6809964935,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3213085629,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 30,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 31,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1242933619,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6107931263,
              "status": "passed"
            },
            "line": 33,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 969899528,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2829601313,
              "status": "passed"
            },
            "line": 35,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 952902523,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 824731754,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1966766264,
              "status": "passed"
            },
            "line": 38,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 882818975,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2234899846,
              "status": "passed"
            },
            "line": 40,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 878305786,
              "status": "passed"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3760753555,
              "status": "passed"
            },
            "line": 42,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 906901141,
              "status": "passed"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2763445236,
              "status": "passed"
            },
            "line": 44,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 642687434,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2219388461,
              "status": "passed"
            },
            "line": 46,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 578290182,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3412818947,
              "status": "passed"
            },
            "line": 48,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 488454022,
              "status": "passed"
            },
            "line": 49,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4562218059,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3309580087,
              "status": "passed"
            },
            "line": 51,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dietician_Negative"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 58,
            "value": "#    Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 59,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 40126,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19750,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 42685,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8050,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9179431135,
              "status": "passed"
            },
            "line": 62,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12511222016,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2847694592,
              "status": "passed"
            },
            "line": 64,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169189743,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000291040,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3194184430,
              "status": "passed"
            },
            "line": 67,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 68
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3257299695,
              "status": "passed"
            },
            "line": 69,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3514068904,
              "status": "passed"
            },
            "line": 71,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "124-12-2025"
                ],
                "line": 72
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 852531997,
              "status": "passed"
            },
            "line": 73,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 868906181,
              "status": "passed"
            },
            "line": 74,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32755,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18459,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 54399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8175,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1634972000,
              "status": "passed"
            },
            "line": 77,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1346565504,
              "status": "passed"
            },
            "line": 78,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 855517536,
              "status": "passed"
            },
            "line": 79,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 794497285,
              "status": "passed"
            },
            "line": 80,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 81
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3020798966,
              "status": "passed"
            },
            "line": 82,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 83
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3940955860,
              "status": "passed"
            },
            "line": 84,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1148595808,
              "status": "passed"
            },
            "line": 86,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3747636785,
              "status": "passed"
            },
            "comments": [
              {
                "line": 87,
                "value": "#    And Enter the year Name in Eductaion Details Screen"
              },
              {
                "line": 88,
                "value": "#      | ServiceNumber | 2020 |"
              }
            ],
            "line": 89,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 90
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 874232908,
              "status": "passed"
            },
            "line": 91,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4167344289,
              "status": "passed"
            },
            "line": 92,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 912834466,
              "status": "passed"
            },
            "line": 94,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 955354349,
              "status": "passed"
            },
            "line": 95,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 96,
            "value": "#"
          },
          {
            "line": 97,
            "value": "#"
          },
          {
            "line": 98,
            "value": "#    # Valid Failure"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 35728,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19455,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 100,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 1089005154,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16385,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2016827819,
              "status": "passed"
            },
            "line": 101,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2674407424,
              "status": "passed"
            },
            "line": 102,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2027023128,
              "status": "passed"
            },
            "line": 103,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2690234631,
              "status": "passed"
            },
            "line": 104,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2017702689,
              "status": "passed"
            },
            "line": 105,
            "name": "I Enter the \"Start Date\" in \"2030\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1957885779,
              "status": "passed"
            },
            "line": 106,
            "name": "I Enter the \"End Date\" in \"2010\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 722841108,
              "status": "passed"
            },
            "line": 107,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1938840122,
              "status": "passed"
            },
            "line": 108,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 833150641,
              "status": "passed"
            },
            "line": 109,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90853260,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: java.lang.IllegalStateException: Unable to evaluate expression. See cause\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 10cf250a-61ce-40a9-8d98-e446854733bd\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[Contains(@text,\u0027Add Experience\u0027)]}\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:255)\n\tat com.onepulse.app.screens.DieticianScreen.VerifyAddExperience(DieticianScreen.java:320)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyServiceOffered(DieticianSteps.java:154)\n\tat âœ½.Then verify Add Experience message \"Add Experience\"(features/sg/health/dietician/Dietician_NegativeFlow.feature:110)\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 110,
            "name": "verify Add Experience message \"Add Experience\"",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 31
                }
              ],
              "location": "DieticianSteps.VerifyServiceOffered(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Dietician Negative Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_NegativeFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_Negative"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 34776,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19221,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 35204,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5644,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 516557,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31489,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11007216890,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12605543203,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000200383,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10765600900,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000201258,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 270778764,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7922940389,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 367607720,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000183625,
              "status": "passed"
            },
            "comments": [
              {
                "line": 20,
                "value": "#  Then I wait for 45 sec"
              }
            ],
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26316849123,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000239163,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9820547035,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189387595,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1629591197,
              "status": "passed"
            },
            "line": 27,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 932176522,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6732279515,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3216778567,
              "status": "passed"
            },
            "comments": [
              {
                "line": 30,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 31,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 32,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271558887,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6087331715,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 869994063,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2699865275,
              "status": "passed"
            },
            "line": 36,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1023859005,
              "status": "passed"
            },
            "line": 37,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005912304,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012233397,
              "status": "passed"
            },
            "line": 39,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 857060856,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2149404800,
              "status": "passed"
            },
            "line": 41,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1250779480,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3826064240,
              "status": "passed"
            },
            "line": 43,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 888067792,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2668636862,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 614051211,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2234326573,
              "status": "passed"
            },
            "line": 47,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 729020181,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000229508,
              "status": "passed"
            },
            "comments": [
              {
                "line": 49,
                "value": "#And I see that fitness subscription exclusive offers screen is displayed"
              }
            ],
            "line": 50,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 760148098,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4200937396,
              "status": "passed"
            },
            "line": 52,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4418110977,
              "status": "passed"
            },
            "line": 53,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@Dietician"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 59,
            "value": "###"
          },
          {
            "line": 60,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 61,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 27221,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13911,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 31272,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5802,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8947059951,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12543027436,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3116803936,
              "status": "passed"
            },
            "line": 66,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 284009432,
              "status": "passed"
            },
            "line": 67,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2727638579,
              "status": "passed"
            },
            "comments": [
              {
                "line": 68,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 69,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 70,
                "value": "#      | What is your service number?                                 |"
              },
              {
                "line": 71,
                "value": "#      | To start getting appointments please complete these details. |"
              },
              {
                "line": 72,
                "value": "#      | Service Number                                               |"
              },
              {
                "line": 73,
                "value": "#      | Issuing Organisation                                         |"
              },
              {
                "line": 74,
                "value": "#      | Valid Till                                                   |"
              }
            ],
            "line": 75,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 76
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3985878209,
              "status": "passed"
            },
            "line": 77,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3526871943,
              "status": "passed"
            },
            "line": 79,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "12"
                ],
                "line": 80
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 779807380,
              "status": "passed"
            },
            "line": 81,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 891660152,
              "status": "passed"
            },
            "line": 82,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38963,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18944,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 84,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 37749,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7560,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1279646473,
              "status": "passed"
            },
            "comments": [
              {
                "line": 85,
                "value": "#   Then I wait for 3 sec"
              },
              {
                "line": 86,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 87,
                "value": "#      | What is your specialisation? |"
              },
              {
                "line": 88,
                "value": "#      | Ear Nose Throat              |"
              },
              {
                "line": 89,
                "value": "#      | Dentists                     |"
              },
              {
                "line": 90,
                "value": "#      | Psychologist                 |"
              },
              {
                "line": 91,
                "value": "#      | Orthopedician                |"
              },
              {
                "line": 92,
                "value": "#      | Paediatrician                |"
              }
            ],
            "line": 93,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 939951591,
              "status": "passed"
            },
            "line": 94,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 772326590,
              "status": "passed"
            },
            "line": 95,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Add Super Specialisation"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2253977640,
              "status": "passed"
            },
            "line": 97,
            "name": "Enter the Add Super Specialization Till im pulse for Experts Screen",
            "match": {
              "location": "DieticianSteps.Addsuper_specialisation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1136990913,
              "status": "passed"
            },
            "comments": [
              {
                "line": 99,
                "value": "# And I click the continue button"
              }
            ],
            "line": 100,
            "name": "I clicks on \"Add Super Specialisation\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Super Specialisation",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 908585482,
              "status": "passed"
            },
            "line": 101,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30052,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17410,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 33936,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6125,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 936653422,
              "status": "passed"
            },
            "line": 104,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 105
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3687658171,
              "status": "passed"
            },
            "line": 106,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 107
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3531306636,
              "status": "passed"
            },
            "line": 108,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 109
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1191732292,
              "status": "passed"
            },
            "line": 110,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2749108172,
              "status": "passed"
            },
            "line": 111,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2012"
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 838431877,
              "status": "passed"
            },
            "line": 113,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3723015373,
              "status": "passed"
            },
            "line": 114,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2020"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 875094047,
              "status": "passed"
            },
            "line": 116,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 922181641,
              "status": "passed"
            },
            "line": 117,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2586154907,
              "status": "passed"
            },
            "line": 118,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1830505072,
              "status": "passed"
            },
            "line": 119,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1800628408,
              "status": "passed"
            },
            "line": 120,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2385578812,
              "status": "passed"
            },
            "line": 121,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1871461167,
              "status": "passed"
            },
            "line": 122,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1828294408,
              "status": "passed"
            },
            "line": 123,
            "name": "I Enter the \"End Date\" in \"2030\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 786416044,
              "status": "passed"
            },
            "line": 124,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1531987949,
              "status": "passed"
            },
            "line": 125,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 759340563,
              "status": "passed"
            },
            "line": 126,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238273761,
              "status": "passed"
            },
            "line": 127,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26608,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15046,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 129,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 45942,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8820,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000243611,
              "status": "passed"
            },
            "line": 130,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 208323617,
              "status": "passed"
            },
            "line": 131,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Services Offered"
                ],
                "line": 132
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 720268835,
              "status": "passed"
            },
            "line": 133,
            "name": "I Enter the \"Services Offered\" in \"MBBSDOCTOR\" in service offered screen",
            "match": {
              "arguments": [
                {
                  "val": "Services Offered",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 35
                }
              ],
              "location": "CustomerConnectSteps.EnterServiceOffered(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1307895296,
              "status": "passed"
            },
            "line": 134,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 900644926,
              "status": "passed"
            },
            "line": 135,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Achievements \u0026 Awards"
                ],
                "line": 136
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1442213324,
              "status": "passed"
            },
            "line": 137,
            "name": "I Enter the \"Enter title of the award\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter title of the award",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 43
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1727799979,
              "status": "passed"
            },
            "line": 138,
            "name": "I Enter the \"Enter organisation name (Awarded by)\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter organisation name (Awarded by)",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 55
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2310785985,
              "status": "passed"
            },
            "line": 139,
            "name": "I Enter the \"Year\" in \"2020\" in Achievement Award screen",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterAchievemnetyear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 886332643,
              "status": "passed"
            },
            "line": 140,
            "name": "I clicks on \"Add seminar details whether you attended as a participant or as a speaker.\" in close keyboard screen",
            "match": {
              "arguments": [
                {
                  "val": "Add seminar details whether you attended as a participant or as a speaker.",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickClosekeyboard(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214550649,
              "status": "passed"
            },
            "line": 141,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32861,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16719,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 143,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 41331,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9138,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000239235,
              "status": "passed"
            },
            "line": 144,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 239605366,
              "status": "passed"
            },
            "line": 145,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Seminar(s) Attended"
                ],
                "line": 146
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1756322751,
              "status": "passed"
            },
            "line": 147,
            "name": "I Enter the \"Enter seminar title\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter seminar title",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1749881084,
              "status": "passed"
            },
            "line": 148,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1898001909,
              "status": "passed"
            },
            "comments": [
              {
                "line": 149,
                "value": "#  And I Enter the \"Year\" in \"2020\" in home screen"
              }
            ],
            "line": 150,
            "name": "I Enter the \"Year\" in \"2020\" in seminars Attended",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterYear_Semainar(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 719420197,
              "status": "passed"
            },
            "line": 151,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2187054177,
              "status": "passed"
            },
            "line": 152,
            "name": "I Enter the \"Enter name of the Clinic/ Hospital\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter name of the Clinic/ Hospital",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 53
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1870901719,
              "status": "passed"
            },
            "line": 153,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 693567442,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 59672,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18522,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 156,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 41380,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8515,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 944502797,
              "status": "passed"
            },
            "comments": [
              {
                "line": 157,
                "value": "# Then I wait for 3 sec"
              },
              {
                "line": 158,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 159,
                "value": "#      | About You     |"
              },
              {
                "line": 160,
                "value": "#      | Profile Photo |"
              }
            ],
            "line": 161,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12646474148,
              "status": "passed"
            },
            "line": 162,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9449987275,
              "status": "passed"
            },
            "line": 163,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1611239934,
              "status": "passed"
            },
            "line": 164,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000208953,
              "status": "passed"
            },
            "line": 165,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3725532843,
              "status": "passed"
            },
            "comments": [
              {
                "line": 166,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 167,
                "value": "#      | Confirm Details! |"
              },
              {
                "line": 168,
                "value": "#      | MBBS-2020-2020   |"
              },
              {
                "line": 169,
                "value": "#      | MBBSDOCTOR       |"
              },
              {
                "line": 170,
                "value": "#      | MBBS             |"
              },
              {
                "line": 171,
                "value": "#      | TEST TITLE       |"
              }
            ],
            "line": 172,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000217076,
              "status": "passed"
            },
            "line": 173,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 385572461,
              "status": "passed"
            },
            "line": 174,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 331177700,
              "status": "passed"
            },
            "line": 175,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21657,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14616,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 177,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 42987,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8823,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000239796,
              "status": "passed"
            },
            "line": 178,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 225853039,
              "status": "passed"
            },
            "comments": [
              {
                "line": 179,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 180,
                "value": "#      | Conversation History              |"
              },
              {
                "line": 181,
                "value": "#      | Click To Manage Your Availability |"
              }
            ],
            "line": 182,
            "name": "I clicks on \"Schedule Calendar\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Schedule Calendar",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 249133518,
              "status": "passed"
            },
            "line": 183,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Calendar"
                ],
                "line": 184
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2018785687,
              "status": "passed"
            },
            "line": 185,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_PositiveFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 33729,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18231,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 46558,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7732,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 572010,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29923,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11646775882,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12651887933,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000204205,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10321334627,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000208138,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 268024404,
              "status": "passed"
            },
            "line": 14,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7931332485,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 356485230,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000246057,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26689663339,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000218083,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10268423323,
              "status": "passed"
            },
            "line": 24,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 205791677,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1622707309,
              "status": "passed"
            },
            "line": 27,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 962757650,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6710247910,
              "status": "passed"
            },
            "line": 29,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3270231583,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1206430262,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6123877985,
              "status": "passed"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 924267655,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000199094,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 559584850,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1382857936,
              "status": "passed"
            },
            "line": 37,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1011629648,
              "status": "passed"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2049040389,
              "status": "passed"
            },
            "line": 39,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1067182412,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2235742775,
              "status": "passed"
            },
            "line": 41,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1157297511,
              "status": "passed"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3297876464,
              "status": "passed"
            },
            "line": 43,
            "name": "I answer as \"Yes\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 907154953,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000200624,
              "status": "passed"
            },
            "line": 45,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 506758945,
              "status": "passed"
            },
            "line": 46,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 664664478,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2032971928,
              "status": "passed"
            },
            "line": 48,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 634772311,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3954714920,
              "status": "passed"
            },
            "line": 50,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 792045309,
              "status": "passed"
            },
            "line": 51,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4243083608,
              "status": "passed"
            },
            "line": 52,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5488258596,
              "status": "passed"
            },
            "line": 53,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@MedicineReminder"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 59,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29874,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17845,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 35569,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8798,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9025840683,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37534887140,
              "status": "passed"
            },
            "line": 62,
            "name": "I clicks on click here icon in medical Remainder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000297021,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 490916258,
              "status": "passed"
            },
            "line": 64,
            "name": "I clicks on \"Add New Reminder\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Add New Reminder",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3446535225,
              "status": "passed"
            },
            "line": 65,
            "name": "I Enter the \"Enter Medicine Name\" in \"GAS\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Medicine Name",
                  "offset": 13
                },
                {
                  "val": "GAS",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1501904250,
              "status": "passed"
            },
            "line": 66,
            "name": "I click the Medicine Info field",
            "match": {
              "location": "DieticianSteps.SelectMedicineInfo()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 286498277,
              "status": "passed"
            },
            "line": 67,
            "name": "I clicks on Schdule Field in Add medicine screen",
            "match": {
              "location": "DieticianSteps.MedicineInfoIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1087203118,
              "status": "passed"
            },
            "line": 68,
            "name": "I clicks on \"Select Strength/Unit\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Select Strength/Unit",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1816271319,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on \"Tablet (unit)\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Tablet (unit)",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 584167365,
              "status": "passed"
            },
            "comments": [
              {
                "line": 70,
                "value": "#  And I clicks on \"Next\" in app screens"
              }
            ],
            "line": 71,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1578114806,
              "status": "passed"
            },
            "line": 72,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Dosage Timing"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Start Date"
                ],
                "line": 75
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 601514967,
              "status": "passed"
            },
            "line": 76,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1205647970,
              "status": "passed"
            },
            "line": 77,
            "name": "I clicks on \"Before meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Before meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1188789966,
              "status": "passed"
            },
            "comments": [
              {
                "line": 78,
                "value": "# And I clicks on \"Next\" in app screens"
              }
            ],
            "line": 79,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 80,
            "value": "##"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37470,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21059,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 31308,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9221,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 974210035,
              "status": "passed"
            },
            "line": 82,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "More Setting"
                ],
                "line": 83
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1338585752,
              "status": "passed"
            },
            "line": 84,
            "name": "I Enter the \"Condition\" in \"NORMAL\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Condition",
                  "offset": 13
                },
                {
                  "val": "NORMAL",
                  "offset": 28
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1259629900,
              "status": "passed"
            },
            "line": 85,
            "name": "I Enter the \"How many pills do you have in your stock?\" in \"10\" in dynamic Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "How many pills do you have in your stock?",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 60
                }
              ],
              "location": "CustomerConnectSteps.FollowingExperienceLocator(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000241476,
              "status": "passed"
            },
            "line": 86,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 808280706,
              "status": "passed"
            },
            "line": 87,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1880148742,
              "status": "passed"
            },
            "comments": [
              {
                "line": 88,
                "value": "# And I clicks on \"Done\" in app screens"
              }
            ],
            "line": 89,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GAS added successfully!"
                ],
                "line": 90
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 297827902,
              "status": "passed"
            },
            "line": 91,
            "name": "I clicks on \"Add another Med\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Add another Med",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2038413081,
              "status": "passed"
            },
            "line": 92,
            "name": "I Enter the \"Enter Medicine Name\" in \"GAS\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Medicine Name",
                  "offset": 13
                },
                {
                  "val": "GAS",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2147910797,
              "status": "passed"
            },
            "line": 93,
            "name": "I click the Medicine Info field",
            "match": {
              "location": "DieticianSteps.SelectMedicineInfo()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 319206654,
              "status": "passed"
            },
            "line": 94,
            "name": "I clicks on Schdule Field in Add medicine screen",
            "match": {
              "location": "DieticianSteps.MedicineInfoIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1092085163,
              "status": "passed"
            },
            "line": 95,
            "name": "I clicks on \"Select Strength/Unit\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Select Strength/Unit",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1105965051,
              "status": "passed"
            },
            "line": 96,
            "name": "I clicks on \"Tablet (unit)\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Tablet (unit)",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1038369538,
              "status": "passed"
            },
            "line": 97,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2268672967,
              "status": "passed"
            },
            "line": 98,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Dosage Timing"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Start Date"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 667919617,
              "status": "passed"
            },
            "line": 102,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1201122881,
              "status": "passed"
            },
            "line": 103,
            "name": "I clicks on \"Before meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Before meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1177633152,
              "status": "passed"
            },
            "line": 104,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 814239341,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "More Setting"
                ],
                "line": 106
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2087581736,
              "status": "passed"
            },
            "line": 107,
            "name": "I Enter the \"Condition\" in \"NORMAL\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Condition",
                  "offset": 13
                },
                {
                  "val": "NORMAL",
                  "offset": 28
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1396363571,
              "status": "passed"
            },
            "line": 108,
            "name": "I Enter the \"How many pills do you have in your stock?\" in \"10\" in dynamic Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "How many pills do you have in your stock?",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 60
                }
              ],
              "location": "CustomerConnectSteps.FollowingExperienceLocator(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000203953,
              "status": "passed"
            },
            "line": 109,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1356763812,
              "status": "passed"
            },
            "line": 110,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1823792150,
              "status": "passed"
            },
            "line": 111,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GAS added successfully!"
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272794776,
              "status": "passed"
            },
            "line": 113,
            "name": "I clicks on \"Add another Med\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Add another Med",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21309,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14483,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 115,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 39529,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6422,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1918370874,
              "status": "passed"
            },
            "line": 116,
            "name": "I Enter the \"Enter Medicine Name\" in \"GAS\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Medicine Name",
                  "offset": 13
                },
                {
                  "val": "GAS",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1585527812,
              "status": "passed"
            },
            "line": 117,
            "name": "I click the Medicine Info field",
            "match": {
              "location": "DieticianSteps.SelectMedicineInfo()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 220501358,
              "status": "passed"
            },
            "line": 118,
            "name": "I clicks on Schdule Field in Add medicine screen",
            "match": {
              "location": "DieticianSteps.MedicineInfoIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1257639818,
              "status": "passed"
            },
            "line": 119,
            "name": "I clicks on \"Select Strength/Unit\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Select Strength/Unit",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1071329193,
              "status": "passed"
            },
            "line": 120,
            "name": "I clicks on \"Tablet (unit)\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Tablet (unit)",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1039347033,
              "status": "passed"
            },
            "line": 121,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1665614505,
              "status": "passed"
            },
            "line": 122,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency"
                ],
                "line": 123
              },
              {
                "cells": [
                  "Dosage Timing"
                ],
                "line": 124
              },
              {
                "cells": [
                  "Start Date"
                ],
                "line": 125
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1287915759,
              "status": "passed"
            },
            "line": 126,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2789068481,
              "status": "passed"
            },
            "line": 127,
            "name": "I clicks the start Date in Calendar field",
            "match": {
              "location": "DieticianSteps.clickCalendarField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1618968257,
              "status": "passed"
            },
            "line": 128,
            "name": "I clicks on \"Okay\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Okay",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1676940266,
              "status": "passed"
            },
            "line": 129,
            "name": "I clicks on \"Before meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "Before meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1147788436,
              "status": "passed"
            },
            "line": 130,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1937054392,
              "status": "passed"
            },
            "line": 131,
            "name": "I Enter the \"Condition\" in \"NORMAL\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Condition",
                  "offset": 13
                },
                {
                  "val": "NORMAL",
                  "offset": 28
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1252890455,
              "status": "passed"
            },
            "line": 132,
            "name": "I Enter the \"How many pills do you have in your stock?\" in \"10\" in dynamic Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "How many pills do you have in your stock?",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 60
                }
              ],
              "location": "CustomerConnectSteps.FollowingExperienceLocator(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000274112,
              "status": "passed"
            },
            "line": 133,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 367917057,
              "status": "passed"
            },
            "line": 134,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1858879676,
              "status": "passed"
            },
            "line": 135,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GAS added successfully!"
                ],
                "line": 136
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218484688,
              "status": "passed"
            },
            "line": 137,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000932963,
              "status": "passed"
            },
            "comments": [
              {
                "line": 138,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 139,
                "value": "#      | GAS |"
              },
              {
                "line": 140,
                "value": "#    And I click the Future Date in calendar field"
              },
              {
                "line": 141,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 142,
                "value": "#      | GAS |"
              }
            ],
            "line": 143,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 144,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 23343,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14537,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 145,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 37593,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8340,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3719282569,
              "status": "passed"
            },
            "line": 146,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 500016664,
              "status": "passed"
            },
            "line": 147,
            "name": "I click the calendar in Health tab",
            "match": {
              "location": "DieticianSteps.Calendar_Health()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Medicine_Reminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 29329,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18062,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 1156795199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12892,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10942769751,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 125834,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#    And I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\""
              },
              {
                "line": 8,
                "value": "#    And user click on \"CONTINUE WITH EMAIL\" with Email button"
              },
              {
                "line": 9,
                "value": "#    When user enters registration details"
              },
              {
                "line": 10,
                "value": "#      | FirstName   | location workflow |"
              },
              {
                "line": 11,
                "value": "#      | LastName    | Automation        |"
              },
              {
                "line": 12,
                "value": "#      | Email       | ${PULSE_EMAIL}    |"
              },
              {
                "line": 13,
                "value": "#      | Password    | Pas$1234          |"
              },
              {
                "line": 14,
                "value": "#    Then I select the country \"${registration.SG.dropdown.selection}\""
              },
              {
                "line": 15,
                "value": "#    And taps on continue \"Sign_Up\" button"
              },
              {
                "line": 16,
                "value": "# And I assign \"androidhraparity10@mailsac.com\" to variable \"PULSE_EMAIL\""
              },
              {
                "line": 17,
                "value": "# Given User has pulse app"
              },
              {
                "line": 18,
                "value": "# When I navigate to login page"
              },
              {
                "line": 19,
                "value": "# When I login into pulse app with below details"
              },
              {
                "line": 20,
                "value": "#   | UserName | ${PULSE_EMAIL}    |"
              },
              {
                "line": 21,
                "value": "#   | Password | Pulse@123  |"
              },
              {
                "line": 22,
                "value": "#  Then I wait for 45 sec"
              }
            ],
            "line": 24,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12283052709,
              "status": "passed"
            },
            "line": 25,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18705069735,
              "status": "passed"
            },
            "line": 26,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 28
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 300256646,
              "status": "passed"
            },
            "line": 29,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000221226,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8252163590,
              "status": "passed"
            },
            "line": 31,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 371343501,
              "status": "passed"
            },
            "line": 32,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4609781320,
              "status": "passed"
            },
            "line": 33,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 19624250486,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 36,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12283713739,
              "status": "passed"
            },
            "line": 37,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15710996448,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 74a2e9a0-1b23-46ab-ad33-9ec75c6fc766\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Hospitals\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.LocationScreen.clickButton(LocationScreen.java:64)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnUnderPulseSearch(LocationSteps.java:39)\n\tat âœ½.And I clicks on \"Hospitals\" under Pulse Search(features/sg/health/locator/PruShoppeLocation.feature:38)\n",
              "status": "failed"
            },
            "line": 38,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 50,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22104,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14716,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 1311677424,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12576,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11188394260,
              "status": "passed"
            },
            "line": 53,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88837,
              "status": "passed"
            },
            "line": 54,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12201365257,
              "status": "passed"
            },
            "line": 55,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18331962666,
              "status": "passed"
            },
            "line": 56,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 58
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 463403786,
              "status": "passed"
            },
            "line": 59,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000198317,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7478652663,
              "status": "passed"
            },
            "line": 61,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 661262735,
              "status": "passed"
            },
            "line": 62,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6369910226,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19863165806,
              "status": "passed"
            },
            "line": 64,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12050100074,
              "status": "passed"
            },
            "line": 65,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15174305545,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: dbe02786-7b7b-47c6-a1ba-f7b568550b6d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\"Clinics\"]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.LocationScreen.clickButton(LocationScreen.java:64)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnUnderPulseSearch(LocationSteps.java:39)\n\tat âœ½.And I clicks on \"Clinics\" under Pulse Search(features/sg/health/locator/PruShoppeLocation.feature:66)\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/sg/health/locator/PruShoppeLocation.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@ClinicLocator"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21260,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13709,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 51,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 1057558039,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16486,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 519108,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34480,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11375241226,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12521784480,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9859193106,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 10
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 588613503,
              "status": "passed"
            },
            "line": 14,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000256188,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27208557379,
              "status": "passed"
            },
            "line": 16,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000194712,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11580031729,
              "status": "passed"
            },
            "line": 18,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 19
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 272323061,
              "status": "passed"
            },
            "line": 20,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7863948498,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Healthy Eating\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.PulseRegistrationScreen.selectWellnessPackage(PulseRegistrationScreen.java:864)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen(RegistrationSteps.java:201)\n\tat âœ½.And I choose my wellness goals under wellness plan screen(features/sg/home/mycontent/MyContent.feature:21)\n",
              "status": "failed"
            },
            "line": 21,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 25,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 26,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I enter my height and weight details",
            "match": {
              "location": "RegistrationSteps.iEnterMyHeightAndWeightDetails()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 46,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@sanity"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyContentFirst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30583,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18313,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify User should be able to navigate to Health channel page",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-channel-page",
        "after": [
          {
            "result": {
              "duration": 1122217367,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16117,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8293797387,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Content\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1721)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:533)\n\tat âœ½.And I clicks on \"Content\" in app screen(features/sg/home/mycontent/MyContent.feature:54)\n",
              "status": "failed"
            },
            "line": 54,
            "name": "I clicks on \"Content\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Content",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "I click the First Image in Health channel",
            "match": {
              "location": "CustomerConnectSteps.ClickHeathChannelImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 59
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30963,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19020,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 1053383486,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13547,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7429092014,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.TextView[contains(@text,\u0027Like\u0027)])[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:255)\n\tat com.onepulse.app.screens.CustomerConnectScreen.readLikeCount(CustomerConnectScreen.java:1208)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.iReadThePostLikeCount(CustomerConnectSteps.java:363)\n\tat âœ½.And I read the Post count data in Covid-19 screen(features/sg/home/mycontent/MyContent.feature:62)\n",
              "status": "failed"
            },
            "line": 62,
            "name": "I read the Post count data in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.iReadThePostLikeCount()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I read the Post cound after click the Like button",
            "match": {
              "location": "CustomerConnectSteps.iVerifyPostLikeCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 65,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20341,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14660,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 1037624081,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13026,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13204798465,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Share\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.WealthScreen.clickShareButton(WealthScreen.java:185)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iShareThePost(WealthSteps.java:87)\n\tat âœ½.And I share the post(features/sg/home/mycontent/MyContent.feature:68)\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20057,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12803,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 1063370723,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13490,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7404198857,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d(//android.widget.TextView[contains(@text,\u0027Comment\u0027)])[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:255)\n\tat com.onepulse.app.screens.CustomerConnectScreen.readCommentCount(CustomerConnectScreen.java:1231)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.VerifyCommentPostClick(CustomerConnectSteps.java:373)\n\tat âœ½.And I read the Comment count in Covid-19 screen(features/sg/home/mycontent/MyContent.feature:72)\n",
              "status": "failed"
            },
            "line": 72,
            "name": "I read the Comment count in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostClick()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "I click the comment icon in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I commented in the posts \"${Health.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${Health.topic.comment}",
                  "offset": 26
                }
              ],
              "location": "CustomerConnectSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 75,
            "name": "I read the Post count after click the comments button",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCount()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27123,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19384,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 78,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 1063648319,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14943,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24157775690,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Category\u0027)]/following::android.widget.ImageView[2]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickfirstImageIcon(CustomerConnectScreen.java:1296)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.ClickFirstImagesIcons(CustomerConnectSteps.java:395)\n\tat âœ½.Then I click on Covid-19  topic for details full view(features/sg/home/mycontent/MyContent.feature:79)\n",
              "status": "failed"
            },
            "line": 79,
            "name": "I click on Covid-19  topic for details full view",
            "match": {
              "location": "CustomerConnectSteps.ClickFirstImagesIcons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 80,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 82
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 83
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26559,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17224,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 85,
        "name": "Verify User should be able to Like the post- Full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post--full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 1083212637,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12856,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8033711351,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 49654a83-147f-47d9-aa5a-a35e9df07f5b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Like\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.WealthScreen.clickLikeButton(WealthScreen.java:157)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iLikeThePost(WealthSteps.java:72)\n\tat âœ½.And I Like the post(features/sg/home/mycontent/MyContent.feature:86)\n",
              "status": "failed"
            },
            "line": 86,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify MyContent functionality on one pulse App",
    "description": "",
    "id": "verify-mycontent-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/home/mycontent/MyContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyContentFirst"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21140,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14080,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Login to the one pulse app",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;login-to-the-one-pulse-app",
        "after": [
          {
            "result": {
              "duration": 4920843689,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12986,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10914008273,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10739817411,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH GOOGLE\" with Google button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH GOOGLE",
                  "offset": 15
                }
              ],
              "location": "LoginSteps.clickcontinuewithGoogle_Button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31676111555,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 559e815f-8c29-45c5-99f4-651ee8f842f4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Add another account\u0027)]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.PulseLoginScreen.EnterEmail_Id(PulseLoginScreen.java:900)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LoginSteps.EnterEmail_Id(LoginSteps.java:368)\n\tat âœ½.And I click the \"Email\"  in Continue with Gmail(features/sg/home/mypolicies/MyPolicies.feature:8)\n",
              "status": "failed"
            },
            "line": 8,
            "name": "I click the \"Email\"  in Continue with Gmail",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterEmail_Id(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${login.id.continue.with.google}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "pulsesgqa@123"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 11,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21738,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13534,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "Verify that user can access his policies from Home screen",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-user-can-access-his-policies-from-home-screen",
        "after": [
          {
            "result": {
              "duration": 4835095241,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13186,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8036271268,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 559e815f-8c29-45c5-99f4-651ee8f842f4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027My\u0027]/following::android.widget.TextView[@text\u003d\u0027Policies\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.MyPoliciesScreen.clickMyPolicies(MyPoliciesScreen.java:66)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyPolicySteps.iClicksOnIconInHomeScreen(MyPolicySteps.java:26)\n\tat âœ½.When I clicks on \"My Policies\" icon in Home screen(features/sg/home/mypolicies/MyPolicies.feature:15)\n",
              "status": "failed"
            },
            "line": 15,
            "name": "I clicks on \"My Policies\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "My Policies",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "I clicks on Proceed button to accept the terms and conditions",
            "match": {
              "location": "MyPolicySteps.iClicksOnProceedButtonToAcceptTheTermsAndConditions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "User can see the list of linked policies",
            "match": {
              "location": "MyPolicySteps.userCanSeeTheListOfLinkedPolicies()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 18,
            "name": "Verify the policy details on my policies home screen",
            "match": {
              "location": "MyPolicySteps.verifyPolicyDetailsOnPolicyHomeScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 19,
            "name": "User clicks on \"IN FORCE\" button to access the PruSafe COVID Vaccine",
            "match": {
              "arguments": [
                {
                  "val": "IN FORCE",
                  "offset": 16
                }
              ],
              "location": "MyPolicySteps.userClicksOnButtonToAccessThePruSafeCOVIDVaccine(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 20,
            "name": "User will be landed in Policy Info screen",
            "match": {
              "location": "MyPolicySteps.userWillBeLandedInPolicyInfoScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 21,
            "name": "Verify the Policy Info screen UI",
            "match": {
              "location": "MyPolicySteps.verifyThePolicyInfoScreenUI()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 22,
            "name": "User clicks on \"Benefits \u0026 Investment\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Benefits \u0026 Investment",
                  "offset": 16
                }
              ],
              "location": "MyPolicySteps.userClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 23,
                "value": "## removing the validation for investment fund as it is not there on UI as on 23/04/2021"
              }
            ],
            "line": 24,
            "name": "User can verify the benefits screen UI",
            "match": {
              "location": "MyPolicySteps.userCanVerifyTheBenefitsScreenUI()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "User click on \"Policy Contract\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Policy Contract",
                  "offset": 15
                }
              ],
              "location": "MyPolicySteps.userClickOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "User can verify the Policy Contract screen UI",
            "match": {
              "location": "MyPolicySteps.userCanVerifyThePolicyContractScreenUI()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "User clicks on Submit a Claim button",
            "match": {
              "location": "MyPolicySteps.userClicksOnSubmitAClaimButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "User can see an authentication pop-up to authenticate the transaction",
            "match": {
              "location": "MyPolicySteps.userCanSeeAnAuthenticationPopUpToAuthenticateTheTransaction()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "User clicks on Mobile number checkbox",
            "match": {
              "location": "MyPolicySteps.userClicksOnMobileNumberCheckbox()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "User can see OTP verification screen",
            "match": {
              "location": "MyPolicySteps.userCanSeeOTPVerificationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "User enters Invalid OTP and clicks on Continue button",
            "match": {
              "location": "MyPolicySteps.userEntersInvalidOTPAndClicksOnContinueButton(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "OTP",
                  "123456"
                ],
                "line": 33
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "User can see that Invalid OTP error message",
            "match": {
              "location": "MyPolicySteps.userCanSeeThatInvalidOTPErrorMessage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 35,
            "name": "User clicks on Cancel button",
            "match": {
              "location": "MyPolicySteps.userClicksOnCancelButton()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can view his registered policies under My Policies",
    "description": "",
    "id": "verify-that-user-can-view-his-registered-policies-under-my-policies",
    "keyword": "Feature",
    "uri": "features/sg/home/mypolicies/MyPolicies.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sg_mypolicy"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@MyPolicies"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21386,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42677,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 62431,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15944,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11199690609,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89941,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11170714851,
              "status": "passed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18389429234,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 316303908,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000210336,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8875972409,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1111015976,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 32142,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21359,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 34327,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5871,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000383756,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1435603237,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3807803419,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2828226172,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are dispplayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Privacy Notice"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Regulatory"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "##      |App Version          |"
          },
          {
            "line": 30,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 25550,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19016,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 40366,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8452,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13690779850,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13995488956,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18025213396,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30689184514,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 24969,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18336,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 25846,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6174,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13705394035,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 39,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21383688711,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2417827499,
              "status": "passed"
            },
            "line": 41,
            "name": "I verify following texts are dispplayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Clinical Safety"
                ],
                "line": 42
              },
              {
                "cells": [
                  "AI in Healthcare"
                ],
                "line": 43
              },
              {
                "cells": [
                  "Localisation"
                ],
                "line": 44
              },
              {
                "cells": [
                  "Privacy \u0026 Data Protection"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Raising Concerns \u0026 Reporting issues"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21351098807,
              "status": "passed"
            },
            "line": 47,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28958,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legal"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 17544,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13594,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen-and-should-be-able-to-change-the-profile-on-app",
        "after": [
          {
            "result": {
              "duration": 41489,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8850,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11405828415,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 147326,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12454266972,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18604538181,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 373692460,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000208381,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8346333241,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5699962351,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4668684949,
              "status": "passed"
            },
            "line": 17,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4845062080,
              "status": "passed"
            },
            "line": 18,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000318172,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 22,
            "value": "#   Then user navigate to edit profile screen"
          },
          {
            "line": 23,
            "value": "#  #For temporary to avoid the pulse mate pop up"
          },
          {
            "line": 24,
            "value": "#    Scenario: Verify Details updated during pulse profile registration should be reflected in edit profile screen"
          },
          {
            "line": 25,
            "value": "#   Then I verify the default values in pulse profile is updated as below"
          },
          {
            "line": 26,
            "value": "#     | FirstName   | My Profile workflow |"
          },
          {
            "line": 27,
            "value": "#     | LastName    | Automation          |"
          },
          {
            "line": 28,
            "value": "#     | Gender      | Select              |"
          },
          {
            "line": 29,
            "value": "#     | PhoneNumber | Phone Number        |"
          },
          {
            "line": 30,
            "value": "#     | Address     | Address             |"
          },
          {
            "line": 32,
            "value": "#    This scenario might fail in some devices due to locator identifying issue- Take photo OK button"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 24766,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52007,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 28356,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8867,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25227143726,
              "status": "passed"
            },
            "line": 34,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9592565046,
              "status": "passed"
            },
            "line": 35,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27567,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20898,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 35043,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23859525260,
              "status": "passed"
            },
            "line": 39,
            "name": "change personal details",
            "match": {
              "location": "EditProfileSteps.changeProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Automation"
                ],
                "line": 40
              },
              {
                "cells": [
                  "LastName",
                  "Testing"
                ],
                "line": 41
              },
              {
                "cells": [
                  "PhoneNumber",
                  "81069586"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Address",
                  "Singapore"
                ],
                "line": 43
              },
              {
                "cells": [
                  "PostalCode",
                  "576612"
                ],
                "line": 44
              },
              {
                "cells": [
                  "DOB",
                  "13-January-2003"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2027118841,
              "status": "passed"
            },
            "comments": [
              {
                "line": 46,
                "value": "#  And I assign date of birth into variable \"DATE_OF_BIRTH\""
              }
            ],
            "line": 47,
            "name": "click on save button",
            "match": {
              "location": "EditProfileSteps.clickSaveButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21361,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13887,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify the email and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 1494922821,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15109,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5210364850,
              "status": "passed"
            },
            "line": 51,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4634022687,
              "status": "passed"
            },
            "line": 52,
            "name": "verify country of Residence is Singapore",
            "match": {
              "location": "EditProfileSteps.verifyCORField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8353386528,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4ce4c600-fb5a-4ee4-96f8-90f7f6896dd0\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Update\")]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickSaveButton(PulseManageProfileScreen.java:177)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickSaveButton(EditProfileSteps.java:59)\n\tat âœ½.And click on save button(features/sg/profile/PulseEditProfileTest.feature:53)\n",
              "status": "failed"
            },
            "line": 53,
            "name": "click on save button",
            "match": {
              "location": "EditProfileSteps.clickSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 55,
            "name": "I click \"${accounts.back.button}\" button on the app",
            "match": {
              "arguments": [
                {
                  "val": "${accounts.back.button}",
                  "offset": 9
                }
              ],
              "location": "WealthSteps.iClickButtonOnTheApp(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23016,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16830,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to see the registration required pop up if user not completed MyDoc Registration",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-registration-required-pop-up-if-user-not-completed-mydoc-registration",
        "after": [
          {
            "result": {
              "duration": 1213534987,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15554,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15119632626,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4ce4c600-fb5a-4ee4-96f8-90f7f6896dd0\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Health\u0027]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:164)\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocMedicalRecordsScreen(MyDocConsultationSummary.java:821)\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.iNavigateToMedicalRecordsScreen(MyDocSteps.java:824)\n\tat âœ½.When I navigate to medical records screen(features/sg/profile/PulseEditProfileTest.feature:59)\n",
              "status": "failed"
            },
            "line": 59,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Registration Required"
                ],
                "line": 61
              },
              {
                "cells": [
                  "You are currently not registered. Please register yourself before continuing."
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I verify following buttons are displayed",
            "match": {
              "location": "MyDocSteps.iVerifyFollowingButtonsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LATER"
                ],
                "line": 64
              },
              {
                "cells": [
                  "REGISTER NOW"
                ],
                "line": 65
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 66,
            "name": "I proceed with register now button",
            "match": {
              "location": "MyDocSteps.iProceedWithRegisterNowButton()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26530,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16664,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "Verify User should not be able to edit Gender and DOB fields on myDoc registration page once the user submitted their gender and DOB in edit profile",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-not-be-able-to-edit-gender-and-dob-fields-on-mydoc-registration-page-once-the-user-submitted-their-gender-and-dob-in-edit-profile",
        "after": [
          {
            "result": {
              "duration": 1186543184,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14793,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000233835,
              "status": "passed"
            },
            "line": 70,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7914354181,
              "error_message": "java.lang.AssertionError: The following asserts failed:\nOnline Consultation text is displayed on page Online Consultation\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:38)\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(MyDocUiSteps.java:116)\n\tat âœ½.Then user verify the following texts are displayed on \"Online Consultation\" registration page(features/sg/profile/PulseEditProfileTest.feature:71)\n",
              "status": "failed"
            },
            "line": 71,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Online Consultation"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "verify Gender field should not be editable in mydoc Registration Screen",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableFieldsForGenderInMyDoc()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 74,
            "name": "verify DOB field should not be editable in mydoc Registration Screen",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableFieldsForDOBInMyDoc()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 77,
            "value": "#      This scenario might fail in some devices due to locator identifying issue- Take photo OK button"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28142,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17060,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 78,
        "name": "Verify User should be able to update NRIC number \u0026 upload NRIC Image in Online Consultation screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-update-nric-number-\u0026-upload-nric-image-in-online-consultation-screen",
        "after": [
          {
            "result": {
              "duration": 1193993059,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15589,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44750581391,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027ip-172-31-13-65\u0027, ip: \u0027172.31.13.65\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00273.13.0-139-generic\u0027, java.version: \u002711.0.1\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {app: /tmp/scratchPKYxV_.scratch/..., appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android, udid: 93MAX092KB}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a XL, deviceName: 93MAX092KB, deviceScreenDensity: 400, deviceScreenSize: 1080x2160, deviceUDID: 93MAX092KB, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.5, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 60, takesScreenshot: true, udid: 93MAX092KB, viewportRect: {height: 1980, left: 0, top: 60, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4ce4c600-fb5a-4ee4-96f8-90f7f6896dd0\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027NRIC/FIN\u0027]/following::android.widget.EditText[1]}\n\tat jdk.internal.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:261)\n\tat com.onepulse.app.screens.mydoc.MyDocRegistrationScreen.enterNric(MyDocRegistrationScreen.java:646)\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iEnterTheMandatoryFields(MyDocUiSteps.java:128)\n\tat âœ½.Then I enter the mandatory fields \"${NRIC}\"(features/sg/profile/PulseEditProfileTest.feature:79)\n",
              "status": "failed"
            },
            "line": 79,
            "name": "I enter the mandatory fields \"${NRIC}\"",
            "match": {
              "arguments": [
                {
                  "val": "${NRIC}",
                  "offset": 30
                }
              ],
              "location": "MyDocUiSteps.iEnterTheMandatoryFields(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 81,
            "name": "I verify the \"${phonenumber}\" and proceed with \"${otp}\" for already registered user",
            "match": {
              "arguments": [
                {
                  "val": "${phonenumber}",
                  "offset": 14
                },
                {
                  "val": "${otp}",
                  "offset": 48
                }
              ],
              "location": "MyDocUiSteps.iVerifyTheAndProceedWithForAlreadyRegisteredUser(String,String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 7,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 8,
            "value": "#    When user enters credentials"
          },
          {
            "line": 9,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 10,
            "value": "#      | Password | Pas$1234      |"
          },
          {
            "line": 11,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 12,
            "value": "#    Then I wait for 40 sec"
          },
          {
            "line": 13,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 14,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 15,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 16,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          },
          {
            "line": 17,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 18,
            "value": "#    Then user navigate to account page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18217,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12815,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 30430,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9306,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11728184791,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85703,
              "status": "passed"
            },
            "line": 22,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12071495649,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18627440169,
              "status": "passed"
            },
            "line": 24,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 26
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 378288458,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000216542,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9811760983,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 667831969,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 33,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 34,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 35,
            "value": "#    And I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 36,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 37,
            "value": "#    When user enters credentials"
          },
          {
            "line": 38,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 39,
            "value": "#      | Password | Pas$1234       |"
          },
          {
            "line": 40,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 41,
            "value": "#    Then I wait for 10 sec"
          },
          {
            "line": 42,
            "value": "#    And I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\""
          },
          {
            "line": 43,
            "value": "#    Then I wait for 59 sec"
          },
          {
            "line": 44,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 45,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 46,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 47,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29817,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32835,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 55546,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10277,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000208204,
              "status": "passed"
            },
            "line": 50,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 822970307,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3733942256,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4028488542,
              "status": "passed"
            },
            "line": 53,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1941172305,
              "status": "passed"
            },
            "line": 54,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Articles"
                ],
                "line": 55
              },
              {
                "cells": [
                  "BMI"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Wrinkle"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Health Assessment"
                ],
                "line": 58
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40486,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15513,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 37805,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8926,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3878831115,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8544765755,
              "status": "passed"
            },
            "line": 62,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4964137509,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27008,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41738,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 29002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5731,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3671843579,
              "status": "passed"
            },
            "line": 67,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3633254542,
              "status": "passed"
            },
            "line": 68,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8435070401,
              "status": "passed"
            },
            "line": 69,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8693780476,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17408,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18002,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 51590,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9148,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8713681248,
              "status": "passed"
            },
            "line": 73,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5517151614,
              "status": "passed"
            },
            "line": 74,
            "name": "I verify the following text \"Marketing Consent\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "Marketing Consent",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Marketing Consent"
                ],
                "line": 75
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3590083898,
              "status": "passed"
            },
            "line": 76,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8366729486,
              "status": "passed"
            },
            "line": 77,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8526991830,
              "status": "passed"
            },
            "line": 78,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/sg/profile/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettings"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@Sanity1"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21603,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15563,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 47321,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16603,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11207165227,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86060,
              "status": "passed"
            },
            "line": 7,
            "name": "Logout of pulse app if user is logged in",
            "match": {
              "location": "LoginSteps.logOutIfLoggedIn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70301,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12627096260,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10233397109,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000205607,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 438747269,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4054856118,
              "status": "passed"
            },
            "line": 13,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1686784755,
              "status": "passed"
            },
            "line": 14,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26788,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18453,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 16,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 29625,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30686,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18276443252,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 320063207,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000183812,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27025333346,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8482405509,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23358,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15243,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 41702,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7951,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9657572448,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25731,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17375,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 36609,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9184,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10256443824,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28031,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21250,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 39859,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5916,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6690018760,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31915,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19919,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 40579,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7053,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22280686655,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29326,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19636,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 34894,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10481,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22045574914,
              "status": "passed"
            },
            "line": 35,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in onepulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@SharewithfriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  }
]