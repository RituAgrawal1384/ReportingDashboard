[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 104753001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 292302100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 96300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9787475300,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3685000,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15343444000,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261272300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001676601,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 133000,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4932767600,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1958213999,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2273212799,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10419591699,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259441000,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007799901,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30993819001,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14199594500,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 51201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8235837600,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2010237800,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14130561901,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 215939700,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008376001,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4890409401,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002454800,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2312826600,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10565237900,
              "status": "passed"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 348660501,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 688263300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 201802800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3560217099,
              "status": "passed"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 738024099,
              "status": "passed"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 865672700,
              "status": "passed"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 76800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 69701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8770400,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 176900,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8304136900,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15703759900,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 215397600,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003652301,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4822546799,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005916200,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2296596500,
              "status": "passed"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10656977101,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4515388300,
              "status": "passed"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 266978400,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1144717200,
              "status": "passed"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 211376000,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3563822300,
              "status": "passed"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 770118600,
              "status": "passed"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1502835600,
              "status": "passed"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 149400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 122999,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3731423201,
              "status": "passed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 736941300,
              "status": "passed"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25970900200,
              "status": "passed"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000962600,
              "status": "passed"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 698534301,
              "status": "passed"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5005909300,
              "status": "passed"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 139541700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 111299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 99100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1863460800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1737501,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 267400,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8443582599,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2021583701,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12810283900,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 285262900,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5017580300,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 143001,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015255600,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7971248400,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 313151600,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4755641900,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30453821400,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66545065400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 548db4bc-d8b7-485b-a7e6-ee61d44cd577\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/PulseLoginTest.feature:108)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 45199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8304951199,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2008007300,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13061356199,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006325301,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 270510000,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006895700,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1263182300,
              "status": "passed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 381547500,
              "status": "passed"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1993684101,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2630646700,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009117501,
              "status": "passed"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15276294901,
              "status": "passed"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9412407900,
              "status": "passed"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 64800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 659953300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 810700,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98300,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8376629000,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007573599,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12989792999,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007103800,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 289962901,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1994353700,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 70900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010673499,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8024892800,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 359586600,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4873805699,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30902945099,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003229100,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10086882901,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8328115399,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 30,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5330998301,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 32,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314772201,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1295846901,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5323766700,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000682500,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8358007800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 38,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 418689199,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8356395300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4e1817f5-0670-4140-9dc4-08f45aa1db33\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/PulseRegistrationTest.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I answer as \"${option.yes.text}\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "${option.yes.text}",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 37
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 48,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 49,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 50,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 51,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 53,
                "value": "#Specific for SG reg flow"
              }
            ],
            "line": 54,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 55,
                "value": "#And I click the continue button"
              }
            ],
            "line": 56,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 63
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@regtst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 66900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 74601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 70000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8402936099,
              "status": "passed"
            },
            "line": 70,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1997927801,
              "status": "passed"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12745901600,
              "status": "passed"
            },
            "line": 72,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013787599,
              "status": "passed"
            },
            "line": 73,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 300839700,
              "status": "passed"
            },
            "line": 74,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016008400,
              "status": "passed"
            },
            "line": 75,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 68199,
              "status": "passed"
            },
            "line": 76,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010997201,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1044664400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 78,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 79,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 84,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 85,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 86,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 71601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 37001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 276856001,
              "status": "passed"
            },
            "line": 90,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1499992600,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 95
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 48901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1972661299,
              "status": "passed"
            },
            "line": 99,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 270673900,
              "status": "passed"
            },
            "line": 101,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 779568300,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 74500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2029076299,
              "status": "passed"
            },
            "line": 99,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 277148399,
              "status": "passed"
            },
            "line": 101,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 779900201,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 115001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 49600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8656776000,
              "status": "passed"
            },
            "line": 111,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1998701200,
              "status": "passed"
            },
            "line": 112,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13399173500,
              "status": "passed"
            },
            "line": 113,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001072401,
              "status": "passed"
            },
            "line": 114,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 268650899,
              "status": "passed"
            },
            "line": 115,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009282701,
              "status": "passed"
            },
            "line": 116,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34699,
              "status": "passed"
            },
            "comments": [
              {
                "line": 117,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 118,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016517300,
              "status": "passed"
            },
            "line": 119,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6843144801,
              "status": "passed"
            },
            "line": 120,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 121
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 123
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 124
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 406743501,
              "status": "passed"
            },
            "line": 125,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1300537599,
              "status": "passed"
            },
            "line": 126,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 127
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 41100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 743199,
              "status": "passed"
            },
            "line": 131,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69700,
              "status": "passed"
            },
            "line": 132,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8694428300,
              "status": "passed"
            },
            "line": 133,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2008146901,
              "status": "passed"
            },
            "line": 134,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12905555799,
              "status": "passed"
            },
            "line": 135,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999195900,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 280843200,
              "status": "passed"
            },
            "line": 137,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003866501,
              "status": "passed"
            },
            "line": 138,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 139,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 140,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005158900,
              "status": "passed"
            },
            "line": 141,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7492551700,
              "status": "passed"
            },
            "line": 142,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 143
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 144
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 146
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 284183100,
              "status": "passed"
            },
            "line": 147,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4462106400,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30399087800,
              "status": "passed"
            },
            "line": 149,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009202400,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 131817799,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10554734700,
              "status": "passed"
            },
            "line": 152,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 153
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 855037299,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013104001,
              "status": "passed"
            },
            "line": 155,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 174689499,
              "status": "passed"
            },
            "line": 156,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 158,
            "value": "#Not adding to PH regression as the reg screen order keeps changing for the LBU"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "Verify the Registration screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-registration-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 845119600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10447605500,
              "status": "passed"
            },
            "line": 160,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 161
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1005603400,
              "status": "passed"
            },
            "line": 162,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1112052901,
              "status": "passed"
            },
            "line": 163,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11478096900,
              "error_message": "java.lang.AssertionError: ${wellness.goal.alert.text} expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.verifyInvalidMsg(RegistrationSteps.java:384)\r\n\tat ✽.Then verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen(features/PulseRegistrationTest.feature:164)\r\n",
              "status": "failed"
            },
            "line": 164,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "verify BMI validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 31
                }
              ],
              "location": "RegistrationSteps.verifyBMIMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 188,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 414900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 306400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 192,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 481800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 245700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 427700,
              "status": "passed"
            },
            "line": 193,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49699,
              "status": "passed"
            },
            "line": 194,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8364725699,
              "status": "passed"
            },
            "line": 195,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009579899,
              "status": "passed"
            },
            "line": 196,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13969053499,
              "status": "passed"
            },
            "line": 197,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2024210500,
              "status": "passed"
            },
            "line": 198,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 272628000,
              "status": "passed"
            },
            "line": 199,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015342400,
              "status": "passed"
            },
            "line": 200,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 70700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 201,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 202,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2019394500,
              "status": "passed"
            },
            "line": 203,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7095124400,
              "status": "passed"
            },
            "line": 204,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 205
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 206
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 207
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 208
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 326488301,
              "status": "passed"
            },
            "line": 209,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4555649000,
              "status": "passed"
            },
            "line": 210,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90002184500,
              "status": "passed"
            },
            "line": 211,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3579879999,
              "status": "passed"
            },
            "line": 212,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30699370600,
              "status": "passed"
            },
            "line": 213,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007280500,
              "status": "passed"
            },
            "line": 214,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8202128301,
              "status": "passed"
            },
            "line": 215,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 191,
            "name": "@otpreset_tst"
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Registrations"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 56099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 149201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8596414399,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 117000,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14956234801,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 259464300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5003305201,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4986781201,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 160700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 76700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 129201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3469825300,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10461992000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 307866800,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5003549601,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31841709600,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13705422701,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5012503900,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 142999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 81700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 69200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10957237900,
              "status": "passed"
            },
            "line": 26,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4650718699,
              "status": "passed"
            },
            "line": 27,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012311899,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 117400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 60700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 62100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21721105200,
              "status": "passed"
            },
            "line": 31,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9684679400,
              "status": "passed"
            },
            "line": 32,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 244400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 100500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1815151600,
              "status": "passed"
            },
            "line": 35,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 762411299,
              "status": "passed"
            },
            "line": 36,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 545446700,
              "status": "passed"
            },
            "line": 37,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 501701,
              "status": "passed"
            },
            "line": 40,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 93800,
              "status": "passed"
            },
            "line": 41,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3109240000,
              "status": "passed"
            },
            "line": 44,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12228227201,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 48,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 49,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 50,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 51,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 969986599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7798337001,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: ffad2cf9-d9dd-4f51-abee-edc30c51e187\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027years\u0027)]/following::android.view.ViewGroup[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickeditProfileLink(PulseManageProfileScreen.java:181)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickEditProfileLink(EditProfileSteps.java:37)\r\n\tat ✽.Given user click on Edit profile link(features/editProfile/PulseEditProfileTest.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 35999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 805526701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4457168100,
              "status": "passed"
            },
            "line": 65,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21263346101,
              "status": "passed"
            },
            "line": 66,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2018035099,
              "status": "passed"
            },
            "line": 67,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1531410500,
              "error_message": "java.lang.AssertionError: actual value is Automation-43829061628 expected [Automation-16419072726] but found [Automation-43829061628]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.verifyDefaultValuesOnBabylonRegPage(PulseManageProfileScreen.java:518)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(EditProfileSteps.java:156)\r\n\tat ✽.Then I verify the default values in babylon registration page is updated as below(features/editProfile/PulseEditProfileTest.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 74,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 25799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3023794500,
              "status": "passed"
            },
            "line": 77,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4992605299,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1441839100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 434700,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43799,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8446524999,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000251500,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13584142999,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012060701,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 306569900,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008626900,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 49800,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2014208499,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7571193999,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 318306901,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4525157600,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29944956801,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1990840500,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65161221501,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 20c66abb-2342-48c7-80fe-8caa736dd4e7\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/BabylonHRA_Registration.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1197259899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28665590099,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76166043000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 20c66abb-2342-48c7-80fe-8caa736dd4e7\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Continue\u0027]/preceding::android.view.ViewGroup[1]/android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonRegistrationScreen.navigateToBabylonHealthAssessment(BabylonRegistrationScreen.java:253)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition(BabylonSteps.java:319)\r\n\tat ✽.And I navigate to Babylon health Assessment and Accept TermsAndCondition(features/health/BabylonHRA_Registration.feature:30)\r\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey",
    "keyword": "Feature",
    "uri": "features/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# This feature will fail due to the defect PCAONEPULSE-21990"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 63500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 47599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8388405700,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 128800,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15100292700,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243462700,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004537101,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4887968301,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 69800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 42600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 26101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3500864500,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9424266401,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 236701901,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5004460700,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30475257501,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14644850000,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 37700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14687767500,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17789512401,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13456305501,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1287632000,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4004336501,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12685967099,
              "status": "passed"
            },
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 31800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17799026801,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1650924200,
              "status": "passed"
            },
            "line": 35,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 28099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 595209700,
              "status": "passed"
            },
            "line": 38,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2635305200,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 29101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 648425601,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2431651300,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 45,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 597730499,
              "status": "passed"
            },
            "line": 46,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3246292200,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 634703600,
              "status": "passed"
            },
            "line": 50,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 84800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2576898699,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13018458499,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1173159800,
              "status": "passed"
            },
            "line": 56,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2744328701,
              "status": "passed"
            },
            "line": 57,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 36499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12656561700,
              "status": "passed"
            },
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18475432400,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 36300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2423840499,
              "status": "passed"
            },
            "line": 66,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 49100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 484821200,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 32401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1948770300,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@18JunTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 51200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 681319101,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 777800,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89401,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9564059999,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15617257501,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001716401,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 243335101,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003049800,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7425480400,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259024901,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4613375200,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29955866301,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003526400,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64703143300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c7bf7437-ecc9-4a9d-b20e-0f3526d97f58\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/MedicineReminder.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17532104400,
              "status": "passed"
            },
            "line": 29,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14398244000,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010093699,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71264227400,
              "status": "passed"
            },
            "line": 32,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012099601,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 753640100,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "click on add reminder button",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;click-on-add-reminder-button",
        "after": [
          {
            "result": {
              "duration": 41600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 414602301,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999409199,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 52400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 537876500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 48,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 49,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 147299,
              "status": "passed"
            },
            "line": 53,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8033015900,
              "status": "passed"
            },
            "line": 54,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 906048500,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1844587700,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1222876199,
              "status": "passed"
            },
            "line": 67,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 68
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1458863899,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1109071701,
              "status": "passed"
            },
            "line": 70,
            "name": "I clicks on \"${before.meal.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${before.meal.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1090522800,
              "status": "passed"
            },
            "line": 71,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 54300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008358400,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3332307300,
              "status": "passed"
            },
            "line": 75,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 77
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 933353300,
              "status": "passed"
            },
            "line": 78,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1457140201,
              "status": "passed"
            },
            "line": 79,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 80
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 81,
            "value": "#      | ${add.another.med}                   |"
          },
          {
            "line": 82,
            "value": "#      | ${notNow.text}                       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 41001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 84,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 65801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 289394300,
              "status": "passed"
            },
            "line": 85,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124800,
              "status": "passed"
            },
            "line": 86,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8349579601,
              "status": "passed"
            },
            "line": 87,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 90
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 981065200,
              "status": "passed"
            },
            "line": 91,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1651582701,
              "status": "passed"
            },
            "line": 92,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1040347500,
              "status": "passed"
            },
            "line": 94,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1790328799,
              "status": "passed"
            },
            "line": 95,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1026441101,
              "status": "passed"
            },
            "line": 96,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3213469200,
              "status": "passed"
            },
            "line": 97,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1713560900,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 102,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 33300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1821408400,
              "status": "passed"
            },
            "line": 103,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1494155299,
              "status": "passed"
            },
            "line": 104,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 105
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "navigate to health screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;navigate-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 228047601,
              "status": "passed"
            },
            "line": 108,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify User should be able to navigate to calendar page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-calendar-page",
        "after": [
          {
            "result": {
              "duration": 2045623601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2005352600,
              "status": "passed"
            },
            "line": 111,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4549355500,
              "status": "passed"
            },
            "line": 112,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14785321300,
              "status": "passed"
            },
            "line": 113,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9461095599,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tcold text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:114)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${Medicine_Info}"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 25399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8840989200,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 124400,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14576676300,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271174000,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008877600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4917869700,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3500466900,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10412177500,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 401955800,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013248500,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30124400301,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14473099200,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2010983900,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21953537800,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5010802700,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9050786900,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 31500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8984693201,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8268673199,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9334808699,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12927893700,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 42801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 35700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8295493100,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15604319000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 276127899,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3003675800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4904068999,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 46600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 443100,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3554487300,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9943572700,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 245119401,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005600099,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30200331699,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13980205500,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2011011401,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24075184399,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8014248100,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 673256400,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17995853200,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 37,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 38,
            "value": "#    And I Like the post"
          },
          {
            "line": 39,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 40,
            "value": "#    And I Like the post"
          },
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 43,
            "value": "#    And I share the post"
          },
          {
            "line": 44,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 46,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 47,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 48,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 49,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 53,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 37400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 81400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7831290900,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000638900,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13194164301,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 99600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5537340699,
              "status": "passed"
            },
            "line": 66,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5576201201,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 80299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 49001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5801639100,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10936747200,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 52699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4405873400,
              "status": "passed"
            },
            "line": 75,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 49001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 646653900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 664100,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50401,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9137773500,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000031000,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13763349001,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001693300,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 232681001,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001406000,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34299,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2006885500,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7735394300,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 255281700,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4478321500,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29833487700,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2004820999,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65436244600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 2a50ea61-605f-44d2-b2df-6aa2c4235fba\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/home/NotificationCenter.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 96400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18717167000,
              "status": "passed"
            },
            "line": 31,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 397791500,
              "status": "passed"
            },
            "line": 32,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1999760201,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 29,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 147907899,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 35,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 39,
            "value": "#    And User verify following dynamic texts are displayed in My Notification screen"
          },
          {
            "line": 40,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Then I navigate back to home screen from Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;then-i-navigate-back-to-home-screen-from-notification-center",
        "after": [
          {
            "result": {
              "duration": 26700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 144499900,
              "status": "passed"
            },
            "line": 44,
            "name": "I click on back button on notification screen to navigate to home screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreenViaHome()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify User should be able navigate to Notification Center via My account",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center-via-my-account",
        "after": [
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2007733600,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9474809700,
              "status": "passed"
            },
            "line": 48,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 34301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1522777399,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 54,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to login using already registered credentials",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-already-registered-credentials",
        "after": [
          {
            "result": {
              "duration": 41199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8557954700,
              "status": "passed"
            },
            "line": 58,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17115302799,
              "status": "passed"
            },
            "line": 59,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 201486900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#    And I assign \"pulse67309064615@mailsac.com\" to variable \"PULSE_EMAIL\""
              }
            ],
            "line": 61,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3004438199,
              "status": "passed"
            },
            "line": 62,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4882260399,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3423301400,
              "status": "passed"
            },
            "line": 64,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9923610600,
              "status": "passed"
            },
            "line": 65,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 67
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 223105101,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999680699,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31280424200,
              "status": "passed"
            },
            "line": 70,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13872322400,
              "status": "passed"
            },
            "line": 71,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able navigate to Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center",
        "after": [
          {
            "result": {
              "duration": 808868300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10911409801,
              "status": "passed"
            },
            "line": 74,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4001073699,
              "status": "passed"
            },
            "comments": [
              {
                "line": 75,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 76,
                "value": "#    Then I handle the pulse mate popup"
              },
              {
                "line": 77,
                "value": "#    Then I navigate to notification center page"
              }
            ],
            "line": 78,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15703393100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNo Notifications Yet text is displayed on page  expected [true] but found [false],\n\tYou do not have any notifications yet, check this section regularly for any updates. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/NotificationCenter.feature:80)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 79,
                "value": "#    And user view the first notification from notification center"
              }
            ],
            "line": 80,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@notificationiOS"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 28701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 40401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8554265600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15485319401,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 242682200,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3013870999,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4930713400,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 654299,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3563459699,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9975604100,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 255420400,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002615700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29288665500,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13792438500,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 39499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11919498399,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 874670700,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4637894800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 21801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 27699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 256116399,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9152783701,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 474069800,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@my_challengesSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 26199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8631120400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17114203701,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#    And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 215803200,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3007363900,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4906898300,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 76700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 98900,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3589430700,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10311120001,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 222077800,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004038801,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30318180000,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16053300001,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 88700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6015080599,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6185627600,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6001057500,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000376199,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9247546200,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 148200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 369295799,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012239200,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2617479101,
              "status": "passed"
            },
            "line": 36,
            "name": "I leave all joined communities by clicking on three dots menu icon on my My communities screen",
            "match": {
              "location": "MyCommunitiesSteps.leaveAllJoinedCommunities()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 37,
            "value": "#    When I click on joined community three dots menu icon"
          },
          {
            "line": 38,
            "value": "#    And I click on leave button for joined community"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 27699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 2507935700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5013304700,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 319714301,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4238029000,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4756587400,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45359082199,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Create Post\u0027)]/following::android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.clickEditiconstayActive(MyCommunitiesScreen.java:533)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickEditiconstayActive(MyCommunitiesSteps.java:168)\r\n\tat ✽.And I click Edit icon in stay Active icon(features/home/mycommunities/PulseMyCommunities.feature:46)\r\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 52,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 53
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 2511572200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22953693400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickFeeds(MyCommunitiesScreen.java:311)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickIcons(MyCommunitiesSteps.java:106)\r\n\tat ✽.And I click the Post icon in My communities(features/home/mycommunities/PulseMyCommunities.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 65,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 2539427899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18926390700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickShareIcon(MyCommunitiesScreen.java:556)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.ClickShareIcon(MyCommunitiesSteps.java:173)\r\n\tat ✽.And I click the share icon in Post screen(features/home/mycommunities/PulseMyCommunities.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 71,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 2635181100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14993067599,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Hi Pulsemate!\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.TestBasePage.popupstart(TestBasePage.java:508)\r\n\tat com.onepulse.app.screens.mydocui.MyCommunitiesScreen.ClickSkipfeedbutton(MyCommunitiesScreen.java:662)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyCommunitiesSteps.clickSkipbutton(MyCommunitiesSteps.java:208)\r\n\tat ✽.Then I click skip button in feeds screen(features/home/mycommunities/PulseMyCommunities.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 2564041101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15007345200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 92,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7459819299,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Category\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${category.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:93)\r\n",
              "status": "failed"
            },
            "line": 93,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 101,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 73200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 650991800,
              "status": "passed"
            },
            "line": 105,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013131300,
              "status": "passed"
            },
            "line": 106,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 2751864800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8464494700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 945333d7-8434-45a2-8f3a-72396316ee05\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"My Communities\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"${my.communities.text}\" in app screen(features/home/mycommunities/PulseMyCommunities.feature:109)\r\n",
              "status": "failed"
            },
            "line": 109,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 112,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8467944999,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15904619999,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 222020000,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3000933000,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4870626901,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 87199,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3601049800,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9869001000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259697899,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003370400,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31306991701,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14002924501,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the My communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-my-communities-screen",
        "after": [
          {
            "result": {
              "duration": 60800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2528201199,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2999729900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 380827199,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9161891500,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3007226500,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 53500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5047978300,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3116945801,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3442215900,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 336262301,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4233847300,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9850954099,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000609201,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3006989300,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4388605800,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1299998800,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1248807600,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3989754500,
              "status": "passed"
            },
            "line": 51,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 34399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 28901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8660816301,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 118301,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15977952700,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 215439101,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012850400,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4862281100,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 40199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3502568000,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10680489100,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 256843701,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005852000,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29770812400,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14738271500,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 28600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21470564600,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40014715600,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 531177601,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 34601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8529098899,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40006399600,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 290379101,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 24299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9357269400,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40001610699,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13756288601,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEventPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that user can view previous air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-previous-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 38900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9453199000,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121400,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7330793100,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9552435900,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 308364800,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10013431300,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30294534401,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9493018801,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14518931400,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 61990073000,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on My Environment icon",
            "match": {
              "location": "MyEnvironmentSteps.iClicksOnMyEnvironmentIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 460833400,
              "status": "passed"
            },
            "line": 19,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 677744100,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on Previous Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnPreviousAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6377238600,
              "status": "passed"
            },
            "line": 21,
            "name": "User can view \"Previous\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5666847400,
              "status": "passed"
            },
            "line": 22,
            "name": "User clicks on \"Swipe Up for Details\" button to view the Previous day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewThePreviousDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4034381499,
              "status": "passed"
            },
            "line": 23,
            "name": "User can see the \"Previous\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 742845699,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify that user can view Current air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-current-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 24999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1545145701,
              "status": "passed"
            },
            "line": 28,
            "name": "User clicks on \"Back\" icon from \"Previous Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Previous Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2198163400,
              "status": "passed"
            },
            "line": 29,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1250213300,
              "status": "passed"
            },
            "line": 30,
            "name": "User clicks on Current Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnCurrentAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6303151200,
              "status": "passed"
            },
            "line": 31,
            "name": "User can view \"Current\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5606600800,
              "status": "passed"
            },
            "line": 32,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3064282501,
              "status": "passed"
            },
            "line": 33,
            "name": "User can see the \"Current\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 964099700,
              "status": "passed"
            },
            "line": 34,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify that user can view air quality details  for next few days under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-air-quality-details--for-next-few-days-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 40100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2351076700,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on \"Back\" icon from \"Current Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Current Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2361065500,
              "status": "passed"
            },
            "line": 39,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 665427400,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on \"How is my air quality over the next few days\" icon in Environments Home Page",
            "match": {
              "arguments": [
                {
                  "val": "How is my air quality over the next few days",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentsHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5935093899,
              "status": "passed"
            },
            "line": 41,
            "name": "User can view \"Forecast\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Forecast",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5613328601,
              "status": "passed"
            },
            "line": 42,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3517971299,
              "status": "passed"
            },
            "line": 43,
            "name": "User can see the \"ForeCast\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "ForeCast",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 694202400,
              "status": "passed"
            },
            "line": 44,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify that user can access and view Neighbourhood air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-neighbourhood-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 32499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 978615301,
              "status": "passed"
            },
            "line": 48,
            "name": "User clicks on \"Back\" icon from \"Next Few Days Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Next Few Days Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3169529800,
              "status": "passed"
            },
            "line": 49,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 648158201,
              "status": "passed"
            },
            "line": 50,
            "name": "User clicks on My Neighbourhood air icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnMyNeighbourhoodAirIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6217585601,
              "status": "passed"
            },
            "line": 51,
            "name": "User can view \"Heat Map\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Heat Map",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 52,
            "value": "#    When User clicks on \"Swipe Up for Details\" button to view current day air quality details"
          },
          {
            "line": 53,
            "value": "#    Then User can see the \"Heat Map\" Air Quality Details"
          },
          {
            "line": 54,
            "value": "#    When User clicks on \"Swipes Down To Close\" button to close the details"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify that user can access and view Fires nearby under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-fires-nearby-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1118802300,
              "status": "passed"
            },
            "line": 58,
            "name": "User clicks on \"Back\" icon from \"Neighbourhood Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Neighbourhood Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2482078099,
              "status": "passed"
            },
            "line": 59,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1454565099,
              "status": "passed"
            },
            "line": 60,
            "name": "User clicks on Fires NearBy icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnFiresNearByIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6980054399,
              "status": "passed"
            },
            "line": 61,
            "name": "User can view \"Fires Nearby\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Fires Nearby",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6767242200,
              "status": "passed"
            },
            "line": 62,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1229428500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 63,
                "value": "#    Then User can see the \"Fires Nearby\" Air Quality Details"
              }
            ],
            "line": 64,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify that user can view effects of the poor environment and upcoming activities under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-effects-of-the-poor-environment-and-upcoming-activities-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 46100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1097006901,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on \"Back\" icon from \"Fires Nearby\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Fires Nearby",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2693369400,
              "status": "passed"
            },
            "line": 69,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12805687800,
              "status": "passed"
            },
            "line": 70,
            "name": "User clicks on \"Why is it important to monitor my environment\" icon in environment Home Page",
            "match": {
              "arguments": [
                {
                  "val": "Why is it important to monitor my environment",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3186755600,
              "status": "passed"
            },
            "line": 71,
            "name": "User can view short term and long term effects screen",
            "match": {
              "location": "MyEnvironmentSteps.userCanViewShortTermAndLongTermEffectsScreen()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can view air quality details under My Environment screen",
    "description": "",
    "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/MyEnvironments.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sg_myenvironment"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 48999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8779140800,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89600,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14834160499,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254780599,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5004405200,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4849821800,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3487575701,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9885739900,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 226865801,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008691200,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29905637601,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13957031900,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14430064800,
              "status": "passed"
            },
            "line": 23,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37748170400,
              "status": "passed"
            },
            "line": 24,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 34599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5381930301,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5634664000,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12196378800,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRiskDescription}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement1}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement2}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement3}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement4}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 28499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4167601600,
              "status": "passed"
            },
            "line": 48,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement3}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify the HRA Activity summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 39299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3475255000,
              "status": "passed"
            },
            "line": 56,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13662183100,
              "status": "passed"
            },
            "line": 63,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 60500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12800714201,
              "status": "passed"
            },
            "line": 77,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine.description}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids.description}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 87899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4947434399,
              "status": "passed"
            },
            "line": 90,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${babylon.hraReport.change5}"
                ],
                "line": 96
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5698627599,
              "status": "passed"
            },
            "line": 99,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2371070800,
              "status": "passed"
            },
            "line": 100,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 689703900,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 102
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3357980400,
              "status": "passed"
            },
            "line": 103,
            "name": "I verify following text is displayed on HRA report",
            "match": {
              "location": "BabylonSteps.verifyHRAStaticText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${babylon.hraReport.body.heart}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 107
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 41199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2362765501,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2296446400,
              "status": "passed"
            },
            "line": 113,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 751840001,
              "status": "passed"
            },
            "line": 114,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 116
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30746084500,
              "status": "passed"
            },
            "line": 117,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 336086801,
              "status": "passed"
            },
            "line": 118,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 121,
        "name": "Navigate back to nutrition screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-nutrition-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 39299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2303113200,
              "status": "passed"
            },
            "line": 122,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1520487499,
              "status": "passed"
            },
            "line": 123,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 124
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 125
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 127,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 54700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2350528399,
              "status": "passed"
            },
            "line": 128,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 32101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2380935300,
              "status": "passed"
            },
            "line": 131,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1345374200,
              "status": "passed"
            },
            "line": 132,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 133
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 134
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5466418800,
              "status": "passed"
            },
            "line": 135,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 770701100,
              "status": "passed"
            },
            "line": 136,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 140,
        "name": "Navigate back to Activity screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-activity-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 97401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2309256299,
              "status": "passed"
            },
            "line": 141,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 567683400,
              "status": "passed"
            },
            "line": 142,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 144
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 52500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2246603300,
              "status": "passed"
            },
            "line": 147,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 29700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2598709401,
              "status": "passed"
            },
            "line": 150,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 475670199,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 152
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 153
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 329479200,
              "status": "passed"
            },
            "line": 154,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3288183400,
              "status": "passed"
            },
            "line": 155,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 156
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment2}"
                ],
                "line": 157
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 64700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2266478000,
              "status": "passed"
            },
            "line": 160,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report_sg"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 58201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 631125899,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1203201,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8778121300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15228475601,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1990418601,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 271095299,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008233900,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7631169500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#  Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 280023800,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000379600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29755355600,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008897900,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65164844401,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: a2036647-4e9f-4d94-af9b-dba880d2b0b5\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_NegativeFlow.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dietician_Negative"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#    Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 30,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17556071901,
              "status": "passed"
            },
            "line": 33,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15014807400,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18307104999,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2764277400,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 365887800,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3009819200,
              "status": "passed"
            },
            "line": 38,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3484849000,
              "status": "passed"
            },
            "line": 39,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4335314200,
              "status": "passed"
            },
            "line": 41,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2728002499,
              "status": "passed"
            },
            "line": 43,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "124-12-2025"
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 846724800,
              "status": "passed"
            },
            "line": 45,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1132092400,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1283992900,
              "status": "passed"
            },
            "line": 49,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1140075600,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 989833200,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 870549800,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2790709700,
              "status": "passed"
            },
            "line": 54,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3198199900,
              "status": "passed"
            },
            "line": 56,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 809792500,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4256579401,
              "status": "passed"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    And Enter the year Name in Eductaion Details Screen"
              },
              {
                "line": 60,
                "value": "#      | ServiceNumber | 2020 |"
              }
            ],
            "line": 61,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 817463900,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3557175899,
              "status": "passed"
            },
            "line": 64,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 763295301,
              "status": "passed"
            },
            "line": 66,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1201051800,
              "status": "passed"
            },
            "line": 67,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 68,
            "value": "#"
          },
          {
            "line": 69,
            "value": "#"
          },
          {
            "line": 70,
            "value": "#    # Valid Failure -Issue id - PCAONEPULSE-21033"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 38400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 956593400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1987821000,
              "status": "passed"
            },
            "line": 73,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2442371600,
              "status": "passed"
            },
            "line": 74,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1372909000,
              "status": "passed"
            },
            "line": 75,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1349700800,
              "status": "passed"
            },
            "line": 76,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2660147799,
              "status": "passed"
            },
            "line": 77,
            "name": "I Enter the \"Start Date\" in \"2030\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1400714500,
              "status": "passed"
            },
            "line": 78,
            "name": "I Enter the \"End Date\" in \"2010\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 736861800,
              "status": "passed"
            },
            "line": 79,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1322811500,
              "status": "passed"
            },
            "line": 80,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 944297100,
              "status": "passed"
            },
            "line": 81,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91509199,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: java.lang.IllegalStateException: Unable to evaluate expression. See cause\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: a2036647-4e9f-4d94-af9b-dba880d2b0b5\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[Contains(@text,\u0027Add Experience\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:254)\r\n\tat com.onepulse.app.screens.DieticianScreen.VerifyAddExperience(DieticianScreen.java:329)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyServiceOffered(DieticianSteps.java:154)\r\n\tat ✽.Then verify Add Experience message \"Add Experience\"(features/sg/health/dietician/Dietician_NegativeFlow.feature:82)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 82,
            "name": "verify Add Experience message \"Add Experience\"",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 31
                }
              ],
              "location": "DieticianSteps.VerifyServiceOffered(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Dietician Negative Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_NegativeFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_Negative"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 670460100,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 849101,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45700,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9012868701,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16705449300,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005233400,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 234571400,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4993902699,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6847882300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 14,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 310534700,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003949899,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30240708601,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4992987100,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64999954500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 86a9a469-81a8-4863-9049-a626a5b4b254\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_PositiveFlow.feature:55)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I enter the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 25,
                "value": "#      | mobileNumber | 98678419 |"
              },
              {
                "line": 26,
                "value": "#    And I click the continue button"
              },
              {
                "line": 27,
                "value": "#    And I choose my wellness goals under wellness plan screen"
              },
              {
                "line": 28,
                "value": "#    And I click the continue button"
              },
              {
                "line": 29,
                "value": "#    And I click the date in Date of Birth field"
              },
              {
                "line": 30,
                "value": "#    And I click the Done icon"
              },
              {
                "line": 31,
                "value": "#    And I click the continue button"
              },
              {
                "line": 32,
                "value": "#    And I select the  Male icon"
              },
              {
                "line": 33,
                "value": "#    And I click the continue button"
              },
              {
                "line": 34,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 35,
                "value": "#    And I enter my height and weight details"
              },
              {
                "line": 36,
                "value": "#    And I click the continue button"
              },
              {
                "line": 37,
                "value": "#    And I click on Calculate BMI button"
              },
              {
                "line": 38,
                "value": "#    And I click the continue button"
              },
              {
                "line": 39,
                "value": "#    And I select the \"How active are you?\" in doing exercise"
              },
              {
                "line": 40,
                "value": "#    And I click the continue button"
              },
              {
                "line": 41,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 42,
                "value": "#    And I click the continue button"
              },
              {
                "line": 43,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              },
              {
                "line": 44,
                "value": "#    And I click the continue button"
              },
              {
                "line": 45,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 46,
                "value": "#    And I verify that \"Tracking your activity is trending\" is displayed"
              },
              {
                "line": 47,
                "value": "#    And I click the continue button"
              },
              {
                "line": 48,
                "value": "#    And I see that \"Welcome to Pulse\" text is displayed"
              },
              {
                "line": 49,
                "value": "#    And I click the continue button"
              },
              {
                "line": 50,
                "value": "#    And I see that fitness subscription exclusive offers screen is displayed"
              },
              {
                "line": 51,
                "value": "#    And I click on close icon"
              },
              {
                "line": 52,
                "value": "#    And I enter NRIC number last 4 digits \"122F\""
              },
              {
                "line": 53,
                "value": "#   # And I click the continue button"
              },
              {
                "line": 54,
                "value": "#    Then I click skip buttons"
              }
            ],
            "line": 55,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dieticians_positive"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 64,
            "value": "###"
          },
          {
            "line": 65,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 66,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 64599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18184812899,
              "status": "passed"
            },
            "line": 69,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13963872101,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18184800200,
              "status": "passed"
            },
            "line": 71,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3427534000,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 361198601,
              "status": "passed"
            },
            "line": 73,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2670061700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 74,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 75,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 76,
                "value": "#      | What is your service number?                                 |"
              },
              {
                "line": 77,
                "value": "#      | To start getting appointments please complete these details. |"
              },
              {
                "line": 78,
                "value": "#      | Service Number                                               |"
              },
              {
                "line": 79,
                "value": "#      | Issuing Organisation                                         |"
              },
              {
                "line": 80,
                "value": "#      | Valid Till                                                   |"
              }
            ],
            "line": 81,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5264179400,
              "status": "passed"
            },
            "line": 83,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2088560300,
              "status": "passed"
            },
            "line": 85,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "12"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1103077299,
              "status": "passed"
            },
            "line": 87,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1049125000,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 27999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1197961300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   Then I wait for 3 sec"
              },
              {
                "line": 92,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 93,
                "value": "#      | What is your specialisation? |"
              },
              {
                "line": 94,
                "value": "#      | Ear Nose Throat              |"
              },
              {
                "line": 95,
                "value": "#      | Dentists                     |"
              },
              {
                "line": 96,
                "value": "#      | Psychologist                 |"
              },
              {
                "line": 97,
                "value": "#      | Orthopedician                |"
              },
              {
                "line": 98,
                "value": "#      | Paediatrician                |"
              }
            ],
            "line": 99,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1183760200,
              "status": "passed"
            },
            "line": 100,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 785370400,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Add Super Specialisation"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2442392400,
              "status": "passed"
            },
            "line": 103,
            "name": "Enter the Add Super Specialization Till im pulse for Experts Screen",
            "match": {
              "location": "DieticianSteps.Addsuper_specialisation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 818783500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 105,
                "value": "# And I click the continue button"
              }
            ],
            "line": 106,
            "name": "I clicks on \"Add Super Specialisation\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Super Specialisation",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1056842399,
              "status": "passed"
            },
            "line": 107,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 900783100,
              "status": "passed"
            },
            "line": 110,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3134150200,
              "status": "passed"
            },
            "line": 112,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2685327500,
              "status": "passed"
            },
            "line": 114,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 882179100,
              "status": "passed"
            },
            "line": 116,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4337648200,
              "status": "passed"
            },
            "line": 117,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2012"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 802376201,
              "status": "passed"
            },
            "line": 119,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3499046500,
              "status": "passed"
            },
            "line": 120,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2020"
                ],
                "line": 121
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 793240001,
              "status": "passed"
            },
            "line": 122,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1317235601,
              "status": "passed"
            },
            "line": 123,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2123904001,
              "status": "passed"
            },
            "line": 124,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2257467200,
              "status": "passed"
            },
            "line": 125,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2527168800,
              "status": "passed"
            },
            "line": 126,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2606267999,
              "status": "passed"
            },
            "line": 127,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1894652000,
              "status": "passed"
            },
            "line": 128,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1941882899,
              "status": "passed"
            },
            "line": 129,
            "name": "I Enter the \"End Date\" in \"2030\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 797271800,
              "status": "passed"
            },
            "line": 130,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1728272600,
              "status": "passed"
            },
            "line": 131,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 763542500,
              "status": "passed"
            },
            "line": 132,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 544954999,
              "status": "passed"
            },
            "line": 133,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 135,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 26600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001526000,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 976687501,
              "status": "passed"
            },
            "line": 137,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Services Offered"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 831167800,
              "status": "passed"
            },
            "line": 139,
            "name": "I Enter the \"Services Offered\" in \"MBBSDOCTOR\" in service offered screen",
            "match": {
              "arguments": [
                {
                  "val": "Services Offered",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 35
                }
              ],
              "location": "CustomerConnectSteps.EnterServiceOffered(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 958417600,
              "status": "passed"
            },
            "line": 140,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 766897000,
              "status": "passed"
            },
            "line": 141,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Achievements \u0026 Awards"
                ],
                "line": 142
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1576649799,
              "status": "passed"
            },
            "line": 143,
            "name": "I Enter the \"Enter title of the award\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter title of the award",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 43
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2306037599,
              "status": "passed"
            },
            "line": 144,
            "name": "I Enter the \"Enter organisation name (Awarded by)\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter organisation name (Awarded by)",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 55
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2172934900,
              "status": "passed"
            },
            "line": 145,
            "name": "I Enter the \"Year\" in \"2020\" in Achievement Award screen",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterAchievemnetyear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 842121700,
              "status": "passed"
            },
            "line": 146,
            "name": "I clicks on \"Add seminar details whether you attended as a participant or as a speaker.\" in close keyboard screen",
            "match": {
              "arguments": [
                {
                  "val": "Add seminar details whether you attended as a participant or as a speaker.",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickClosekeyboard(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 386445899,
              "status": "passed"
            },
            "line": 147,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 33601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2991191599,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 300224900,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Seminar(s) Attended"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 920636700,
              "status": "passed"
            },
            "line": 153,
            "name": "I Enter the \"Enter seminar title\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter seminar title",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1896693200,
              "status": "passed"
            },
            "line": 154,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2437808899,
              "status": "passed"
            },
            "comments": [
              {
                "line": 155,
                "value": "#  And I Enter the \"Year\" in \"2020\" in home screen"
              }
            ],
            "line": 156,
            "name": "I Enter the \"Year\" in \"2020\" in seminars Attended",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterYear_Semainar(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1020372400,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1958190301,
              "status": "passed"
            },
            "line": 158,
            "name": "I Enter the \"Enter name of the Clinic/ Hospital\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter name of the Clinic/ Hospital",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 53
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2514552200,
              "status": "passed"
            },
            "line": 159,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 918113900,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 37201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 757809700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 163,
                "value": "# Then I wait for 3 sec"
              },
              {
                "line": 164,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 165,
                "value": "#      | About You     |"
              },
              {
                "line": 166,
                "value": "#      | Profile Photo |"
              }
            ],
            "line": 167,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12730882701,
              "status": "passed"
            },
            "line": 168,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9826827100,
              "status": "passed"
            },
            "line": 169,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1842569300,
              "status": "passed"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000990400,
              "status": "passed"
            },
            "line": 171,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4509197199,
              "status": "passed"
            },
            "comments": [
              {
                "line": 172,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 173,
                "value": "#      | Confirm Details! |"
              },
              {
                "line": 174,
                "value": "#      | MBBS-2020-2020   |"
              },
              {
                "line": 175,
                "value": "#      | MBBSDOCTOR       |"
              },
              {
                "line": 176,
                "value": "#      | MBBS             |"
              },
              {
                "line": 177,
                "value": "#      | TEST TITLE       |"
              }
            ],
            "line": 178,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003235699,
              "status": "passed"
            },
            "line": 179,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 317309900,
              "status": "passed"
            },
            "line": 180,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307233700,
              "status": "passed"
            },
            "line": 181,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 183,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 29301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4999800700,
              "status": "passed"
            },
            "line": 184,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 286882199,
              "status": "passed"
            },
            "comments": [
              {
                "line": 185,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 186,
                "value": "#      | Conversation History              |"
              },
              {
                "line": 187,
                "value": "#      | Click To Manage Your Availability |"
              }
            ],
            "line": 188,
            "name": "I clicks on \"Schedule Calendar\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Schedule Calendar",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187345899,
              "status": "passed"
            },
            "line": 189,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Calendar"
                ],
                "line": 190
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2907279200,
              "status": "passed"
            },
            "line": 191,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_PositiveFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dieticians_positive"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 41400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8595950400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89601,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7860549599,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9589230199,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 338467400,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10005245700,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30492924201,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13742387500,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6818324300,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2031528900,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10345757400,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 341726401,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8013422100,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 63200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8904862600,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8001650300,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 457454401,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 974237200,
              "status": "passed"
            },
            "line": 29,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 31
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to download eMC Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-emc-document",
        "after": [
          {
            "result": {
              "duration": 54100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 361763500,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on emc attachment",
            "match": {
              "location": "MyDocSteps.clickEmcAttachment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8600855201,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5077655300,
              "status": "passed"
            },
            "line": 37,
            "name": "I download \"${EMC_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify User should be able to verify the eMC details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-emc-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 990583400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 125393899,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/eMC-11th-January-2021-13980.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medical Certificate"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${DOCTOR_NAME}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 45,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify User should be able to download Prescription Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-prescription-document",
        "after": [
          {
            "result": {
              "duration": 74999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4429890100,
              "status": "passed"
            },
            "line": 48,
            "name": "I open the Prescription",
            "match": {
              "location": "MyDocSteps.openPrescription()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13694942999,
              "status": "passed"
            },
            "line": 49,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5077711300,
              "status": "passed"
            },
            "line": 50,
            "name": "I download \"${PRE_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to verify the Prescription details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-prescription-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 872690700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2406900,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Prescription-11th-January-2021-KJRYHM3H2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${PRESCRPTION_NUMBER}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 58,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to download the Referral Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-the-referral-document",
        "after": [
          {
            "result": {
              "duration": 59500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5835359700,
              "status": "passed"
            },
            "line": 61,
            "name": "I open the referral",
            "match": {
              "location": "MyDocSteps.openReferral()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13070970800,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5029099800,
              "status": "passed"
            },
            "line": 63,
            "name": "I download \"${REF_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to verify the Referral details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-referral-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 1066778200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2380499,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Referral-11th-January-2021-KJRYIP3Q2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${EPISODE ID}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${REFERRAL_NUMBER}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able to Download as PDF Files \u0026 Validate the details in downloaded Mydoc Documents.",
    "description": "",
    "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MydocDocsDownload"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 7,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 28699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8625386501,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79901,
              "status": "passed"
            },
            "line": 9,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7686521000,
              "status": "passed"
            },
            "line": 10,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9561479000,
              "status": "passed"
            },
            "line": 11,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 256814500,
              "status": "passed"
            },
            "line": 14,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9989386400,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31324610300,
              "status": "passed"
            },
            "line": 16,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14209739900,
              "status": "passed"
            },
            "line": 17,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6455421099,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1982219500,
              "status": "passed"
            },
            "line": 19,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 20
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 21
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10305429900,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 332687800,
              "status": "passed"
            },
            "line": 23,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7420823900,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 39200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8709362400,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 432662800,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 793775001,
              "status": "passed"
            },
            "line": 31,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${REF_FILE_NAME}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${PRE_FILE_NAME}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${mc.file.name}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19204713599,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4580507900,
              "status": "passed"
            },
            "line": 36,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4988691501,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4619739800,
              "status": "passed"
            },
            "line": 38,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5007697700,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4608001700,
              "status": "passed"
            },
            "line": 40,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4216172299,
              "status": "passed"
            },
            "line": 41,
            "name": "I navigate to online consultation screen for mydoc registration",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreenForMydocRegistration()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Verify User should be presented with the Mydoc Chat bot questions log",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-presented-with-the-mydoc-chat-bot-questions-log",
        "after": [
          {
            "result": {
              "duration": 2363370701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 101317490600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tChoking text is displayed on page  expected [true] but found [false],\n\tBreathing difficulty text is displayed on page  expected [true] but found [false],\n\tChest pain text is displayed on page  expected [true] but found [false],\n\tWeakness in arms or legs text is displayed on page  expected [true] but found [false],\n\tSpeech difficulty text is displayed on page  expected [true] but found [false],\n\tLoss of consciousness text is displayed on page  expected [true] but found [false],\n\tSuicidal or homicidal thoughts text is displayed on page  expected [true] but found [false],\n\tSeizures text is displayed on page  expected [true] but found [false],\n\tBleeding text is displayed on page  expected [true] but found [false],\n\tSevere pain text is displayed on page  expected [true] but found [false],\n\tConfusion and/or hallucinations text is displayed on page  expected [true] but found [false],\n\tBroken bones text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:44)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User can able to chat with Mydoc Chat bot",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-chat-with-mydoc-chat-bot",
        "after": [
          {
            "result": {
              "duration": 2155165700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13452450300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0923531b-2299-4840-845d-23f467ee3bd4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027None of the above\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.handleEmergencySymptomQues(MyDocMedicalProfileScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.handleEmergencySymptomQues(MyDocSteps.java:179)\r\n\tat ✽.When Handle Emergency symptoms questions for doctor consult(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 60,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify User should be able to update the medical profile for registered user",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-update-the-medical-profile-for-registered-user",
        "after": [
          {
            "result": {
              "duration": 2293928901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18678447399,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0923531b-2299-4840-845d-23f467ee3bd4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.enterMedicalProfile(MyDocMedicalProfileScreen.java:83)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterMedicalProfileDetails(MyDocSteps.java:186)\r\n\tat ✽.When I enter Medical Profile details as below(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:63)\r\n",
              "status": "failed"
            },
            "line": 63,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 68
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 2542686200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 80391381100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:72)\r\n",
              "status": "failed"
            },
            "line": 72,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 75
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 77
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 78
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 79
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 80
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 81
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 84,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User should be able to select payment with existing added card",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-select-payment-with-existing-added-card",
        "after": [
          {
            "result": {
              "duration": 2356200001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10016533200,
              "status": "passed"
            },
            "line": 87,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36341453200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0923531b-2299-4840-845d-23f467ee3bd4\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Visa\u0027]/following::android.widget.Image[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyPaymentUsingExistingAddedCard(MyDocPaymentDetailsScreen.java:155)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard(MyDocUiSteps.java:158)\r\n\tat ✽.When I select the confirm payment using already added card(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:88)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "I select the confirm payment using already added card",
            "match": {
              "location": "MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 2550482700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 27805411800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0923531b-2299-4840-845d-23f467ee3bd4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:73)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:91)\r\n",
              "status": "failed"
            },
            "line": 91,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 92
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 96
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 104
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 105
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 106
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 107
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 108
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 111,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 114,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 2063303899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000099300,
              "status": "passed"
            },
            "line": 115,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 88064195499,
              "status": "passed"
            },
            "line": 116,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76511713401,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0923531b-2299-4840-845d-23f467ee3bd4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.ScrollView/android.view.ViewGroup/android.view.ViewGroup[3]/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:142)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:117)\r\n",
              "status": "failed"
            },
            "line": 117,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 118,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 119,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc doctor consultation Summary on Pulse Health \u0026 Wealth app",
    "description": "1. Verify Consultation History Screen\r\n2. Verify All My Files Documents\r\n3. Verify User able to Complete Mydoc Journey Without Mydoc Registration (Existing user)",
    "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocConsultationSummaryTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@MydocConsultationSummary"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 676972600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 458500,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21401,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8861737599,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14751908399,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8070745900,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 10
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 326169601,
              "status": "passed"
            },
            "line": 14,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002335101,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "# Then I wait for 45 sec"
              }
            ],
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29341358700,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5004711700,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10794742200,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "81069586"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8538004800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 22,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 504520699,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5875796699,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 299611200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 26,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 27,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1431084699,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6431901100,
              "status": "passed"
            },
            "line": 29,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1063568300,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8011798100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 32,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 490352500,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9121460600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 324dff52-a148-4bd1-bc49-125cfa9460cd\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/health/mydoc/MyDocEndToEndTest.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click \"${reg.tracker.connect}\" button on the app",
            "match": {
              "arguments": [
                {
                  "val": "${reg.tracker.connect}",
                  "offset": 9
                }
              ],
              "location": "WealthSteps.iClickButtonOnTheApp(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 46,
                "value": "#And I click the continue button"
              }
            ],
            "line": 47,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyDocEndToEndTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the online consultation screen user fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields",
        "after": [
          {
            "result": {
              "duration": 52399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17398800301,
              "status": "passed"
            },
            "line": 57,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12825855000,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45072323299,
              "status": "passed"
            },
            "line": 59,
            "name": "I navigate to online consultation screen",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3934538400,
              "status": "passed"
            },
            "line": 60,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 61,
                    "value": "##Gender and DOB validation in below step is not covered for IOS due to locator issue"
                  }
                ],
                "cells": [
                  "Online Consultation"
                ],
                "line": 62
              },
              {
                "cells": [
                  "First Name / Given Name"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Last Name / Family Name"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Email"
                ],
                "line": 65
              },
              {
                "cells": [
                  "County of Residence"
                ],
                "line": 66
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4535485800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "#  Then I select gender and date of birth for newly registered user"
              }
            ],
            "line": 68,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify the online consultation screen user fields after swipe down",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields-after-swipe-down",
        "after": [
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4513014499,
              "status": "passed"
            },
            "line": 72,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1730421300,
              "status": "passed"
            },
            "line": 73,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 74,
                    "value": "# |Address (city)          |"
                  }
                ],
                "cells": [
                  "Address (zipcode)"
                ],
                "line": 75
              },
              {
                "cells": [
                  "NRIC/FIN"
                ],
                "line": 76
              },
              {
                "cells": [
                  "NRIC/FIN Image"
                ],
                "line": 77
              },
              {
                "cells": [
                  "Phone"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "Verify User should be able to enter address and zipcode",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-enter-address-and-zipcode",
        "after": [
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8483052999,
              "status": "passed"
            },
            "line": 81,
            "name": "I enter \"${address}\" and \"${zipcode}\"",
            "match": {
              "arguments": [
                {
                  "val": "${address}",
                  "offset": 9
                },
                {
                  "val": "${zipcode}",
                  "offset": 26
                }
              ],
              "location": "MyDocUiSteps.iEnterAnd(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 83,
        "name": "Verify User should be able to upload NRIC Image in Online Consultation screen",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-upload-nric-image-in-online-consultation-screen",
        "after": [
          {
            "result": {
              "duration": 57900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5013094600,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42759809001,
              "status": "passed"
            },
            "line": 85,
            "name": "I enter the mandatory fields \"${NRIC}\"",
            "match": {
              "arguments": [
                {
                  "val": "${NRIC}",
                  "offset": 30
                }
              ],
              "location": "MyDocUiSteps.iEnterTheMandatoryFields(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44242965401,
              "status": "passed"
            },
            "line": 86,
            "name": "I verify the \"${phonenumber}\" and proceed with \"${otp}\"",
            "match": {
              "arguments": [
                {
                  "val": "${phonenumber}",
                  "offset": 14
                },
                {
                  "val": "${otp}",
                  "offset": 48
                }
              ],
              "location": "MyDocUiSteps.iVerifyTheAndProceedWith(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be presented with the symptoms checker questions log",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-symptoms-checker-questions-log",
        "after": [
          {
            "result": {
              "duration": 32799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3184954800,
              "status": "passed"
            },
            "line": 89,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 91
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Verify User can able to chat with chatbot symptoms checker",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-can-able-to-chat-with-chatbot-symptoms-checker",
        "after": [
          {
            "result": {
              "duration": 35799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9754966501,
              "status": "passed"
            },
            "line": 104,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify User should be presented with the sample text on the Medical Profile screen as a first time user",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-sample-text-on-the-medical-profile-screen-as-a-first-time-user",
        "after": [
          {
            "result": {
              "duration": 60299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2572717999,
              "status": "passed"
            },
            "line": 107,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 638642501,
              "status": "passed"
            },
            "line": 108,
            "name": "Verify the Sample Text on the text fields of the Medical Profile",
            "match": {
              "location": "MyDocSteps.validateMedProfSampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "Enter \u0027None\u0027 if no allergies"
                ],
                "line": 109
              },
              {
                "cells": [
                  "Medical Conditions",
                  "Enter \u0027None\u0027 if no medical conditions"
                ],
                "line": 110
              },
              {
                "cells": [
                  "Medications",
                  "Enter \u0027None\u0027 if no medications"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 51200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify User should be able to create the medical profile",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-create-the-medical-profile",
        "after": [
          {
            "result": {
              "duration": 65699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9384872900,
              "status": "passed"
            },
            "line": 114,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 117
              },
              {
                "cells": [
                  "EmergencyContact Name",
                  "Pulse QA"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 120
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2587674200,
              "status": "passed"
            },
            "line": 121,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 93501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 1046985699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 77113605900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocEndToEndTest.feature:124)\r\n",
              "status": "failed"
            },
            "line": 124,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 128
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 129
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 130
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 131
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 132
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 133
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 134
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 136,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Verify User should be able enter the card details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-enter-the-card-details",
        "after": [
          {
            "result": {
              "duration": 1053064699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8184711000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 324dff52-a148-4bd1-bc49-125cfa9460cd\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Add new cards\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.clickAddNewCardButton(MyDocPaymentDetailsScreen.java:92)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.clickAddNewCardButton(MyDocSteps.java:308)\r\n\tat ✽.When I click on Add New Card button(features/sg/health/mydoc/MyDocEndToEndTest.feature:140)\r\n",
              "status": "failed"
            },
            "line": 140,
            "name": "I click on Add New Card button",
            "match": {
              "location": "MyDocSteps.clickAddNewCardButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "user verify add card details screen fields",
            "match": {
              "location": "MyDocSteps.userVerifyAddCardDetailsScreenFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pay with card"
                ],
                "line": 142
              },
              {
                "cells": [
                  "Card Number"
                ],
                "line": 143
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 144,
            "name": "I enter Card details as below",
            "match": {
              "location": "MyDocSteps.enterCardDetailsDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card Number",
                  "4111 1111 1111 1111"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Expiration Date",
                  "0822"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Card Number Android",
                  "4111 1111 1111 1111"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Expiration Date Android",
                  "08 / 22"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "I click on Confirm Payment Method button",
            "match": {
              "location": "MyDocSteps.clickConfirmPaymentMethodButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 150,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 152,
        "name": "Verify User should be able see the added card successfully",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-added-card-successfully",
        "after": [
          {
            "result": {
              "duration": 1047743701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7702602699,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 324dff52-a148-4bd1-bc49-125cfa9460cd\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Online Video Consultation\u0027]/preceding::android.view.ViewGroup[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyAddedCard(MyDocPaymentDetailsScreen.java:139)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.iVerifyTheMyCardAddedSuccessfully(MyDocSteps.java:819)\r\n\tat ✽.Then I verify the my card added successfully(features/sg/health/mydoc/MyDocEndToEndTest.feature:153)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 153,
            "name": "I verify the my card added successfully",
            "match": {
              "location": "MyDocSteps.iVerifyTheMyCardAddedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 972062900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10333340900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 324dff52-a148-4bd1-bc49-125cfa9460cd\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText/following::android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:74)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/sg/health/mydoc/MyDocEndToEndTest.feature:156)\r\n",
              "status": "failed"
            },
            "line": 156,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 157
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 158
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 160
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 161
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 162
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 163
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 164
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 169
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 170
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 171
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 172
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 173
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 176,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 1108660200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5014058500,
              "status": "passed"
            },
            "line": 180,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86917345000,
              "status": "passed"
            },
            "line": 181,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74823655101,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 324dff52-a148-4bd1-bc49-125cfa9460cd\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.ScrollView/android.view.ViewGroup/android.view.ViewGroup[3]/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:142)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/sg/health/mydoc/MyDocEndToEndTest.feature:182)\r\n",
              "status": "failed"
            },
            "line": 182,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 183,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 184,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc functionality on Pulse Health",
    "description": "",
    "id": "verify-mydoc-functionality-on-pulse-health",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocEndToEndTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyDocEndToEndTest"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 36499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 37900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8884015799,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78899,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8364684601,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10561381000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 310888699,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002624300,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31603172200,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14909826500,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6706998200,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2793010699,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10748478400,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1800435300,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6627411899,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 119800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8600395599,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 359171100,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 820068700,
              "status": "passed"
            },
            "line": 28,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20968153700,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able see all available documents in All My Files screen",
    "description": "",
    "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/PulseMyDocFileValidation.feature",
    "tags": [
      {
        "line": 1,
        "name": "@FileValidation"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 68101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 640250700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1310399,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74101,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8644777600,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16966075700,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008136700,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 359190400,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5009892100,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7058055300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 263876400,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012981400,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30057227399,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006165400,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10855065400,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8374534300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 25,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 478973499,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5874423300,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 289942900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 29,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1367310700,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5365206400,
              "status": "passed"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1221616000,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8511577500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 35,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 464791100,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7625513501,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 43e2aaf6-9f8d-44a0-91b1-1ebb23a6aaf6\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/home/mycontent/MyContent.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 49,
                "value": "# And I click the continue button"
              }
            ],
            "line": 50,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@sanity"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyContentFirst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to navigate to Health channel page",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-channel-page",
        "after": [
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17391430600,
              "status": "passed"
            },
            "line": 59,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 409111801,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#  And User has pulse app"
              },
              {
                "line": 61,
                "value": "#  And I clicks on \"Content\" in app screen"
              }
            ],
            "line": 62,
            "name": "I clicks on \"Content\" in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "Content",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcons(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15009420700,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1628465900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 64,
                "value": "#   And I click the First Image in Health channel"
              },
              {
                "line": 65,
                "value": "#  Then I wait for 15 sec"
              }
            ],
            "line": 66,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 83200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5842525800,
              "status": "passed"
            },
            "line": 72,
            "name": "I read the Post count data in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.iReadThePostLikeCount()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5459143601,
              "status": "passed"
            },
            "line": 73,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5226593500,
              "status": "passed"
            },
            "line": 74,
            "name": "I read the Post cound after click the Like button",
            "match": {
              "location": "CustomerConnectSteps.iVerifyPostLikeCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6308519700,
              "status": "passed"
            },
            "line": 75,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 1435937500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5484672901,
              "status": "passed"
            },
            "line": 78,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29096023401,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 43e2aaf6-9f8d-44a0-91b1-1ebb23a6aaf6\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.Button[@text\u003d\u0027Cancel\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.WealthScreen.verifyShareWithFriendsPopUp(WealthScreen.java:229)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.WealthSteps.iVerifyTheShareWithFriendsPopup(WealthSteps.java:95)\r\n\tat ✽.Then I Verify the share with friends popup(features/sg/home/mycontent/MyContent.feature:79)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 79,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 1343626100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5189025600,
              "status": "passed"
            },
            "line": 82,
            "name": "I read the Comment count in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostClick()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4672188300,
              "status": "passed"
            },
            "line": 83,
            "name": "I click the comment icon in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17351272801,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 43e2aaf6-9f8d-44a0-91b1-1ebb23a6aaf6\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText[@text\u003d\u0027Write a Comment\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.enterComment(CustomerConnectScreen.java:1281)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.iCommentedInThePost(CustomerConnectSteps.java:390)\r\n\tat ✽.And I commented in the posts \"${Health.topic.comment}\"(features/sg/home/mycontent/MyContent.feature:84)\r\n",
              "status": "failed"
            },
            "line": 84,
            "name": "I commented in the posts \"${Health.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${Health.topic.comment}",
                  "offset": 26
                }
              ],
              "location": "CustomerConnectSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 85,
            "name": "I read the Post count after click the comments button",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCount()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30416468200,
              "status": "passed"
            },
            "line": 89,
            "name": "I click on Covid-19  topic for details full view",
            "match": {
              "location": "CustomerConnectSteps.ClickFirstImagesIcons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15004049900,
              "status": "passed"
            },
            "line": 90,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002648701,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 94
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 96,
        "name": "Verify User should be able to Like the post- Full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post--full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 55700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5516521501,
              "status": "passed"
            },
            "line": 97,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5401997400,
              "status": "passed"
            },
            "line": 98,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10759268300,
              "status": "passed"
            },
            "line": 99,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify MyContent functionality on one pulse App",
    "description": "",
    "id": "verify-mycontent-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/home/mycontent/MyContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyContentFirst"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 42001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that No linked policies information message is displayed",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-no-linked-policies-information-message-is-displayed",
        "after": [
          {
            "result": {
              "duration": 38801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8841683101,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64001,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7459802799,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10617860900,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 336132400,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10010215499,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30236288399,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10508820500,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 516391400,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on \"My Policies\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "My Policies",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1681337700,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on Proceed button to accept the terms and conditions",
            "match": {
              "location": "MyPolicySteps.iClicksOnProceedButtonToAcceptTheTermsAndConditions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2187632200,
              "status": "passed"
            },
            "line": 19,
            "name": "User can see the list of linked policies",
            "match": {
              "location": "MyPolicySteps.userCanSeeTheListOfLinkedPolicies()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@OPUATRegressionSG"
          }
        ]
      }
    ],
    "name": "Verify that user can view his registered policies under My Policies",
    "description": "",
    "id": "verify-that-user-can-view-his-registered-policies-under-my-policies",
    "keyword": "Feature",
    "uri": "features/sg/home/mypolicies/MyPolicies.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@MyPolicies"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 19901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 29100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8912227200,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75400,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8625232300,
              "status": "passed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10559398101,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 312294999,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10017708900,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30053056299,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13935574600,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 30100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4992570900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 772765799,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4545390000,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2475485600,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 30,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 25201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2342690599,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13625172801,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2347009901,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2386612800,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 61000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1320231900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 39,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1732395600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 41,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2835879900,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20667767800,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000477601,
              "status": "passed"
            },
            "line": 49,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22115501600,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalsg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 7,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 8,
            "value": "#    When user enters credentials"
          },
          {
            "line": 9,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 10,
            "value": "#      | Password | Pas$1234      |"
          },
          {
            "line": 11,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 12,
            "value": "#    Then I wait for 40 sec"
          },
          {
            "line": 13,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 14,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 15,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 16,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          },
          {
            "line": 17,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 18,
            "value": "#    Then user navigate to account page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 44800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8818948299,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65000,
              "status": "passed"
            },
            "line": 22,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10333040800,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9643241900,
              "status": "passed"
            },
            "line": 24,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 26
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 279110600,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000967701,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30182215599,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10210204500,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 52600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4989584001,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 697511999,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3822620300,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3896612800,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2648530999,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4851802699,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9271624200,
              "status": "passed"
            },
            "line": 46,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5036444899,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3011790101,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5183729900,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3008254200,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3530081399,
              "status": "passed"
            },
            "line": 54,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8400161201,
              "status": "passed"
            },
            "line": 55,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8541292500,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8875167100,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3002343000,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 300380900,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify the following text \"Marketing Consent\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "Marketing Consent",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Marketing.Consent.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3625666399,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8367234500,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10486913500,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/sg/profile/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsSg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@Sanity1"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressioPH"
      },
      {
        "line": 1,
        "name": "@PhPersonalized"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 19801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8672486700,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 91500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8229045800,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1448100,
              "status": "passed"
            },
            "line": 8,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10562093499,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 291893500,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003750801,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30316005800,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13757745901,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 69000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 29600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 778171399,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to wealth screen",
            "match": {
              "location": "WealthSteps.iNavigateToWealthScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4267235100,
              "status": "passed"
            },
            "line": 19,
            "name": "I verify following wealth homepage options",
            "match": {
              "location": "WealthSteps.iVerifyFollowingWealthHomepageOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channel"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Wealth"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Care about your finances"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to see the wealth screen options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-wealth-screen-options",
        "after": [
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5355089999,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to wealth channel explore page",
            "match": {
              "location": "WealthSteps.iNavigateToWealthChannelExplorePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33045408800,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 29
              },
              {
                "comments": [
                  {
                    "line": 30,
                    "value": "# |Importance of Money Parenting |"
                  }
                ],
                "cells": [
                  "What should I as a Parent know?"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 61801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5626916799,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on \"Learn Investing Basics\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 40099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the story post Like, Share, Comment options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-story-post-like,-share,-comment-options",
        "after": [
          {
            "result": {
              "duration": 53500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11496971900,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 72600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13565581901,
              "status": "passed"
            },
            "line": 43,
            "name": "I read the \"Learn Investing Basics\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5689273100,
              "status": "passed"
            },
            "line": 44,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5317161800,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify \"Learn Investing Basics\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5679446700,
              "status": "passed"
            },
            "line": 46,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 59300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 36999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5527352300,
              "status": "passed"
            },
            "line": 49,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5579690000,
              "status": "passed"
            },
            "line": 50,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 81100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5244848500,
              "status": "passed"
            },
            "line": 53,
            "name": "I read the \"Learn Investing Basics\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8323435100,
              "status": "passed"
            },
            "line": 54,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5272670099,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify \"Learn Investing Basics\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 111200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 99000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 29600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7638588801,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on \"Learn Investing Basics\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 27801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5012629400,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33906419200,
              "status": "passed"
            },
            "line": 62,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 52800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5571303401,
              "status": "passed"
            },
            "line": 67,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5635617000,
              "status": "passed"
            },
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5451104499,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10642779301,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23149084101,
              "status": "passed"
            },
            "line": 75,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 31200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3743144701,
              "status": "passed"
            },
            "line": 78,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5512614799,
              "status": "passed"
            },
            "line": 79,
            "name": "I click on \"Learn Investing Basics\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5367863500,
              "status": "passed"
            },
            "line": 80,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@WealthChannelSG"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@05JulyTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8855106199,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 114200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16215896299,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 224560400,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001335800,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35101,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4906069299,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1537257700,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 36001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2257928000,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11589471000,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242644599,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33610049999,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012302599,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14518995700,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 66800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13747785299,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9759051901,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7100264200,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 31699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22505232801,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11901,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 30801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21771287600,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in OnePulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  }
]