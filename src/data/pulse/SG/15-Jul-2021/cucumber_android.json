[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 108451100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 361551200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 102100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9075256500,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2390700,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16440209300,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238864600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001087700,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 108100,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4853794700,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1430895500,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2226088400,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10343744400,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 249467700,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5007740300,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31679610000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14606847800,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9104119700,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2004839700,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12881658300,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 249763800,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009156400,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4843024200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001526700,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2286978300,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10344284700,
              "status": "passed"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 259576800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 726241700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 207084500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3541859300,
              "status": "passed"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 786709400,
              "status": "passed"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 839252300,
              "status": "passed"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 48600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5974000,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90200,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8206703200,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16414756500,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 222260900,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012617900,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4816881100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2015263200,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2275762300,
              "status": "passed"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10276998400,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4546994900,
              "status": "passed"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238744100,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078230500,
              "status": "passed"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 221855200,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3547995000,
              "status": "passed"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 753282800,
              "status": "passed"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1148849500,
              "status": "passed"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 120300,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3636201500,
              "status": "passed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 772032300,
              "status": "passed"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26563070700,
              "status": "passed"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5009872000,
              "status": "passed"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 900398000,
              "status": "passed"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5001400600,
              "status": "passed"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 141346900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1654128900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 380700,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49200,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8195941800,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2004133000,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14170868500,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 250374500,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5016435300,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51000,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005209000,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7478779600,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 417340400,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4254479700,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30485515100,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66092535900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: db31d931-e2c8-4fb5-bec6-d94d27f8f5a9\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/PulseLoginTest.feature:108)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 83600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9010117200,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2004865800,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13373320800,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008142400,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 252714900,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013407900,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1298812700,
              "status": "passed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 204373300,
              "status": "passed"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009235000,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2557814300,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10008243900,
              "status": "passed"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14928853600,
              "status": "passed"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10135268000,
              "status": "passed"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 52500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 50300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 698827200,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 636300,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85700,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9758824300,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003262300,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13382982900,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012486700,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 259483500,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007636600,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008321800,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7627382600,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 420839400,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5330521600,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31372394700,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007918800,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10988075600,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7967514800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 30,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5385538800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 32,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 259112300,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1380572800,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5825464000,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1052685700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8235906500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 38,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 486296100,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9310359900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 2439f4ca-e637-4f9b-90d0-7b0b59d3185c\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:944)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/PulseRegistrationTest.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I answer as \"${option.yes.text}\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "${option.yes.text}",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 37
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 48,
                "value": "#Specific for PH reg flow"
              }
            ],
            "line": 49,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 51,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 52,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 53,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 54,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 56,
                "value": "#Specific for SG reg flow"
              }
            ],
            "line": 57,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 58,
                "value": "#And I click the continue button"
              }
            ],
            "line": 59,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 66
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 69,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@regtst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 63200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9114363700,
              "status": "passed"
            },
            "line": 73,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2004420400,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14195978200,
              "status": "passed"
            },
            "line": 75,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009511300,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 258738900,
              "status": "passed"
            },
            "line": 77,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005008700,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 73200,
              "status": "passed"
            },
            "line": 79,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999436400,
              "status": "passed"
            },
            "line": 80,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 912076100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 81,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 82,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 87,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 88,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 89,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 59300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 92,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 258383500,
              "status": "passed"
            },
            "line": 93,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1544295500,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 98
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 61800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 52900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2119009100,
              "status": "passed"
            },
            "line": 102,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 103
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 279455200,
              "status": "passed"
            },
            "line": 104,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 796059300,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 106
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 68800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2058695000,
              "status": "passed"
            },
            "line": 102,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 103
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 285056600,
              "status": "passed"
            },
            "line": 104,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 774372000,
              "status": "passed"
            },
            "line": 105,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 106
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 77300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 39800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9026356400,
              "status": "passed"
            },
            "line": 114,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2001919900,
              "status": "passed"
            },
            "line": 115,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13424508000,
              "status": "passed"
            },
            "line": 116,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011904800,
              "status": "passed"
            },
            "line": 117,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 260614400,
              "status": "passed"
            },
            "line": 118,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016242900,
              "status": "passed"
            },
            "line": 119,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 43000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 120,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 121,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2014457900,
              "status": "passed"
            },
            "line": 122,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7390368700,
              "status": "passed"
            },
            "line": 123,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 124
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 127
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 305994300,
              "status": "passed"
            },
            "line": 128,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1247928700,
              "status": "passed"
            },
            "line": 129,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 130
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 133,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 754100,
              "status": "passed"
            },
            "line": 134,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71500,
              "status": "passed"
            },
            "line": 135,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9690055500,
              "status": "passed"
            },
            "line": 136,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2008896700,
              "status": "passed"
            },
            "line": 137,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14451656800,
              "status": "passed"
            },
            "line": 138,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011372300,
              "status": "passed"
            },
            "line": 139,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 232464100,
              "status": "passed"
            },
            "line": 140,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010419800,
              "status": "passed"
            },
            "line": 141,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 142,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 143,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002607600,
              "status": "passed"
            },
            "line": 144,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8083764700,
              "status": "passed"
            },
            "line": 145,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 146
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 148
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 149
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 263481400,
              "status": "passed"
            },
            "line": 150,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4397669900,
              "status": "passed"
            },
            "line": 151,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31478972600,
              "status": "passed"
            },
            "line": 152,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012663900,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 124812400,
              "status": "passed"
            },
            "line": 154,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10223503200,
              "status": "passed"
            },
            "line": 155,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 891360000,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003869400,
              "status": "passed"
            },
            "line": 158,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 166705000,
              "status": "passed"
            },
            "line": 159,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 161,
            "value": "#Not adding to PH regression as the reg screen order keeps changing for the LBU"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 76000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify the Registration screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-registration-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 650797800,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10727025800,
              "status": "passed"
            },
            "line": 163,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 164
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1008459600,
              "status": "passed"
            },
            "line": 165,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1004760300,
              "status": "passed"
            },
            "line": 166,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11475421200,
              "error_message": "java.lang.AssertionError: ${wellness.goal.alert.text} expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.verifyInvalidMsg(RegistrationSteps.java:384)\r\n\tat ✽.Then verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen(features/PulseRegistrationTest.feature:167)\r\n",
              "status": "failed"
            },
            "line": 167,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "verify BMI validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 31
                }
              ],
              "location": "RegistrationSteps.verifyBMIMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 188,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 190,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 191,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 192,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 351800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 200000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 195,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 543800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 284200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 496600,
              "status": "passed"
            },
            "line": 196,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51200,
              "status": "passed"
            },
            "line": 197,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8898826600,
              "status": "passed"
            },
            "line": 198,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010866800,
              "status": "passed"
            },
            "line": 199,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13844282300,
              "status": "passed"
            },
            "line": 200,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009111500,
              "status": "passed"
            },
            "line": 201,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 237832000,
              "status": "passed"
            },
            "line": 202,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010224400,
              "status": "passed"
            },
            "line": 203,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 204,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 205,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007612700,
              "status": "passed"
            },
            "line": 206,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7508234900,
              "status": "passed"
            },
            "line": 207,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 208
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 209
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 210
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 211
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 311377000,
              "status": "passed"
            },
            "line": 212,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4384016700,
              "status": "passed"
            },
            "line": 213,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90008897600,
              "status": "passed"
            },
            "line": 214,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3455622200,
              "status": "passed"
            },
            "line": 215,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30697805400,
              "status": "passed"
            },
            "line": 216,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002088900,
              "status": "passed"
            },
            "line": 217,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8311807500,
              "status": "passed"
            },
            "line": 218,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 194,
            "name": "@otpreset_tst"
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Registrations"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 87200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 63900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 59700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9414847000,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 194300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15023365100,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 248697900,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5010011900,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4867821600,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3627514400,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9840880400,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 339355500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012894700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30311846700,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15572005700,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5009707900,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 55400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11743121300,
              "status": "passed"
            },
            "line": 26,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4658528100,
              "status": "passed"
            },
            "line": 27,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013424200,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21547124500,
              "status": "passed"
            },
            "line": 31,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12134384100,
              "status": "passed"
            },
            "line": 32,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 69100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 385012000,
              "status": "passed"
            },
            "line": 35,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 698678100,
              "status": "passed"
            },
            "line": 36,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 539964100,
              "status": "passed"
            },
            "line": 37,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 499300,
              "status": "passed"
            },
            "line": 40,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55800,
              "status": "passed"
            },
            "line": 41,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2918356700,
              "status": "passed"
            },
            "line": 44,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13870619000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 48,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 49,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 50,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 51,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 975310500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7882794700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 4e1e4fd7-3d56-4b5d-be01-90e2a1d93727\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027years\u0027)]/following::android.view.ViewGroup[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickeditProfileLink(PulseManageProfileScreen.java:181)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickEditProfileLink(EditProfileSteps.java:37)\r\n\tat ✽.Given user click on Edit profile link(features/editProfile/PulseEditProfileTest.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 63,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 789598200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3044279500,
              "status": "passed"
            },
            "line": 64,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24783986600,
              "status": "passed"
            },
            "line": 65,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2017372200,
              "status": "passed"
            },
            "line": 66,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 599299800,
              "error_message": "java.lang.AssertionError: actual value is Automation-43829061628 expected [Automation-79515071738] but found [Automation-43829061628]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.verifyDefaultValuesOnBabylonRegPage(PulseManageProfileScreen.java:516)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(EditProfileSteps.java:156)\r\n\tat ✽.Then I verify the default values in babylon registration page is updated as below(features/editProfile/PulseEditProfileTest.feature:67)\r\n",
              "status": "failed"
            },
            "line": 67,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 71
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 75500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3519917200,
              "status": "passed"
            },
            "line": 76,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5008503000,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 79800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 47900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1614113200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1203600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 94500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8884501200,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011558600,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15043869000,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1996681100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 244797700,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1987531200,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 67600,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009702800,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7744547800,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 260899500,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5162105800,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29632917500,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2014277900,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63883570800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 517bd3d9-45a0-40ca-9af7-758c3d7f2732\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/BabylonHRA_Registration.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 57500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1475321800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29481830500,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 77194080200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 517bd3d9-45a0-40ca-9af7-758c3d7f2732\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Continue\u0027]/preceding::android.view.ViewGroup[1]/android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonRegistrationScreen.navigateToBabylonHealthAssessment(BabylonRegistrationScreen.java:253)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition(BabylonSteps.java:319)\r\n\tat ✽.And I navigate to Babylon health Assessment and Accept TermsAndCondition(features/health/BabylonHRA_Registration.feature:30)\r\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey",
    "keyword": "Feature",
    "uri": "features/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# This feature will fail due to the defect PCAONEPULSE-21990"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 75600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9111406600,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 194400,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16466331700,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 241233900,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000012900,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4859406300,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3762330200,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10293322500,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 250199300,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5004636900,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30490820600,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14827579600,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 55500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14753913200,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16291571000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13834739700,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1188632300,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2948326200,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14179929300,
              "status": "passed"
            },
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18000966800,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1503730600,
              "status": "passed"
            },
            "line": 35,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 544385700,
              "status": "passed"
            },
            "line": 38,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1916360700,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 50300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 469637700,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2412628300,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 45,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 40000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 533062200,
              "status": "passed"
            },
            "line": 46,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2158171800,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 36800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 507148800,
              "status": "passed"
            },
            "line": 50,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3202659600,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12463088200,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1159240100,
              "status": "passed"
            },
            "line": 56,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3314117500,
              "status": "passed"
            },
            "line": 57,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13251180900,
              "status": "passed"
            },
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 37500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17364861700,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 34500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1216587700,
              "status": "passed"
            },
            "line": 66,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 41600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 842777800,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 38900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1864396700,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@18JunTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 64400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 708261300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 683300,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67800,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9403695700,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16617882200,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005046100,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 249730200,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000198700,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9011192000,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 276950300,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5297393500,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30558041400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006637300,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64232396300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: cb6cae77-3ef3-4ee5-ab34-deed58cefb7e\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/MedicineReminder.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 48500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18204076100,
              "status": "passed"
            },
            "line": 29,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15694348200,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012856500,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39672580700,
              "status": "passed"
            },
            "line": 32,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000324700,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1021371700,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 534237200,
              "status": "passed"
            },
            "line": 41,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005044800,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 598237200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 45,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 46,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 47,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 48
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116700,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6365641600,
              "status": "passed"
            },
            "line": 52,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001255300,
              "status": "passed"
            },
            "line": 56,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 41600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1774150100,
              "status": "passed"
            },
            "line": 59,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 61
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 64
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1102181000,
              "status": "passed"
            },
            "line": 65,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1456591100,
              "status": "passed"
            },
            "line": 67,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1122130200,
              "status": "passed"
            },
            "line": 68,
            "name": "I clicks on \"${before.meal.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${before.meal.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1112810600,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2012922800,
              "status": "passed"
            },
            "line": 72,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3796302300,
              "status": "passed"
            },
            "line": 73,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 75
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 962183500,
              "status": "passed"
            },
            "line": 76,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1774087300,
              "status": "passed"
            },
            "line": 77,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 78
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 79,
            "value": "#      | ${add.another.med}                   |"
          },
          {
            "line": 80,
            "value": "#      | ${notNow.text}                       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 82,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 39400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 341694700,
              "status": "passed"
            },
            "line": 83,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171700,
              "status": "passed"
            },
            "line": 84,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7823311200,
              "status": "passed"
            },
            "line": 85,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 86
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 87
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 88
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1018079400,
              "status": "passed"
            },
            "line": 89,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1649697300,
              "status": "passed"
            },
            "line": 90,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 91
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1089546100,
              "status": "passed"
            },
            "line": 92,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1431916300,
              "status": "passed"
            },
            "line": 93,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078743400,
              "status": "passed"
            },
            "line": 94,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3188195600,
              "status": "passed"
            },
            "line": 95,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1708422900,
              "status": "passed"
            },
            "line": 98,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 100,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 38200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1620879000,
              "status": "passed"
            },
            "line": 101,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1483072600,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 103
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 105,
        "name": "navigate to health screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;navigate-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 276974600,
              "status": "passed"
            },
            "line": 106,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Verify User should be able to navigate to calendar page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-calendar-page",
        "after": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2002996800,
              "status": "passed"
            },
            "line": 109,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4591520000,
              "status": "passed"
            },
            "line": 110,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14557622900,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3741260800,
              "status": "passed"
            },
            "line": 112,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 113
              },
              {
                "cells": [
                  "${Medicine_Info}"
                ],
                "line": 114
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 75900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 40300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9672418700,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 200700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15784069000,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217070700,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012867400,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4844597900,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3504447000,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9818526200,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242638800,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013462800,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30058779100,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13683738300,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22310928800,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5011206100,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 860529800,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 40900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8538022400,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3304596100,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 53600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8532206700,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126273138700,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 38200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10509965700,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16171481200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 210728100,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3008852900,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4812283600,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 39900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 516300,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3514821900,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10247003200,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 266635800,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006886200,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31196216300,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14493747600,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008528800,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24840406600,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8012745900,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 903843100,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18088444200,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 37,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 38,
            "value": "#    And I Like the post"
          },
          {
            "line": 39,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 40,
            "value": "#    And I Like the post"
          },
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 43,
            "value": "#    And I share the post"
          },
          {
            "line": 44,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 46,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 47,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 48,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 49,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 53,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 30000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 33700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7087889100,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10014470700,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 53900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13190834200,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 55400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5558211100,
              "status": "passed"
            },
            "line": 66,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5530925100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 35900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5397485600,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10797096600,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 35000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3998498900,
              "status": "passed"
            },
            "line": 75,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 45200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 650386600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 467700,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54400,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9483197500,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002253800,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14374050500,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013196000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 272295700,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2014449600,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25800,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010556400,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7311474600,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 289970800,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4138499100,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30453849000,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007445500,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 66008926700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 765298ae-22be-430c-833d-f1c989831702\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/home/NotificationCenter.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18890640900,
              "status": "passed"
            },
            "line": 31,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 404131000,
              "status": "passed"
            },
            "line": 32,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2007247500,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 29,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 544830500,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 35,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 39,
            "value": "#    And User verify following dynamic texts are displayed in My Notification screen"
          },
          {
            "line": 40,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Then I navigate back to home screen from Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;then-i-navigate-back-to-home-screen-from-notification-center",
        "after": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 175144900,
              "status": "passed"
            },
            "line": 44,
            "name": "I click on back button on notification screen to navigate to home screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreenViaHome()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify User should be able navigate to Notification Center via My account",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center-via-my-account",
        "after": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2002507400,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10010869300,
              "status": "passed"
            },
            "line": 48,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1563247500,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 54,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to login using already registered credentials",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-already-registered-credentials",
        "after": [
          {
            "result": {
              "duration": 35700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10382574200,
              "status": "passed"
            },
            "line": 58,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16422748300,
              "status": "passed"
            },
            "line": 59,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 199735300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#    And I assign \"pulse67309064615@mailsac.com\" to variable \"PULSE_EMAIL\""
              }
            ],
            "line": 61,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3007858800,
              "status": "passed"
            },
            "line": 62,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4850457300,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3618555700,
              "status": "passed"
            },
            "line": 64,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10303834800,
              "status": "passed"
            },
            "line": 65,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 67
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 250656700,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009784100,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30584142800,
              "status": "passed"
            },
            "line": 70,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14367960400,
              "status": "passed"
            },
            "line": 71,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able navigate to Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center",
        "after": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9908436300,
              "status": "passed"
            },
            "line": 74,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4007265000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 75,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 76,
                "value": "#    Then I handle the pulse mate popup"
              },
              {
                "line": 77,
                "value": "#    Then I navigate to notification center page"
              }
            ],
            "line": 78,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1270117600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 79,
                "value": "#    And user view the first notification from notification center"
              }
            ],
            "line": 80,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@notificationiOS"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9464088600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15363382900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 248972000,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3009041800,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4891122900,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 40400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 450000,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3565099700,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10389501000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 261562500,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006000300,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30084848900,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14693302600,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12456097300,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 858297000,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4241846600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 979399500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 256606300,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9010655200,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15373568900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tNo Challenges text is displayed on page  expected [true] but found [false],\n\tWe will notify you for next Challenge. Meanwhile maintain good health. text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/home/mychallenges/PulseMyChallenges.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 41,
                    "value": "#   | ${not.connected.wearable}  |"
                  }
                ],
                "cells": [
                  "${no.challenges.available}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${notify.challenge}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I clicks on \"${back.home}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${back.home}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@my_challengesSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12362095900,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14581639300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#    And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 226887900,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3001827200,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4849848500,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99400,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3645190800,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10352983900,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 249815000,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009722700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30370088900,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13511415500,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000383700,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4044133700,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6006497900,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 384303200,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8700551200,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 29900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 362218000,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013731300,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6034210800,
              "status": "passed"
            },
            "line": 36,
            "name": "I leave all joined communities by clicking on three dots menu icon on my My communities screen",
            "match": {
              "location": "MyCommunitiesSteps.leaveAllJoinedCommunities()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 37,
            "value": "#    When I click on joined community three dots menu icon"
          },
          {
            "line": 38,
            "value": "#    And I click on leave button for joined community"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 50700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 43900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5015630100,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 306702400,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4324055900,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4704414800,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15900074200,
              "status": "passed"
            },
            "line": 46,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2367185000,
              "status": "passed"
            },
            "line": 47,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3363810200,
              "status": "passed"
            },
            "line": 49,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 983961300,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3467414400,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 53
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 35100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8875960000,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013732200,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8820494000,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8629024400,
              "status": "passed"
            },
            "line": 60,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4579062200,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2033753200,
              "status": "passed"
            },
            "line": 62,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1058577800,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7605491300,
              "status": "passed"
            },
            "line": 65,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4813622000,
              "status": "passed"
            },
            "line": 68,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4105381500,
              "status": "passed"
            },
            "line": 69,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4198084000,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8531017600,
              "status": "passed"
            },
            "line": 71,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 677316700,
              "status": "passed"
            },
            "line": 75,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013624200,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2593939000,
              "status": "passed"
            },
            "line": 77,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3006203700,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15927907400,
              "status": "passed"
            },
            "line": 79,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4415960400,
              "status": "passed"
            },
            "line": 80,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4221075000,
              "status": "passed"
            },
            "line": 81,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9703490200,
              "status": "passed"
            },
            "line": 82,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9637522500,
              "status": "passed"
            },
            "line": 83,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3268699700,
              "status": "passed"
            },
            "line": 84,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2964816200,
              "status": "passed"
            },
            "line": 86,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 962280300,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15007863700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 92,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 489635000,
              "status": "passed"
            },
            "line": 93,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16831236200,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 224309600,
              "status": "passed"
            },
            "line": 99,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 773226400,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1517779400,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 72200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 482958400,
              "status": "passed"
            },
            "line": 105,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2327621500,
              "status": "passed"
            },
            "line": 108,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4496237800,
              "status": "passed"
            },
            "line": 109,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 175047300,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1303076000,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 54800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9868860600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16220174100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 254811000,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3007840400,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4870174300,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 50800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 63900,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3623985300,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9320962500,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 219169300,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003153700,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30020485400,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14591872800,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the My communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-my-communities-screen",
        "after": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3002880500,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3001470100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 403657800,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9535740500,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3010795800,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4699850700,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3399587600,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2853939000,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265690400,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4194911600,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10596492300,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10467443200,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3003076600,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4425810000,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 565918100,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1320528200,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3906042500,
              "status": "passed"
            },
            "line": 51,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 56900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9803978600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 198900,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17097106700,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 220853500,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013418200,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5993187500,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 42800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3627260200,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10309675100,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 241913200,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5014161300,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30160945300,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14884230500,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 32400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21072901400,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40010121000,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 495278400,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 28700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8519220800,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40014048600,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 821686600,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8555303800,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40006377900,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126164875800,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEventPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that user can view previous air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-previous-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 51900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12024444500,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 255700,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7571529200,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10421328900,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 301704800,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10002461600,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31096731700,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9915085000,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14247486000,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62140410700,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on My Environment icon",
            "match": {
              "location": "MyEnvironmentSteps.iClicksOnMyEnvironmentIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 484252100,
              "status": "passed"
            },
            "line": 19,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 684237100,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on Previous Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnPreviousAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6412569400,
              "status": "passed"
            },
            "line": 21,
            "name": "User can view \"Previous\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5680267800,
              "status": "passed"
            },
            "line": 22,
            "name": "User clicks on \"Swipe Up for Details\" button to view the Previous day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewThePreviousDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4001899900,
              "status": "passed"
            },
            "line": 23,
            "name": "User can see the \"Previous\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 839183000,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify that user can view Current air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-current-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1690058200,
              "status": "passed"
            },
            "line": 28,
            "name": "User clicks on \"Back\" icon from \"Previous Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Previous Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2243440900,
              "status": "passed"
            },
            "line": 29,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 697065400,
              "status": "passed"
            },
            "line": 30,
            "name": "User clicks on Current Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnCurrentAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6032019800,
              "status": "passed"
            },
            "line": 31,
            "name": "User can view \"Current\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6110132500,
              "status": "passed"
            },
            "line": 32,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2516125400,
              "status": "passed"
            },
            "line": 33,
            "name": "User can see the \"Current\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2119875300,
              "status": "passed"
            },
            "line": 34,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify that user can view air quality details  for next few days under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-air-quality-details--for-next-few-days-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 536657200,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on \"Back\" icon from \"Current Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Current Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2493435800,
              "status": "passed"
            },
            "line": 39,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 665994100,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on \"How is my air quality over the next few days\" icon in Environments Home Page",
            "match": {
              "arguments": [
                {
                  "val": "How is my air quality over the next few days",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentsHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6012012000,
              "status": "passed"
            },
            "line": 41,
            "name": "User can view \"Forecast\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Forecast",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5697553300,
              "status": "passed"
            },
            "line": 42,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5114557600,
              "status": "passed"
            },
            "line": 43,
            "name": "User can see the \"ForeCast\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "ForeCast",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 883684200,
              "status": "passed"
            },
            "line": 44,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify that user can access and view Neighbourhood air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-neighbourhood-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 37300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1524605400,
              "status": "passed"
            },
            "line": 48,
            "name": "User clicks on \"Back\" icon from \"Next Few Days Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Next Few Days Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2425830200,
              "status": "passed"
            },
            "line": 49,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 671948000,
              "status": "passed"
            },
            "line": 50,
            "name": "User clicks on My Neighbourhood air icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnMyNeighbourhoodAirIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6039864600,
              "status": "passed"
            },
            "line": 51,
            "name": "User can view \"Heat Map\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Heat Map",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 52,
            "value": "#    When User clicks on \"Swipe Up for Details\" button to view current day air quality details"
          },
          {
            "line": 53,
            "value": "#    Then User can see the \"Heat Map\" Air Quality Details"
          },
          {
            "line": 54,
            "value": "#    When User clicks on \"Swipes Down To Close\" button to close the details"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify that user can access and view Fires nearby under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-fires-nearby-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 38800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 641595300,
              "status": "passed"
            },
            "line": 58,
            "name": "User clicks on \"Back\" icon from \"Neighbourhood Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Neighbourhood Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2391498700,
              "status": "passed"
            },
            "line": 59,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1392599000,
              "status": "passed"
            },
            "line": 60,
            "name": "User clicks on Fires NearBy icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnFiresNearByIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6869865400,
              "status": "passed"
            },
            "line": 61,
            "name": "User can view \"Fires Nearby\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Fires Nearby",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6122061900,
              "status": "passed"
            },
            "line": 62,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1085750200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 63,
                "value": "#    Then User can see the \"Fires Nearby\" Air Quality Details"
              }
            ],
            "line": 64,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify that user can view effects of the poor environment and upcoming activities under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-effects-of-the-poor-environment-and-upcoming-activities-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 46000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1251857300,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on \"Back\" icon from \"Fires Nearby\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Fires Nearby",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2741050500,
              "status": "passed"
            },
            "line": 69,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13207112600,
              "status": "passed"
            },
            "line": 70,
            "name": "User clicks on \"Why is it important to monitor my environment\" icon in environment Home Page",
            "match": {
              "arguments": [
                {
                  "val": "Why is it important to monitor my environment",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3270017800,
              "status": "passed"
            },
            "line": 71,
            "name": "User can view short term and long term effects screen",
            "match": {
              "location": "MyEnvironmentSteps.userCanViewShortTermAndLongTermEffectsScreen()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can view air quality details under My Environment screen",
    "description": "",
    "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/MyEnvironments.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sg_myenvironment"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 36000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 30100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10933880300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 146000,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15488981200,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 255283200,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000701300,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5541341900,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3583093600,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9776241500,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 340865800,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008091800,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30708074100,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13912711900,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12578769900,
              "status": "passed"
            },
            "line": 23,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39498029000,
              "status": "passed"
            },
            "line": 24,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 775042700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8804353100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 92c9b090-fedf-4fd0-a22b-7ff323dadd8d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Report\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:110)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Report\" link on digital twin screen(features/sg/health/babylon/BabylonHRA_Report.feature:27)\r\n",
              "status": "failed"
            },
            "line": 27,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 28,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 825971800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 72609326300,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: 01. SUMMARY expected [true] but found [false],\n\tthe expected text is: Your result will go through these areas in more detail expected [true] but found [false],\n\tthe expected text is: Disease Risk expected [true] but found [false],\n\tthe expected text is: Out of 18 common condition covered, your result compared to other people of your age and gender as shown: expected [true] but found [false],\n\tthe expected text is: 5 below average expected [true] but found [false],\n\tthe expected text is: 3 above average expected [true] but found [false],\n\tthe expected text is: 10 at risk expected [true] but found [false],\n\tthe expected text is: Incomplete health assessment expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:37)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 37,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRiskDescription}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement1}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement2}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement3}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement4}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 749289200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 45752905100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: Organ Health expected [true] but found [false],\n\tthe expected text is: Out of all the systems evaluated, your results show: expected [true] but found [false],\n\tthe expected text is: 6 normal to low risk expected [true] but found [false],\n\tthe expected text is: 7 is at risk expected [true] but found [false],\n\tthe expected text is: 2 reported to medical condition expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:48)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 48,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement3}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify the HRA Activity summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 791784600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 36430358400,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: 02.Activity expected [true] but found [false],\n\tthe expected text is: This category is currently not relevant to you. expected [true] but found [false],\n\tthe expected text is: Strength expected [true] but found [false],\n\tthe expected text is: Cardio expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:56)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 766638800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99588776000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: 03.Nutrition expected [true] but found [false],\n\tthe expected text is: Unfortunately, you\u0027re far from hitting healthy diet targets. Scroll down to see the main areas you can quickly and easily improve on. expected [true] but found [false],\n\tthe expected text is: Alcohol expected [true] but found [false],\n\tthe expected text is: BMI expected [true] but found [false],\n\tthe expected text is: Caffeine expected [true] but found [false],\n\tthe expected text is: Fat expected [true] but found [false],\n\tthe expected text is: Fruit and vegetables expected [true] but found [false],\n\tthe expected text is: Hydration expected [true] but found [false],\n\tthe expected text is: Protein expected [true] but found [false],\n\tthe expected text is: Red meat expected [true] but found [false],\n\tthe expected text is: Whole grains expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:63)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 63,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 755705200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 82798672500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: KEEP IT UP expected [true] but found [false],\n\tthe expected text is: Low fat diet expected [true] but found [false],\n\tthe expected text is: Keeping fats low will help lower your risk of heart disease. expected [true] but found [false],\n\tthe expected text is: Low alcohol expected [true] but found [false],\n\tthe expected text is: You\u0027re within guidelines for alcohol - keep up the good work! expected [true] but found [false],\n\tthe expected text is: Low caffeine expected [true] but found [false],\n\tthe expected text is: You\u0027re in the top group for caffeine, which will be helping your sleep quality. expected [true] but found [false],\n\tthe expected text is: Plenty of fluids expected [true] but found [false],\n\tthe expected text is: You\u0027re drinking the right amount per day, keeping you well hydrated. expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:77)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 77,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine.description}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids.description}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 760748600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 54099246500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: MAKE A CHANGE expected [true] but found [false],\n\tthe expected text is: Lower your BMI expected [true] but found [false],\n\tthe expected text is: Eat more fruit and vegetables expected [true] but found [false],\n\tthe expected text is: Increase lean protein expected [true] but found [false],\n\tthe expected text is: Reduce red meat expected [true] but found [false],\n\tthe expected text is: Have more whole grains expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:90)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 90,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${babylon.hraReport.change5}"
                ],
                "line": 96
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 797638800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7817066800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 92c9b090-fedf-4fd0-a22b-7ff323dadd8d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Healthcheck\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:114)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Healthcheck\" link on digital twin screen(features/sg/health/babylon/BabylonHRA_Report.feature:99)\r\n",
              "status": "failed"
            },
            "line": 99,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 102
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 103,
            "name": "I verify following text is displayed on HRA report",
            "match": {
              "location": "BabylonSteps.verifyHRAStaticText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${babylon.hraReport.body.heart}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 107
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 64300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2202539200,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 46900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 792667100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7933163300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 92c9b090-fedf-4fd0-a22b-7ff323dadd8d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Nutrition\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:122)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Nutrition\" link on digital twin screen(features/sg/health/babylon/BabylonHRA_Report.feature:113)\r\n",
              "status": "failed"
            },
            "line": 113,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 116
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 118,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 121,
        "name": "Navigate back to nutrition screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-nutrition-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 800270600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2192583800,
              "status": "passed"
            },
            "line": 122,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18153171500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: About the disease expected [true] but found [false],\n\tthe expected text is: Nutrients are the things in food that give your body energy expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:123)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 123,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 124
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 125
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 127,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 36100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2185002800,
              "status": "passed"
            },
            "line": 128,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 777881800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8226696800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 92c9b090-fedf-4fd0-a22b-7ff323dadd8d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Activity\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:126)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Activity\" link on digital twin screen(features/sg/health/babylon/BabylonHRA_Report.feature:131)\r\n",
              "status": "failed"
            },
            "line": 131,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 133
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 134
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAAALkAAAGQCAYAAADyecEWAAA6d0lEQVR4Xu2dd3AXR5r3ffnq3bury3d1oWrXmCwQKIBAQgghCQVykshBiJwkcs4ZkTMm2sZkY+NsgwEHvM7rgL3Ju/bunr3v7r61u3d/XNXu3fPO55Hn559mlJFAah5VfUrz6+np6en59tO557777rtPDMNxQg6G4RohB8NwjZCDYbhGyMEwXCPkYBiuEXIwDNcIORiGa4QcDMM1Qg5Nln//93+Xfv36SYcOHeQP//APQ+eNxskf/MEfyJ//+Z/LH/3RH4XO+TRr1kz+5V/+JeReQ0IODQri46E4/ou/+Av5y7/8y5CfP/uzP5O/+Zu/Kef2p3/6pyF/PoS3cOFC+eyzz+R//ud/5IsvvpDHH39cvvGNb5TzR0IeO3ZMUlNTI27NmzdXt29+85vl/P7rv/6rFBcXS0lJSTlatGgRun9BQUHIH25Bf/cSvOdRo0bJ1KlTZciQIaHzwHtesGCBHD16VEpLS2X//v2yc+dONVbR/pYuXSq/+c1v5NatW5Kfnx8KpwaEHBqMuLg4jSj/e/fuLS+88II8//zz0qdPn4ifmJgYuXHjhly8eFHmzJmjbn/7t38rTz31VKU5PTk5WT744AP54z/+Y5k3b578yZ/8iWzZskXWr19fzt8//dM/yYYNG2T58uUyYcIESU9P14QdNGiQ5OXllfNbWFgo//Vf/yXvv/++/Pa3v5WrV6/K9773PX0pwfv/6le/Un/4f/vtt9XvT3/605A/H+LJcwbdXQGBDxw4UE6ePCmxsbFqRHJyckL+EHdGRkY5t3/4h3+QV155RTOA70a6/vrXv9Z0fuyxx0Lh1ICQQ4ORmJgoe/fulfj4eBXCX/3VX6k1f/nllyU7O1vWrFmjD04mIKEQOxb8+PHjsnHjRhV7MEzYtGmT3Lx5U4/nz58vy5Ytk48++kjefffdcv4QOfc4cOCATJw4UZYsWaLXIuiKRE4m8cMmw+3Zs0dLjOD9n332WbVExJPnw+8bb7wR8udDBvzf//1fGTBgQOicC5AWCHz79u36m/8HDx6UlStXlvPXunVrNTJ+yQ5jx46V8ePHl/OHyHmn169fb/wih9WrV6vIX3rppYjbm2++qVaa6sXTTz8t//zP/6zuly5dks6dO+vDUUxdvnw5FB6QAL7IKdr8v9dee62cP1/kVGUeeughefDBB+XChQtSVFRUocgR7LRp07S0Qdxnz56tUOTEH2GTEXmZ+MHqB/35UHyTCdq2bRs65wKUlhWJfPHixSG/WHjO8Y6pqnBt0A8inz59uhqRJiXyEydOqPXOzMzUYxoVnTp1krlz58qsWbOkTZs2mhGSkpL04f7t3/5Nrly5EgoPqFd/8skn0rJlSxWw/4d4o/39/d//vSbSoUOHtC1AmFRvjhw5ovGI9jt69OhIONF/fhUqmi+//DLoTX7yk5+E/N0rUAr36tVLzp07p9WRU6dOlWsHBVm0aJGm2bVr17SqGTyPyF999VX53e9+1zREzkPTqPu7v/s7zbmA+Nq1a6d1Y6onq1atUuH5jTwaL1heMkcwPB9EitB///vfa90NaxpdDPokJCRoBvJ/08jhBVBPjvZHPLp37y5paWnloHoVDJNiN+gPt6C/ewnSPjc3V4YOHaptn+D5oN+tW7fKP/7jP4bOAVXbDz/8UAm2s2pIyKHJggX567/+6wqtgXFPE3IwDNcIORiGa4QcDMM1Qg6G4RohB8NwjZCDYbhGyMEw3OL//J9viGG4zH2tWrUVw3AZE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5EatKBneUX56JkUure8UOtdYMZEbteIJT9y/vJgiKwo7hs41VkzkRo1JSYyRL84myy88kfdMbhc631gxkRs1ZndxvFrxZzY3naoKmMjvcVq3jpFOnZMlKSlFOiclV8qQ3snyH54VR+RDs9vrtbGx8RKf0DkUZmPDRH6P06Vrqgq9Q4cEFWxFJCclyuv7klTgj61PVreOcYl6fWxsnCQmdgmF25gwkd/DxMd3lnbtO6qlbu/9R+xBEjvGyNXtZQL/8GgX6RxX5h4TEytdk1M1nM5dUkJhNyZM5PcwSV266f/KLPGAjPbyzqEuKvAfPtxV8tLKNzbJJG3atIuIvbFiIr+H+VrkSRG31h7UuU8tT5Sfn09Rgb93uItkp4Z7U+K8Kkvbtu09kXcPnWtMmMjvUahy9OqZLGP7xcqcMV1kybiOKuxbx8osN/ziQoocW+zV1TvEhK4HE3kTgN4BGk53l/hQvOqb2A7x0r1HhvTpN0iGFoyUkWMKZWzhJNm+dGhE0NH8+FSynFySKH16hK13NCbyRk5cfCd5oHkr+ea3HrirEAfiEoxffdCpc1cZMChfBV0R6+bny829SXJjd1c5vSJR1kyMkzF9Y6V9TDisijCRN3LoBgsK7m5R333NMTEdpG//wRExjx5XpGJP65FZrielojp5bTCRN3JcFTn918NGjomIO7NXnrRr1yHkD+pb5G1i2kvbmLKBosaEibwRUF8i79AxQUaMHq8CH5I/Qn8H/URTHyJP650pUzfNltWXNsnWa3uk1GPt5S0yacMMSe+fJa1ah69r42WM1O49JcvLgJlZuWV4xz0zemn7Iej/djGRNwLqQ+RY1Pzho1XgVE0QUtBPkNsReWxcnMzYOUd2vnZQdt6snJIDiySuc9noKKSmpqug/RHTaChxqFIhep4neL6uNBmRJ3hCoCHFAAT/K0qk2uCayLNz+qjACzyht42JDZ2viLqKHIEvPbU6JOjKWOVZ+fgunT1x5+q7C4YXpF27jpKT27fSalZtaRIiR+AxgQem+y0uru69Ei6JvINXxI8ZP1FFntip4tHLiqiryGfvmR8ScnWsOrdREjqV3adDXBdZdeR9GT5lYyhsHyx5bl4/bSAHz9WWJiHyyl5cQi1fTjQuiTw7t8yK9+0/KHSuKuoi8szBuSEB15R+hWXxi62ByIGuVfr3g+61pdGLnJycnNJdi7kgNF6C/oMwt4JMQiOpo9cQI+EQlSsi5/n8wZ3aZvq6iLzk4KKQeH1WXdgkm1/YGXL3WXZ6bSi86uiV3fu2rXmjF3ldoKhjJJFinKpO8DzCYIrp/c1ahAR3N7gdkZOBEfiwEWMqFAMZG0vfb8AQycjM0dmD/rmkr2YP1lTkrdvEyJaru0PihR2vHpDVj22WVRc9ob+4K3S+zM9+ad+xdsvmUrunV9tLVB1OiZyX0CkpWROFl8mgR9BPNPEJSSHB3Q1uR+T0RCDynLy+oXOEO2rshHKjnPnDRnlGoEzotRV5XOdOIeH6bHxuh2y+sktKr+2V9U9tC533Setdu+oHz3C7sxzrTeSt1Tp2kyyveBk0ZJgmJi19+mtzvAZESrce5axIQ9CpU/Ut92hovRPvoOjuNLcjcuajIN7uaeGqG9Y7WuA+PXpm6fnaijyxW5eQaKNF7h9ver7yKkt6/16hcKuCkiilW1rIvTbctsiZdJ+VnRcZhKgKRuB69x1w291/FYFYK2ugVgVWPyi6O83tiHzg4AJN286dk0PnGGzBwATpltpDz9dW5G3btZftr+wPCRfWXt4qW67sluVn1sm263tD530Sk2t2Lx+W5dXlvUZTZ5FT/6PjPro4zB8+Si05w7xMxKchREKme5aDl+F3c/GfBgV142C4dYX4cL+agnVo79XZW3rXBkV3p7kdkZOGtEEqqo9XR21FDsvPrgsJ12f9U6Wy8sLGSjPC+qdLax1PqmO3q5M6iZxqR/TsNo5r0smP1czzLLkv9iEFI6R9bFzI353Ald6V26EuIh86Y0RIvD6Ie1MVvStjlxaFwqsKBrUYQAq615Y6iZwuPURK11VySu3rSxQ/BSPKJhGNGDXurrxkE3ndRN4utoOseWJzSMDVsfXqHknsWvP7ANWt6joPakKdRA6Imy66oHtNYTqoX5+cMGO59MgeFvJTF2paHDZmkVM8a13Uq/JhEHxq+mw1pS4ih9ScdO1FCQq5Mra/ul9yh/fTofqazkmhccy04KB7XaizyOsDXubgEZOl9PwXUnrh59Krf+2KsyCDxy2T2Rsue8Vc9XMeGqvIOabqFxQ04kCUt2NYgtRV5NCjb5ZseKbyrkIf+syzC3rrNfRm0WdfUSPZh1mIvXL63HZjM5q7KnJo27aDzFz7mOy6/FvZ+fivZWzxbk+ktSuiOiakyIzV5zUMGDB6YchPkMYk8qSu3dRqIbrqpppi3Zm3E3SvC7cjcuicnCzjlk0s130YEfeVXTJhzVTtWw9ex0grHRQ9M7J1sIfenh7pWerWPS2jRjMoa8NdFzm0btNexszeLTuf+I2KdNWRDyR3yDTPmlXdqu4Q11UKJq+XzWd+otftuPQrGVq0WlrVoFhvTCIPVleqg/GIoFtduF2R+4smWCzRLbuHzmvJGpIrqbk9JaZ99WMilFaUTPSF17QaUxcahch9svpPkA0P/zBikdccuyWF8w9LzqDJkpLeX7p0z5P03BEypHCFzF7/hGy7+IuI32UH3pSUngNCYVZGUxY5jTEEFnSvLfUl8rROtYv/naZRiRzaxSbKqBnbZNOjn0UEXBXLD7wlvfNn1sh6R9OURQ5V1WtrSn2JfHRWZuhcY6LRidyHxmPO4ClSOO+gLNr9iqx/6Psq/JWH39PG5fCpm6Rbz4GhBlpNaUwi1zq5J9rawOKR4DPVFl/ktZ296IPI6TwwkTdSGpPI62LJ6wNEjpGoa1cd13G9ibyRgrAYgW0M3C2RM6KYkNhFR53ptkxISKoxdPExBykzqYv0sDq50ZhBsFhklhdSv47GrwqyP2LHdrES5/nxSYjtKIN7pMmgtNqPeN9p7gmR0y+bkZndpKiPOndNoV5NaRKcxOZPjGrjib1/aqoM6N49Qt9u3aRDA0+dri/uCZEb9zYmcsN5TOSG85jIDecxkRvOYyI3nMdEbjiPidxwHhO54TwmcsN5TOSG85jIDecxkRvOYyI3nOe+Fi3biGG4zH3BpViG4RomcsN5TOSG85jIDecxkRvOYyI3nMdEbjiPidxwHhO54TwmcsN5qhQ5Q6I9emSUo1tqWsifS2Tn5MmIkaOlTdu7/xFbo36oUuRpnqjffPMteffd9+Q///M/9fi5554P+XOF9es3yocffiSPP/6EfPLJd3V/wKAfo+lRpch92MH07bffifxu3qJ15Phb9zeXB5q3irhznJSULPc3a6HHwLfRK/soLNckp6Tqd2J8N64h3ITEzhIXnxi6BtiRlet8v9Fx8sP140CJRByCftj/j80uuZ7f8+Yv0K84cHzu3HmZOGlK6L5G06NOIv/ss89VQBz3HzBIrr50TUX605/+TN566235/ve/rx88whq+/PIryuef/0Q/gBQd7uAh+fKDH/xArl27Lj/60Y9k7twF6v7ii1fkWa/E4DrCXL58ZbnrxhcWyaef/si770vy8cef6L2++93vSkq37nqeT6H/+Mc/loKC4fLRRx/Jzddfl5s3X5fvfe97+uEpxP7Ypcfl/Q8+kHfeeUfvz5cq/PDj4zvJdz2/3b1wo+9rNE3qJHKE97XIB8v16zd0q9/f//73kte7r7rzsaP//u//VgvK79179sqWraWRMJo90FIFnpmVrb/ZI/vHn32mH8K9evUl2bx5q7rzESgEHR2f8xcuSsmceXqc1StHWrdpJ6tXr5W9+/ar2zIvUxw4eEj69Rsov/zlL72wy6zzqUdPS3HxXFmyZJmcOXM2YsGXLF0WySCEhfiLJk4ud0+j6VKvIv+P//iPiB9E/qFnRf3fCGvPnn2R393Tesr7739Q7j7Hj59QcSHygmEj1A2r++WXPy/nL693P3n3vffkO9/5jqxdt16rJGXW+zNPpDFy69bH0tXLHIj85uvfjly3tXS7rFq1RuvcY8eOLxemz5ChBfo8QXej6VInkX/++eeR4n1C0aSIyH/2s59F/CDyDz74WsRBkSNKwomuJ7/yyqsycOBgFXm+V9XArSKRU4+mJMDKP/X0M7Js2Qp1P/zgEc9Cn5PLl5/U34j8Na+a4l/ni/zQocOe9V4ecY+ur2PJ+cxI9P2Mpk2dRE599vTpMzJ12gx1r4vIgSoMgsZ6Hz9xUl7y6vaUENWJ/JFTj6qYx42boPX26TNmqXuKV9X53e9+JwMHDdXflYk8pVua1wb4sSz24jRn7nz54aefSnrPLPUzc1axXLlytdz9jKZNjUROzwh9x/5vejZoDK5Zu156pGdKfv5wrTIUTpgY8UOPxqjRYyO/u6elS3Z2XijsseMKPfFtk+KSuRFrOjR/mMQndNJjRE9pEX0N9youmaPXIXTfnfo8DV+/rs33eIYNGxk5T/2/R3qGHnfpmiKr16yVDRs2Sbr3DL6frsndZPToceXuZzRtaiTypsLRY8c1swTdjXsbZ0ROHZ0elRYty/eFG4YzIjeMyjCRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lqLHJGGVu2jtE5K4ZxN0GH/hqGmlCtyJt5gXVKSpFuaT0No1GBLtFnULNBqhQ5c0CSklNDgRtGYwF9+nOVKqNKkTPtNBioYTQ20GlQuzUWefsO8aEADaOxgU6D2q2xyGM7JoQCNIzGBjoNarfBRd49PVNGjx0vi5Ysk1Vr1ur/Ud5v3IN+DeN2uaMiz8rOk1279+raS1bLB3nvvfdk5+49kun5C15rGHXljol8yrQZKuKgsCuCzYomTZ0eCuN26JHRSwqGjwq5G+5zR0Q+Z94C3V4iKOaqwH/J3PmhsCrj/Q8+lCeffkaef+EFWbNuQ+h8v4GDda+WoHtljBg1Vq5dvyFPPf2snD1/QatSy1as0j1knn/hRS1xgtcYjZMGF/nwUWN0056giNksiI17XnvtNf3P76AfNgQaNnJ0KMyKYEEy/xHjd77zvowcPU5ml8xTt42bt0ZEzvnde/ercIeNGC2pPTJk/cbNcu78RRW2H97Jhx6R+QsX6/HmraUyYHC+vP3uu5F2w8mHH9HSIRgPo/HRoCJHQFi9oHjhrbfekitXrkTgd9APsLci4QTDDvLue9+RiVOmyeKly1XwlB4HDz2o59jKwhf5tJmzPUFfkL4DBsve/QdlzvyFcvTYCcnp3Veu33g5El7+8JFeODfl9NlzWs3pP2ioXLn6kp4bP2GiTJg0xRrKTYQGFXnR5Kkh0frcuHGjnMhffvnlkB+fCROnhMIOcuvjTzyLvUVWrFojWTm9paQSkadnZquon33+BVm4eJk8ePSYbjD0xOUn5cmnno6El9u7n2ausYVFXknzrhR4Vv+VV1/Tc1SHPrr1seTk9Q3Fw2h8NKjIDx1+MCRYnzfeeKOcyPkd9OPDAuRg2EH86ooPGePyk0/J0GEjvAzwcUTks+fM0/1VBg4p0GtK5i7QqkuOJ2pKAf/602fOaYbJ69NfXvYyyZCC4XLFq48Xe9f37jdQS45eub1D8TAaHw0qcjYDCgrW59NPP5Vvf/vbcv36df3P76AfHzbuDIYdZOXqteV+Y4W3btshh48clXUbNnrWPU/746libN22XR565FGtkqT26ClLl6+URx49I2PGT4hcn+7VtzdtKZVHT5+VGbNK1I2uzd179smp02dkyrSZoTgYDcv4okleVXFS5DdGZtnK1SF/QRpU5B988GFIsHWBfvVg2Ma9x6ziOfLFl19KYdFkT+B95J133/WM1alq22wNLPIPQoIFtm6mzxwLftNr3PGf37gH/ZrIjWjoMfviiy/ko49uycNeaRw8XxENKnKqGdFipZvwzTffLFcXD8L5YHei36thGDC7ZK4cO3GyWgvu06Aip3cjWqz0hwdFXRHvesVQ9HX7DxwMhV0bBucPl55ZOSH3+oQET+uZFXKvDbQX6P2p6diAUTMaVOT0JUeL9eOPP5arV6+GRB0N5/EXfV1h0deNjbpAlx/93EH3+qJo0lRZ7jWAaMCuWrNOG7lBPzWhb/9BMnpsoY6m1tRKGdXToCLnRTGYEy3YW7duybVr10LiBtw5H+3/mWefq/aF5/bpr70om0u3yYJFS3Tey9jxRZ4FHybzFixSkQ8cnK+9LVtKt+v5EaPH6vG27Tulh2eBN2/dpkydMUt7WXbu3is7d+3R1vyiJctkw6Yt2r9OHzz+GEWdMatYuya5Z8GIUbJk2Qr9zf9BQ4fpyOrW7Ttk5uwS7alZvW69DkARn/0HD0nvfgPU77oNm2T5ilU66ERRHC3yQUMLZPvO3Qr+163fqCO0Cxcv9eJZpH6J62YvfOI1d/7CUPrc6zSoyIGil+H5aOHSXfj++++Xa3jyO9iN+Il3HeIJhhmEfmtExPGefQdUVAxE5XuiwcIiqsGe6A4ePiLTZsxWq/7g0WMy3xMnYiucOFkOeFUrzjF8TxhUPWZ44UyeOkP2er8Je/uOXZLtteqnTJ+p4tyzb7+Gkde3v4qeDDHSyzwIkHv28SwzmWnegsUqRMKkq7P/oCFeuNNl0pRp2i2Gf7o0mYrAcbTIyVy5ffp59xig8aSkwH3Xnr2aIWcWz5E+3vOv9cTPNbgH0+dep8FFDgyg1HaC1ve//wO1asGwKgKRY5V5yfsPHNKh+8nTZqjAfJFjJUeOGacWHqu3z/OHpR/i1dcZCGJ++yivqlDqWXYEmdEr14v3fBU5frkP7oOGFKgfv8+c8JkisGjpcs+iLy079iw/A0kDh+TL6HGF5US+YtVa9TNx8jQtUQ4fOab1cP5XJHLiTjWm74BBOvqK6HGnRKCvngzN838t/n2h9LnXuSMiB+aVvO01PINirgi+ToElDoZRGbxkPmrFRKqJ3nX0oVK8Iwis86ziuepn9dr1avERCwLc4lVv1ntVBQSLSDiHZaWKsG3HTs/yP6jxJsNw7szZ8zqUzzFVBgQ+fWaxV1qNUTdGTBElmYuRUj/DzJ2/KDIQNd2r4pCpmLiGP+rxmzaXen536H2x7vhloIPRWEoJqiEbNm3WeFL9otRg6jL3JdNSulDqkBbRo7ZGGXdM5JCZnasvk078oLCBOSKMRmJFg9dWBXVVXnzQva6QCcgQBw4dluyo+SkInzp5tF+ES52ajECGoGqBOyUHVQiqNFSVgvcw7hx3VOQ+FMVUHZjKSoOL/xTV1TUwq6K+ZwQyjTYYn6ruQUlB3TjajepJVdcYd4a7InLDuJPclshtSwqjKXBbW1LY5kJGU+C2NhfSbeK62jZxRuMFfd7WNnHAV9USk5JDgRvG3QZdos+gZoNUK3Ifdg9ly1zDaAzUZDdbnxqL3DCaKiZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPNWKfMjQAjl77rwcPnxEOsYlhs7fC8yaXSLDR4wKuUczgAXPCxdHfnfsmCBLly4P+WveorWkdu8Rcq8JLVu1lf37D8jhB49Im7btQ+fvNsOGj5TZxXNk3rwFMnZcYej83aJKkfPV27ffflu/gtsrO1ceeeSU5OT01nMd4xKkS9cUSe+ZJX37DpCc3DJ3ruFhe2ZkRcJJSEySTp266HFuXh+dUNM9LV1GjBitL44Xn9ajp57PyMzWMHJy+8jQ/GFyf7MW6p6ckurdK1PF5n+NN7V7uowaNTYyCy2lW1q532ks3hg5xot/W/XbomUbie0QL4lefIgDz4S/Pn37y8BBQ9SN88SBczHtOmh4GzdukvGFRZFny+qVE0qr/ILhsmVrqYwcNUbi4jtpmvXrN1DPZWblyPDhZfEePWa8XLt23UuTzvrsI9iDJbVM9KQZfrmOeODWKzsvco/RY8bJ1q3bZNHipXqd7064vAfilpzSXXp6x8THn7iUnp6p9yeduSf3GThwiJ7L691X+g8YVO5ZuA7jluu9A353Te6mGXPUKNIyppzf3n36ydChZe9p3PgJssTL2CtXrZEpU6aV83c3qVLkPOzzz78gK1askk6dy0T69NPPSGKnJNm1a48MHpIvt259LHPmztfNP0noh72MMNf7feHCRRUP1+D+yKlHVWQvvPCi9Os/UB577JLMmlUsTz75lIb30EMPl4X/zLPSwbOCv/jFL72XuSQi8h07dsnBQ4dl7dr1cvTYcRX02bPnZfqMWfL445clPqGTvPjiFf199uw5zUTPPvecFHuW5dFHT8uy5StVJKu8F3Ds+AnpkZ4he/ful8VLlsnOXbtl/fqNsn37TvXz8iuvqEiuXLkqM704slMYImf33YWetT5/4YJmwui0wv+rr92U6dNnajwQ25kzZzXzX3r8CX2Wvfv268t/9dXXPOGkyjPes874Kv65eX3liScuy+49e2XhosUal06du2o6+fdA+G+99bac8Z4vWmxkKrZVmzJ1urz//geyefNWOXDgkMyfv1Djdc4riYtL5sqFi49JihcvdleYOm2Gpg3327lzt5TMmRcJ7+DBw7qii12LKcXIvKe9Z1nipdXJk2XvCUgTrt+8Zats3LS5aYocmnkiK5o4WZ599jkV86TJU2XRoiW630qzB1rI5ctPqj9EgtW7+frr+rtd+44SF1W9QTCFEyZqhtlauk0tOu4XvYTHigdFfvNmWTg+iNy/5vXXv61WadOmLbJ79179TfFNhjlw4KAn8J5atUJEe/fuU0sEh7xMcsrLbIieZ6BU4Dn8koEMjcjnesUtVpyMivviJUv1hZbMmavx5X9w9htiWrN2nR6/dO1aRORJXZI17Yg/JVqXrt3k/PkLKkzign+MBULz0/KB5i3V2i9YsEiF49+DjHLixENy0RP+hKKJkpVVVqIQViT9PCNEVYm0IqMcZFvsr0oKnq8HOx7sP6i/r9+4IQ8/fErjQQbw70Mm5T9W/9q1GyrygmEj9JkJ3/eHYUHkGJ1HHz3TNEXOS9m9e49adF46D48F4cNWWCX8lBP56LFqBUkMLJMvSli9eq1uLBSf0FmWe1a1cEKRhkuYWHIEgb+rV1+qVOQUq4iZTfexRGs8q47Yb7z8slpGxNI5qatem5HZS0sSLD6ZgHshNjIFdWcWVVNKIFqqUm1jYlXwvsh5wcSN6xAvIqeU4H67vDSZ6lnN6HpxZSInzr165Wp8EAhVvPNe5uFaSjXCn+Y9C/V3Py2BUgOrTTx8t6eeelqNxxzP6n722ed6jHulIt+xU7fnGDZspD4roiY9fJE/9tjj0t2rxpHJeS/+fW7ceFnvS2l47vz5SkVO24C2CFWsR083UZEDkcbyXLr0uNZbcbt48ZJXl+unx9u27dD/CIC6+TivwYH/R06dirwE6JyUrB+d4hhBUa2hQct1vABeEqLAkpOhjhw5Vi4eiPzChcfUWpPgiZ4wn/ISHKtMEUrmwyIRBsUq96ZYB0RLGGSuLE9wVAMQEW49vPoq8cWS9faeifrwmLHj9RyZ4THvuU97L5A67ISiServ3LkLen/f4gHVFzIex5QmGIgNGzZp3ZsSgWsoBVt4mYTMRlrOmlWiVauHH35E2xF+WsKgwUMjGd+HawiLTIJFpz6Ne3vvWVevWVuWTl6JQPqleaUZJW/72I6aRnxiZtKkKdoeoU6PX0pQwjtz9qwaiOj7UCWjmpPSrbs2Jsk0vKcdO3eV84dhOHr0uLYVEDxpNNkTOO2p6LjfTaoVeZCB3oNgcapbjRENosYazJw5O3SupkRXVxoDvHDaB0H3+iDBs6rHT5yMGBXj9qi1yKnHYgmD7lWBVR0/vqx6EjxXU7qlpmlmCbq7CKVedV2WRs2ptcgNo6lRY5GvXrOu2npW+9g4bYAG3Q3jblKtyJO8opMGGC1yRE5LnP7YMWPGab93//5lAwmZWdnaw9Hvq980TLnOHyWlt4WRsHbtO2i1hZY4dXTCCN7TMOqTKkWOoF977aaOpNGKRuQMFMzwxEm/Ll1f9H/TCGMgw2+tM1r4uPcb//RVMypGLwKjdPSQTJ48VftX6W9esXJ16L6GUZ9UKXKs+EMPP6LHfnXljTfe1K46uhQZWWOki37YR0+f1lFRRM5o2ZgxZd1wrVvHaPcSfcdcxzeDGGKna44RTPqTg/c1jPqkSpHTm8Gnuqle7Nmzr8wyP/tcZPCkW7c07Uf94Q8/lZGelfZFzsimXzdngGT27JKIxc7OzlOLTv80VRgGEYL3NYz6pEqRAwMczFs4dOhBHbXDCjMP5eRDD0esMKOIVG1oeC5bvkKrL9u275BHHnlUZ6NxjuoNpQIDBQykMBiEZfcnARlGQ1GtyA2jqWMiN5zHRG44T41EXtfheH/2YtC9qcCsOxenEvBOavtOa+s/GibPMXsz6F4V0ZP7bpdqRc6KEuZT04XINNHg+apAJKtWrwm5NxWYfjpv/sLIbyZMBZcAMj+cOePBa6uCuSnMbw+63ymWLluhImI2Z/BcEMTNvHZmcjK70597XxvofGC1VdC9Kupz5LxKkevChM1b9DimXaxO/yRXsoqE0UvmfTN/mxUorKBB1Ey3ZPUMCYNfRI4/pn0yiBRZzpacquEwj3rcuAk6/bNvvwHaQ4NfVhcxT5o56vhnCif/W7ZqE3Ej8Vq1aqvhzPfux7UsJPBXxPjPwRRXf5SVZXTz5i/QFS+8sKKJZeFOnDRFp7sSH/9eiFxXD3lxY4UPXahx8Yl6nmdkOd7adetl5crV0qJla+0qJV24bjSfM1y0WFfk6FK4/oN0+i3hMreerlXSl3TjGubU+/FlJJg54xMnTtHfLOHj+VjOx5RfFnxwXOKFTTrz3MzpJkOSliz3I0ziOGDAYJ0bznRZ0oVMisgpoViqxzz5+QsWyoqVqzQ+rNYi7f0SjDTZsqVU04/uX94lYyDEh8UYPBMZgIE90pPjufPm6wAg8ckvGKHvaZl3z6XLluv1/nNCdk5vfR/+BD6mXheXzNF7khGJC2lxOyPjVYqcucgkVNu27WXa9Jm6bI05yT0zenmRjdfEZropiUhiYhm2bi1LENZFsjAAkS9fsVKH/xnm52UQNgnGg/HQLE3jGpam8bJ79+mvL4kMs3HjZl0+V1Q0Wa8jzCVLl+kx4kJoLGFjNRBWle5M7sHCBn/1zsyZxTqLcRXiWrNWXxwvgZe8YUOZxdi4aYsmKiWW//yIlfn0hMOXkhEKax1Lt23XKQzZOXma8VkYwRx05ncTNoLhOgTAM5Aua7xw/fiQjszf5v59+g4oMwarvi7xWDlFerASiDWeG7w0YOEFK6FYrMHSPUaXuQcLG4jLBi+9uQZDwogzmY/f/OddsYCEFV5kAkTOUrqF3vvjfpRQEyZMVDFOnjxNRczUDT8+gwfn63vGENBtjJXl/TEYyG+mQCNiMh4Dfxgy3hv3Z/oHawxIG+JFho3WGM9HOjKVmrWn6Ix04lkHeBkaY8T79Ne81oUqRU7OZP0ekeblYYF40UldUtSispQNcXCeiGApGQHlWvz6IkcgvGxeLgnOeRKJ5XLMZSG34oZoGSjSxJ4yTROXgSVKE7+aoNZ2WdkqePwjTMIiMxI+K5ZY+MCxLyrEVlq6XROc+BFfRELYLGzAD/cgLKy2//zR1ZX1G74WOUUvGRTLPWhQmchZCUNG48WygAEBYg2xjoiCTOuH64sc0TEopmKMmpuOQPiPYCk9WAHFMyESRE61kXTjuTEc3N+/nndA+L4hoMRgQQdhMT2DZ44WOWMWvEf8YkUpPbgXJS1uHTx/vmFiTSjPzbvFDwu69T15z4K1xRjxrGoU1m3Qa6iaIXLSjPOUcP5zAvcmfHTGohV/uR/hsLyODIThYdAx+rraUKXIYejQAi3CqY+xgpsXj9UhcrwgcijncUMk5ESKP1brIEiKyEzvATmPP78YJNeyypvfvDjcKOry8vrqiyGRsDAUxax28eODILCK8+YtVJEzt51EL4tPhgqHInzW7OJyz7Fv3wGtcmE1GLAi8/GiqU4QR7Z6IC5YDv8aMhbPwzHtEkoxrCYrjLiGzIj1QtSERTwotSiCEYS/PA4rR4njh0upwvP511CSRS8IYWVRSck8TTMyJIIlbUaMGKUiYGQZcfrPTdha7fDiRBrTsOT+hEUmQCBkZtKLEodn5l1RVeIePBsZmOohacs1ZFiux9CRGcik+OWZMDLEhxKKTKjrdr0SHBETFtdRRaQaQlVymOcPo8JAIv79uAHPiYFiRB29lL3bBTpCjkZYSoce0N3MWXVbdFOtyAFhBVvX0b+jj7EWCJ+iLOgnGEZl+P74z4uFyvxUFHbwPtQd/aK5ovPB3zWhsvsFw6IU8cVak+vBL+or8x/tVlU4Qb9Bt8qoyG/QrSb3rcidqhnraKvyFwwbSMe6rpSqkchrA7mRelZ1X+SqCQiDojaYCLWFEqdNPcSnLlDs01gNuldFbXuxjKqpF5GTy6rb0YkcXNtlc9Tt6iJwrmFVetC9rgStsNG0qBeR0xhh16agO9BbQg8CdVm/7l0T2HSHRh8NECxx8HxVUI+k3hx0rytjxzaeLc+M2lOlyLGIxcVzVWyDhxRodxndWjQOaDVT96YXgd20fJFjfWmU0Pij23B2cYnOQOT8nr371P/AQUPV0tKTQTckfaDU4Wn5EwZWf936stY53ZPMfqRXhmuBe9Na51rAD33XxJMGFtcjcrq3aAjhx+9pocFFw4kGIiVQfv5wvW6i12BlDxKup/FKI5uGKl1rNNToJdH7ec9PFyppQQObrjbuR8OcBuTdHOQxKqZKkVNM0/VHFxCio4+V7h6WutHfSbcafgoLJ0ZETn3c37eEBhT7fyBALDlbqOGfRRV05bEinR6CPn3663//vvRq0K2IIOlFGTlqtPYE0HVJzwFC97uqGECiYUq/KtfS3UR7AJEjWPZbpOHn7+GIkLkX3W/0JrDDVNmKp0Pas4PVJlyuZ9CJHhvC4T744xxdeWRYfjNYRP88fhgw8rfTMxoPVYqcLjWsNpYK8SByrBiWlT5u+r956YjYFzl9p/6OpgxQMFjhi5zqii9yBjgIi24nutIYQPHvS3WDfm1KEqw8FpJ+Xqwkwsdqkum4N33C9Oj4/fP0F/siJyNkfHUPv+uSrjdKETINImXQKDW1h8aFrj9/NJUuNTIHcUDADKYwiso9KUXYgo0uMY7p3qLLjW6zxrSbq1FGlSLnhdLvSnHOwEf/AYNVrAyNU89mFI4+YIp+3LkGETMsu3DhEh1VxPIymIGQEAnnGTmj7xaxMjyMcBFI9L2xipwHMg795VQXqH4gVOrp/J4/f5FmBLqlCIvdnMiUZaNzqXo9VSe/YcxuvLgRDsv7hnjVMM6zXpWuRiw2/ujh8AVLBiPj0Q/NUD194wzA0L/LOcJmWgIjr/6+g0bjoUqRNyWoMjEg0pQnhBkNgzMip9ShLm/dfUYQZ0RuGJVhIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzVClyJj4x5G4YjZnoj4dVRJUiNwwXMJEbzmMiN5zHRG44j4nccB4TueE8JnLDeUzkhvOYyA3nqVLkrKX0P37FxkD+JpANzdivVvvXJ+npmdKjR0bIvT5hZwNG4ILuPtEb0bNAui57fdcE1tWyy0DQvSY0a162RbL/v3vOyJCfpkaVImdBMLu98kJYBc+CY14iq9Rxi+0Qpy+K1fGt28SUu44V8v4OWPhni2aOWaLGyvbgNnIsbGbVO8dsGYG/snvEf3Vdgi5tY8N79l1h8bC/Ap/ruCcbREYLB/8seMYfO6+ydQWLkP399diEsv1XXzRAgOw44O+DTZgpX2XwMr8Z5XYJ8+Pq77dNfNkVlu06fMNAWOwCwP+ybSs2RoagiSu7y3JfwiWe0Uv3OGYjT+JO2DwX13K/OO83mdbPNGzg1KXL11vLER47EnAdhsrfF92nXVyKxHcp212BZ+vcvY+0aB0r7Tp2lRlrLkr7+G4ya90T0rZDknRNH+gJvrW0jU2SpLR+cv8DZekbl5Sh/lvH8F5b6LmWberv6xD1SZUiB7baZWdStibGmrPHN9srs1k72zr4GzH6q9x5GWxFgRur11mhP3z4SNmyZauuuD/84BHdKXftV1v7AteyVwvbXxAeIidsXh67nbLfCltWIDQ282FTIjb/YfdV3Fjpz74rbFBPXP1wWYWPP/Z/KSgo2yN8+vRZGn82jWdXVnaXRQz+9tJsP+Hv7sozs3k+myURZ38PcA174SIV4JGjxzSzEz9Ezq4G7HCAuNkkn+sxEOxXs33HzkjG5Jm5F6LdtGmzZkLSy4+7f092OiAN2cyIXXUHDc6XAwcP6TYc7BDAjsHsGsC9iT/XsksBfnk23h/be/j3RcBFi0/I4Amr1UqPnLlTsgZMkinLT0tC114yZ8tz0qlbb5lXekWFXLTouMR1zpDijU9L7lAv7WZsl7ScUTJq1i4pmLxJBheulpEzdkhm/0ky0Qs3qJ/GQLUixxofP3FSrRHiYPMg3BFFRSLnN+4c8zVmNuJhDxM24WHbCn9/lZWrvv7cOBsQIQi+LkAJgMixRGz3gGjZlIjtILBKbDqEANkzRTfG90SV4FlVdt9i51ru54fLlr/8xwIidvYSZ+8WBOHvn82+LYUTJkX2JWf7DfyQgbgXGeDAgUP69QsyS9uYMmvO8/KNU7YhJjOwrR3hUsqwXQWwzTJx59l1/xjPcvtxIyORLnxwYNSoso3poz8AwHYeiJh9YCil2MoYSAN/z3Sen33BMT5Yfr+U8EXOvjG8P+LlW/PmLdvJ6OI9MmL6NrXO87df0+OpK89Ki1btZdLSh9Xf1BVlHxH2RU6muL9ZS5mw8KgKPaZDV80EiJzMMqZkn+Tl121r5YamWpEDXw/gP0UqL5XqBi+MrdWwHuzp7YuchMZy8bIRAVtEsGsVYVCMVyRyPr+R1StX97mmGEfkvLSTJx/SHalKS7dp+GxShFXjxfKfDY7Y5Of+Zs3VjXvyUQA/XO5BNYH4YcmjRc7mQ1SRsIJkKATMp2HYpIjflCz45xnIVMSdksK35JRYZ86ek3Ze/Xfv3n1quYMiZ3s89mHZf+Cg+mezI7+KgQXH4lNaIUb2eeGrEH7c2QeGKkjpth16LXuqU3oGPwyAhSczkT7+O6hK5Aiz97A5ktGvSAaNXyGTPVHHd8mU9D7j9NmorjRv1U6mrTonrdslVCjynCEzNIwcz7IjcujYKV1mrntcq6G13di1oamRyNncxz8u+yTGaLUuCBqhsedh9LdgsNhs9uNPheQYy0R1xd+MPnpTehpK+GFvRfz7u3Fh1Ul4BMaXLbgfnyBhw3rExHn/ywSIiQYrlq5cuJ4l5OsQWE7gJSAC/mNB/Q82IQI+I8IL+tb9D6hI2WIOC0xRj0Wlvh2dLmRI/vtfiyBc0gXrDzwjW+GxURL+KE38hin+2Zye+jO7jPH8fL7GD5u9H4kPmYffk6dM/Sod2urz4MZOZoSDoaFk8+v0bFNNpuH+fryip6Om9xmvAn2gRRtpFROvgu3SoyyDpOWOltjENElMyZWuPQd7de3+Wl+P61IWFnXv5i1jvOtnaibpP2aJVyJ0lj7D50oXzy/pShssOp3uNjUSeWMEAVOaBBuwLkJPCVWboPvdor3XcB0+rVTr5a3aVt6b1FhosiI3jJpiIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyw3lM5IbzmMgN5zGRG85jIjecx0RuOI+J3HAeE7nhPCZyo0pSMofKrPVPyNzSFxsdc7Y8LwPGLJFv3d88FO9oTORGpbRs01G2nvtCdl3+baOmZ9/CUNyjMZEblZKYnBMSVGNk2NQtobhHYyI3KsVEbjiPidxwnnta5O3ju0nfEfP1uENimqT2Gh7y49M6JkGaPdBaOnXrLZ1S8kLnK6N3QUnIzbizVCby9Q99X2aue0KP5227KisOvRvyUxHrvOsW7npFe0W2XfxF6Hw001adkzXHPw65V0SDiJxupU2nP5duWQXSPWeUjJyxXd07dctTMfv+HmgZIzPWXJSMfkXSe/hc6T96sV7TrHkbPd81faAkdM3W49iE7hLfNUvikjL19/zt1/R/x8495YEWbSUlY6hmrmBcjIajMpHvfOI30rNPoSw/9I6kZg+X7Y/9UpbsfV1WH/tIz2889SNZsOO67Lj0/8pdt2j3KzKmeK/kT96ofjY8/EN1owdn6b43ZP3DP4j4nb/9Jc/Pj2Xdye/JysPfkTXHboXi4dNgIh8xfZv2Vab3Ga8iHzhuuRQtOi6FC47oMf7axnaWxbtfk1GzdqnIF3jC5bpx8w56Ah8kgwtXydQVZ7yMMlKWHXjLi+xmWeTl9Nj4VBV535ELvGt3y9CJ6/Xc6Nm75Vv3twjFx2gYKhM5rDr6obTrmCzzSq/IqJk79R33GT5PFuy8Ll16DJCixSc8a3+p3DW+yDlGvPFdMmVsyX41bGNK9qomdj7xaz0/pGitl3FuquHkvXftOUg2e4Y1GI8GFfmQCWske/A0LXoQOf/plKdqMnfr8xG/RQuPeRa6l4q897C5cn+zljJj7SXJ6DtBpix/VKavvigDxy7XBMB/gZfLkzOGyNoT39ViEQvPg05ffUHGzTkg9z/QKhQfo2GoSuSQNWCS7PKsOqJGlP3HLNFqBqLMyy+W4o1Pl/MfFHmfEfP0uEfeGP2fPXh6pBrjizzNqynwu2DKJll15P1QHKBBRY6ofZETCXLzCO8Yq+v7Henl8jHFe1TkeQXFKvKZnsh5WCz15GWPqOVfuPOG+kfkKZ7I+R3fJUuKNz2t1Zw+XhuA+p9VWe4cNRX54AmrZfy8Qyq2pfvfjIg9z2tXFS06ISsOv6f+gyLvN3KhHlMb4H9FIk/PG6u/C6ZsvrMiZySsXVyKHrdp31mtLYKnfkbVI3qYtblXL++ePdKruiRp9YVzCZ5lf6BFjGR6iRSXlOEVe10jdXlE3LJNB7Xe/E5MyfEar/GS2X+Sd5wbiovRcFQn8hWHyxqcVDHmbHnOE/Gr+nv10Y+8qsrjUnr+51qF3XLmp+pO3ZvGJ8fU41cd+VCPlx98R/+v9DKDX11Zc/yWbD3/ReTc2uOfyLYL/zcUB2gQkRv3BtWJvGb8pgK3+sVEbtSZ+hF5w2MiN+qMidxwnvbxqSFBNUYGjFkains0JnKjSugN2XHpVyFhNQqe+I0s3PWydlQE4x2NidyoFrp9GZ9ojHyzmgUTYCI3nMdEbjiPidxwHhO54TwmcsN5TOSG85jIDecxkRvOYyI3nOe+tPQsMQyXuS+xU1cxDJcxkRvOYyI3nMdEXgsWLFgsX3zxpcfP7yJfyoKFi0NxMyrHRF4Lkrp0k4zMnLsO8QjGzagcE7nhPCZyw3n+P/pUAn0Pe/8LAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "line": 136,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 140,
        "name": "Navigate back to Activity screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-activity-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 786271000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2157150200,
              "status": "passed"
            },
            "line": 141,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18246292900,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tthe expected text is: About the disease expected [true] but found [false],\n\tthe expected text is: Exercise impacts all aspects of your health expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.verifyHRAResult(BabylonSteps.java:616)\r\n\tat ✽.Then I verify the HRA Results are displayed(features/sg/health/babylon/BabylonHRA_Report.feature:142)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 142,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 144
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2639197000,
              "status": "passed"
            },
            "line": 147,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 784434900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8734905500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 92c9b090-fedf-4fd0-a22b-7ff323dadd8d\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Mood\u0027)]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonHealthAssessmentScreen.clickOnDigitalTwin(BabylonHealthAssessmentScreen.java:130)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.clickOnDigitalTwin(BabylonSteps.java:350)\r\n\tat ✽.When I click on \"Mood\" link on digital twin screen(features/sg/health/babylon/BabylonHRA_Report.feature:150)\r\n",
              "status": "failed"
            },
            "line": 150,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 152
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 153
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 155,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 156
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment2}"
                ],
                "line": 157
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 54700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2624174500,
              "status": "passed"
            },
            "line": 160,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report_sg"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 639648000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 583600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29100,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9184595800,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15322372300,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000395900,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 217402700,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5003775900,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7668231000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#  Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 386876500,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9993160800,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31655975800,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012213300,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63935002800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 7e03cf2a-ff22-4786-b0e2-6a55bc821887\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_NegativeFlow.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dietician_Negative"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#    Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 30,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17779889300,
              "status": "passed"
            },
            "line": 33,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15515753600,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19097003000,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2619326400,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 323915100,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2999583100,
              "status": "passed"
            },
            "line": 38,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2590965600,
              "status": "passed"
            },
            "line": 39,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5958596600,
              "status": "passed"
            },
            "line": 41,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3562185500,
              "status": "passed"
            },
            "line": 43,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "124-12-2025"
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 811834500,
              "status": "passed"
            },
            "line": 45,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1052740900,
              "status": "passed"
            },
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 27200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1772735600,
              "status": "passed"
            },
            "line": 49,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1845737000,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 981260700,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 749911900,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4407773400,
              "status": "passed"
            },
            "line": 54,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2649685800,
              "status": "passed"
            },
            "line": 56,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 812083200,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3802525400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    And Enter the year Name in Eductaion Details Screen"
              },
              {
                "line": 60,
                "value": "#      | ServiceNumber | 2020 |"
              }
            ],
            "line": 61,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 767137000,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3332567000,
              "status": "passed"
            },
            "line": 64,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1223853500,
              "status": "passed"
            },
            "line": 66,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1273094700,
              "status": "passed"
            },
            "line": 67,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 68,
            "value": "#"
          },
          {
            "line": 69,
            "value": "#"
          },
          {
            "line": 70,
            "value": "#    # Valid Failure -Issue id - PCAONEPULSE-21033"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 938438000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2422307800,
              "status": "passed"
            },
            "line": 73,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2857051000,
              "status": "passed"
            },
            "line": 74,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1894610000,
              "status": "passed"
            },
            "line": 75,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2312158300,
              "status": "passed"
            },
            "line": 76,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2346474000,
              "status": "passed"
            },
            "line": 77,
            "name": "I Enter the \"Start Date\" in \"2030\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1870285800,
              "status": "passed"
            },
            "line": 78,
            "name": "I Enter the \"End Date\" in \"2010\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 789636900,
              "status": "passed"
            },
            "line": 79,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2393682100,
              "status": "passed"
            },
            "line": 80,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1039359200,
              "status": "passed"
            },
            "line": 81,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108244800,
              "error_message": "org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: java.lang.IllegalStateException: Unable to evaluate expression. See cause\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 7e03cf2a-ff22-4786-b0e2-6a55bc821887\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[Contains(@text,\u0027Add Experience\u0027)]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:254)\r\n\tat com.onepulse.app.screens.DieticianScreen.VerifyAddExperience(DieticianScreen.java:327)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.VerifyServiceOffered(DieticianSteps.java:154)\r\n\tat ✽.Then verify Add Experience message \"Add Experience\"(features/sg/health/dietician/Dietician_NegativeFlow.feature:82)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 82,
            "name": "verify Add Experience message \"Add Experience\"",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 31
                }
              ],
              "location": "DieticianSteps.VerifyServiceOffered(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Dietician Negative Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_NegativeFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_Negative"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 658434500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor39.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 483500,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9294687900,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15888794100,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003153800,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 240607100,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5008492400,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8420623900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 14,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 280566200,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003282300,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30842130400,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5011703700,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64801525800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: baa75b2b-44f4-40b5-8a12-4db0c8395e5c\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1132)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_PositiveFlow.feature:55)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I enter the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 25,
                "value": "#      | mobileNumber | 98678419 |"
              },
              {
                "line": 26,
                "value": "#    And I click the continue button"
              },
              {
                "line": 27,
                "value": "#    And I choose my wellness goals under wellness plan screen"
              },
              {
                "line": 28,
                "value": "#    And I click the continue button"
              },
              {
                "line": 29,
                "value": "#    And I click the date in Date of Birth field"
              },
              {
                "line": 30,
                "value": "#    And I click the Done icon"
              },
              {
                "line": 31,
                "value": "#    And I click the continue button"
              },
              {
                "line": 32,
                "value": "#    And I select the  Male icon"
              },
              {
                "line": 33,
                "value": "#    And I click the continue button"
              },
              {
                "line": 34,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 35,
                "value": "#    And I enter my height and weight details"
              },
              {
                "line": 36,
                "value": "#    And I click the continue button"
              },
              {
                "line": 37,
                "value": "#    And I click on Calculate BMI button"
              },
              {
                "line": 38,
                "value": "#    And I click the continue button"
              },
              {
                "line": 39,
                "value": "#    And I select the \"How active are you?\" in doing exercise"
              },
              {
                "line": 40,
                "value": "#    And I click the continue button"
              },
              {
                "line": 41,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 42,
                "value": "#    And I click the continue button"
              },
              {
                "line": 43,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              },
              {
                "line": 44,
                "value": "#    And I click the continue button"
              },
              {
                "line": 45,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 46,
                "value": "#    And I verify that \"Tracking your activity is trending\" is displayed"
              },
              {
                "line": 47,
                "value": "#    And I click the continue button"
              },
              {
                "line": 48,
                "value": "#    And I see that \"Welcome to Pulse\" text is displayed"
              },
              {
                "line": 49,
                "value": "#    And I click the continue button"
              },
              {
                "line": 50,
                "value": "#    And I see that fitness subscription exclusive offers screen is displayed"
              },
              {
                "line": 51,
                "value": "#    And I click on close icon"
              },
              {
                "line": 52,
                "value": "#    And I enter NRIC number last 4 digits \"122F\""
              },
              {
                "line": 53,
                "value": "#   # And I click the continue button"
              },
              {
                "line": 54,
                "value": "#    Then I click skip buttons"
              }
            ],
            "line": 55,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dieticians_positive"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 64,
            "value": "###"
          },
          {
            "line": 65,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 66,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17987321800,
              "status": "passed"
            },
            "line": 69,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15394119300,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19352842100,
              "status": "passed"
            },
            "line": 71,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2835832300,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 396324500,
              "status": "passed"
            },
            "line": 73,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4361786000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 74,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 75,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 76,
                "value": "#      | What is your service number?                                 |"
              },
              {
                "line": 77,
                "value": "#      | To start getting appointments please complete these details. |"
              },
              {
                "line": 78,
                "value": "#      | Service Number                                               |"
              },
              {
                "line": 79,
                "value": "#      | Issuing Organisation                                         |"
              },
              {
                "line": 80,
                "value": "#      | Valid Till                                                   |"
              }
            ],
            "line": 81,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5138583600,
              "status": "passed"
            },
            "line": 83,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3766587900,
              "status": "passed"
            },
            "line": 85,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "12"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 787272300,
              "status": "passed"
            },
            "line": 87,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1079858200,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 57900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1358593300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   Then I wait for 3 sec"
              },
              {
                "line": 92,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 93,
                "value": "#      | What is your specialisation? |"
              },
              {
                "line": 94,
                "value": "#      | Ear Nose Throat              |"
              },
              {
                "line": 95,
                "value": "#      | Dentists                     |"
              },
              {
                "line": 96,
                "value": "#      | Psychologist                 |"
              },
              {
                "line": 97,
                "value": "#      | Orthopedician                |"
              },
              {
                "line": 98,
                "value": "#      | Paediatrician                |"
              }
            ],
            "line": 99,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1091076100,
              "status": "passed"
            },
            "line": 100,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1691695300,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Add Super Specialisation"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2122135500,
              "status": "passed"
            },
            "line": 103,
            "name": "Enter the Add Super Specialization Till im pulse for Experts Screen",
            "match": {
              "location": "DieticianSteps.Addsuper_specialisation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 799684300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 105,
                "value": "# And I click the continue button"
              }
            ],
            "line": 106,
            "name": "I clicks on \"Add Super Specialisation\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Super Specialisation",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 986499100,
              "status": "passed"
            },
            "line": 107,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 748397800,
              "status": "passed"
            },
            "line": 110,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2130929600,
              "status": "passed"
            },
            "line": 112,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3440169900,
              "status": "passed"
            },
            "line": 114,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 793102300,
              "status": "passed"
            },
            "line": 116,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3026829200,
              "status": "passed"
            },
            "line": 117,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2012"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 784423800,
              "status": "passed"
            },
            "line": 119,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3858498000,
              "status": "passed"
            },
            "line": 120,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2020"
                ],
                "line": 121
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 788444800,
              "status": "passed"
            },
            "line": 122,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1639198700,
              "status": "passed"
            },
            "line": 123,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2016679400,
              "status": "passed"
            },
            "line": 124,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2212841700,
              "status": "passed"
            },
            "line": 125,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1339240800,
              "status": "passed"
            },
            "line": 126,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1833694700,
              "status": "passed"
            },
            "line": 127,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2637944900,
              "status": "passed"
            },
            "line": 128,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1844090600,
              "status": "passed"
            },
            "line": 129,
            "name": "I Enter the \"End Date\" in \"2030\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 751448900,
              "status": "passed"
            },
            "line": 130,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1301599800,
              "status": "passed"
            },
            "line": 131,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2534023600,
              "status": "passed"
            },
            "line": 132,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 483077500,
              "status": "passed"
            },
            "line": 133,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 135,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 44700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3009683300,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 847920800,
              "status": "passed"
            },
            "line": 137,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Services Offered"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 718332100,
              "status": "passed"
            },
            "line": 139,
            "name": "I Enter the \"Services Offered\" in \"MBBSDOCTOR\" in service offered screen",
            "match": {
              "arguments": [
                {
                  "val": "Services Offered",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 35
                }
              ],
              "location": "CustomerConnectSteps.EnterServiceOffered(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 922130300,
              "status": "passed"
            },
            "line": 140,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 734896900,
              "status": "passed"
            },
            "line": 141,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Achievements \u0026 Awards"
                ],
                "line": 142
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1355958700,
              "status": "passed"
            },
            "line": 143,
            "name": "I Enter the \"Enter title of the award\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter title of the award",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 43
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1295496800,
              "status": "passed"
            },
            "line": 144,
            "name": "I Enter the \"Enter organisation name (Awarded by)\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter organisation name (Awarded by)",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 55
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1860136900,
              "status": "passed"
            },
            "line": 145,
            "name": "I Enter the \"Year\" in \"2020\" in Achievement Award screen",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterAchievemnetyear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 841883000,
              "status": "passed"
            },
            "line": 146,
            "name": "I clicks on \"Add seminar details whether you attended as a participant or as a speaker.\" in close keyboard screen",
            "match": {
              "arguments": [
                {
                  "val": "Add seminar details whether you attended as a participant or as a speaker.",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickClosekeyboard(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427954400,
              "status": "passed"
            },
            "line": 147,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 36700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001267700,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1007125700,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Seminar(s) Attended"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1288433800,
              "status": "passed"
            },
            "line": 153,
            "name": "I Enter the \"Enter seminar title\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter seminar title",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1833422400,
              "status": "passed"
            },
            "line": 154,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1838713300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 155,
                "value": "#  And I Enter the \"Year\" in \"2020\" in home screen"
              }
            ],
            "line": 156,
            "name": "I Enter the \"Year\" in \"2020\" in seminars Attended",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterYear_Semainar(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1400049600,
              "status": "passed"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1869330400,
              "status": "passed"
            },
            "line": 158,
            "name": "I Enter the \"Enter name of the Clinic/ Hospital\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter name of the Clinic/ Hospital",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 53
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1854687600,
              "status": "passed"
            },
            "line": 159,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 908434000,
              "status": "passed"
            },
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1103312300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 163,
                "value": "# Then I wait for 3 sec"
              },
              {
                "line": 164,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 165,
                "value": "#      | About You     |"
              },
              {
                "line": 166,
                "value": "#      | Profile Photo |"
              }
            ],
            "line": 167,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12508083000,
              "status": "passed"
            },
            "line": 168,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11059814000,
              "status": "passed"
            },
            "line": 169,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 372554500,
              "status": "passed"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3006086600,
              "status": "passed"
            },
            "line": 171,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4385405800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 172,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 173,
                "value": "#      | Confirm Details! |"
              },
              {
                "line": 174,
                "value": "#      | MBBS-2020-2020   |"
              },
              {
                "line": 175,
                "value": "#      | MBBSDOCTOR       |"
              },
              {
                "line": 176,
                "value": "#      | MBBS             |"
              },
              {
                "line": 177,
                "value": "#      | TEST TITLE       |"
              }
            ],
            "line": 178,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2015089200,
              "status": "passed"
            },
            "line": 179,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 371152700,
              "status": "passed"
            },
            "line": 180,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243110900,
              "status": "passed"
            },
            "line": 181,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 183,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5001017400,
              "status": "passed"
            },
            "line": 184,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 224999600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 185,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 186,
                "value": "#      | Conversation History              |"
              },
              {
                "line": 187,
                "value": "#      | Click To Manage Your Availability |"
              }
            ],
            "line": 188,
            "name": "I clicks on \"Schedule Calendar\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Schedule Calendar",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 150832900,
              "status": "passed"
            },
            "line": 189,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Calendar"
                ],
                "line": 190
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2518353000,
              "status": "passed"
            },
            "line": 191,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_PositiveFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dieticians_positive"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9496186900,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8085384100,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10896752000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 301549000,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10008645400,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30938490800,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14675684700,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6184956600,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1833586000,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10311294300,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 302597800,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9760722900,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6260648300,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8009340300,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 338984400,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 787339900,
              "status": "passed"
            },
            "line": 29,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 31
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to download eMC Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-emc-document",
        "after": [
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 304240000,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on emc attachment",
            "match": {
              "location": "MyDocSteps.clickEmcAttachment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8700581800,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5036781200,
              "status": "passed"
            },
            "line": 37,
            "name": "I download \"${EMC_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify User should be able to verify the eMC details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-emc-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 917062800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 53598900,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/eMC-11th-January-2021-13980.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medical Certificate"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${DOCTOR_NAME}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 45,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify User should be able to download Prescription Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-prescription-document",
        "after": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4363808100,
              "status": "passed"
            },
            "line": 48,
            "name": "I open the Prescription",
            "match": {
              "location": "MyDocSteps.openPrescription()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13750011200,
              "status": "passed"
            },
            "line": 49,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5061295200,
              "status": "passed"
            },
            "line": 50,
            "name": "I download \"${PRE_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to verify the Prescription details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-prescription-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 1028007700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 880400,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Prescription-11th-January-2021-KJRYHM3H2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${PRESCRPTION_NUMBER}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 58,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to download the Referral Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-the-referral-document",
        "after": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5804229500,
              "status": "passed"
            },
            "line": 61,
            "name": "I open the referral",
            "match": {
              "location": "MyDocSteps.openReferral()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12310008700,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5045645800,
              "status": "passed"
            },
            "line": 63,
            "name": "I download \"${REF_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to verify the Referral details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-referral-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 941588100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 976200,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Referral-11th-January-2021-KJRYIP3Q2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${EPISODE ID}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${REFERRAL_NUMBER}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able to Download as PDF Files \u0026 Validate the details in downloaded Mydoc Documents.",
    "description": "",
    "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MydocDocsDownload"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 7,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 30500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9511125600,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 149700,
              "status": "passed"
            },
            "line": 9,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9648637100,
              "status": "passed"
            },
            "line": 10,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10524690800,
              "status": "passed"
            },
            "line": 11,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 260367100,
              "status": "passed"
            },
            "line": 14,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000692600,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31124407400,
              "status": "passed"
            },
            "line": 16,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14324887200,
              "status": "passed"
            },
            "line": 17,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6669743600,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2541439700,
              "status": "passed"
            },
            "line": 19,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 20
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 21
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10931613400,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1326164600,
              "status": "passed"
            },
            "line": 23,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6182662200,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 51400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6484779400,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1552115200,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 883802800,
              "status": "passed"
            },
            "line": 31,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${REF_FILE_NAME}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${PRE_FILE_NAME}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${mc.file.name}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19922295000,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4549008100,
              "status": "passed"
            },
            "line": 36,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5004658700,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4553961600,
              "status": "passed"
            },
            "line": 38,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4999511100,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4607911100,
              "status": "passed"
            },
            "line": 40,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4202145200,
              "status": "passed"
            },
            "line": 41,
            "name": "I navigate to online consultation screen for mydoc registration",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreenForMydocRegistration()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 55500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Verify User should be presented with the Mydoc Chat bot questions log",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-presented-with-the-mydoc-chat-bot-questions-log",
        "after": [
          {
            "result": {
              "duration": 2264688100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 95654143700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tChoking text is displayed on page  expected [true] but found [false],\n\tBreathing difficulty text is displayed on page  expected [true] but found [false],\n\tChest pain text is displayed on page  expected [true] but found [false],\n\tWeakness in arms or legs text is displayed on page  expected [true] but found [false],\n\tSpeech difficulty text is displayed on page  expected [true] but found [false],\n\tLoss of consciousness text is displayed on page  expected [true] but found [false],\n\tSuicidal or homicidal thoughts text is displayed on page  expected [true] but found [false],\n\tSeizures text is displayed on page  expected [true] but found [false],\n\tBleeding text is displayed on page  expected [true] but found [false],\n\tSevere pain text is displayed on page  expected [true] but found [false],\n\tConfusion and/or hallucinations text is displayed on page  expected [true] but found [false],\n\tBroken bones text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:44)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User can able to chat with Mydoc Chat bot",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-chat-with-mydoc-chat-bot",
        "after": [
          {
            "result": {
              "duration": 2294534300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13529658400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 66fe0362-5ebf-4d99-a814-ab363136cb11\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027None of the above\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.handleEmergencySymptomQues(MyDocMedicalProfileScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.handleEmergencySymptomQues(MyDocSteps.java:179)\r\n\tat ✽.When Handle Emergency symptoms questions for doctor consult(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 60,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify User should be able to update the medical profile for registered user",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-update-the-medical-profile-for-registered-user",
        "after": [
          {
            "result": {
              "duration": 2351451600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19560668200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 66fe0362-5ebf-4d99-a814-ab363136cb11\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.enterMedicalProfile(MyDocMedicalProfileScreen.java:83)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterMedicalProfileDetails(MyDocSteps.java:186)\r\n\tat ✽.When I enter Medical Profile details as below(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:63)\r\n",
              "status": "failed"
            },
            "line": 63,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 68
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 2161508500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 78102403500,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:72)\r\n",
              "status": "failed"
            },
            "line": 72,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 75
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 77
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 78
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 79
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 80
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 81
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 84,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User should be able to select payment with existing added card",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-select-payment-with-existing-added-card",
        "after": [
          {
            "result": {
              "duration": 2180960800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10008961300,
              "status": "passed"
            },
            "line": 87,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35151617000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 66fe0362-5ebf-4d99-a814-ab363136cb11\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Visa\u0027]/following::android.widget.Image[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyPaymentUsingExistingAddedCard(MyDocPaymentDetailsScreen.java:155)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard(MyDocUiSteps.java:158)\r\n\tat ✽.When I select the confirm payment using already added card(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:88)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "I select the confirm payment using already added card",
            "match": {
              "location": "MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 2262866500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25399486000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 66fe0362-5ebf-4d99-a814-ab363136cb11\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:73)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:91)\r\n",
              "status": "failed"
            },
            "line": 91,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 92
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 96
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 104
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 105
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 106
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 107
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 108
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 111,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 114,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 2517425500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5015832700,
              "status": "passed"
            },
            "line": 115,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90854605800,
              "status": "passed"
            },
            "line": 116,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74703189500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 66fe0362-5ebf-4d99-a814-ab363136cb11\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.ScrollView/android.view.ViewGroup/android.view.ViewGroup[3]/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:142)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:117)\r\n",
              "status": "failed"
            },
            "line": 117,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 118,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 119,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc doctor consultation Summary on Pulse Health \u0026 Wealth app",
    "description": "1. Verify Consultation History Screen\r\n2. Verify All My Files Documents\r\n3. Verify User able to Complete Mydoc Journey Without Mydoc Registration (Existing user)",
    "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocConsultationSummaryTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@MydocConsultationSummary"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 77200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 625958600,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor39.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 645600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26600,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10565312900,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16776935700,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7134830600,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 10
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 231531700,
              "status": "passed"
            },
            "line": 14,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10001055600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "# Then I wait for 45 sec"
              }
            ],
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30008325000,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005272100,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10635198700,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "81069586"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8186392900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 22,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 459060200,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5900188500,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 299720300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 26,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 27,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1385854300,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5838636300,
              "status": "passed"
            },
            "line": 29,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1069535300,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8086747800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 32,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2315978300,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8678272100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 89fe782c-a5c2-4811-bb37-aa39de7c790a\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:944)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/health/mydoc/MyDocEndToEndTest.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click \"${reg.tracker.connect}\" button on the app",
            "match": {
              "arguments": [
                {
                  "val": "${reg.tracker.connect}",
                  "offset": 9
                }
              ],
              "location": "WealthSteps.iClickButtonOnTheApp(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 46,
                "value": "#And I click the continue button"
              }
            ],
            "line": 47,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyDocEndToEndTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the online consultation screen user fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields",
        "after": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18489152200,
              "status": "passed"
            },
            "line": 57,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13663291400,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44769977600,
              "status": "passed"
            },
            "line": 59,
            "name": "I navigate to online consultation screen",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3671881100,
              "status": "passed"
            },
            "line": 60,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 61,
                    "value": "##Gender and DOB validation in below step is not covered for IOS due to locator issue"
                  }
                ],
                "cells": [
                  "Online Consultation"
                ],
                "line": 62
              },
              {
                "cells": [
                  "First Name / Given Name"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Last Name / Family Name"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Email"
                ],
                "line": 65
              },
              {
                "cells": [
                  "County of Residence"
                ],
                "line": 66
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4479073800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "#  Then I select gender and date of birth for newly registered user"
              }
            ],
            "line": 68,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify the online consultation screen user fields after swipe down",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields-after-swipe-down",
        "after": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4480647900,
              "status": "passed"
            },
            "line": 72,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1191454300,
              "status": "passed"
            },
            "line": 73,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 74,
                    "value": "# |Address (city)          |"
                  }
                ],
                "cells": [
                  "Address (zipcode)"
                ],
                "line": 75
              },
              {
                "cells": [
                  "NRIC/FIN"
                ],
                "line": 76
              },
              {
                "cells": [
                  "NRIC/FIN Image"
                ],
                "line": 77
              },
              {
                "cells": [
                  "Phone"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "Verify User should be able to enter address and zipcode",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-enter-address-and-zipcode",
        "after": [
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7579526000,
              "status": "passed"
            },
            "line": 81,
            "name": "I enter \"${address}\" and \"${zipcode}\"",
            "match": {
              "arguments": [
                {
                  "val": "${address}",
                  "offset": 9
                },
                {
                  "val": "${zipcode}",
                  "offset": 26
                }
              ],
              "location": "MyDocUiSteps.iEnterAnd(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 83,
        "name": "Verify User should be able to upload NRIC Image in Online Consultation screen",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-upload-nric-image-in-online-consultation-screen",
        "after": [
          {
            "result": {
              "duration": 26200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5012374000,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 43452968200,
              "status": "passed"
            },
            "line": 85,
            "name": "I enter the mandatory fields \"${NRIC}\"",
            "match": {
              "arguments": [
                {
                  "val": "${NRIC}",
                  "offset": 30
                }
              ],
              "location": "MyDocUiSteps.iEnterTheMandatoryFields(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42239446000,
              "status": "passed"
            },
            "line": 86,
            "name": "I verify the \"${phonenumber}\" and proceed with \"${otp}\"",
            "match": {
              "arguments": [
                {
                  "val": "${phonenumber}",
                  "offset": 14
                },
                {
                  "val": "${otp}",
                  "offset": 48
                }
              ],
              "location": "MyDocUiSteps.iVerifyTheAndProceedWith(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be presented with the symptoms checker questions log",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-symptoms-checker-questions-log",
        "after": [
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3684621500,
              "status": "passed"
            },
            "line": 89,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 91
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Verify User can able to chat with chatbot symptoms checker",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-can-able-to-chat-with-chatbot-symptoms-checker",
        "after": [
          {
            "result": {
              "duration": 90800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10259639800,
              "status": "passed"
            },
            "line": 104,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 49100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify User should be presented with the sample text on the Medical Profile screen as a first time user",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-sample-text-on-the-medical-profile-screen-as-a-first-time-user",
        "after": [
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2671264700,
              "status": "passed"
            },
            "line": 107,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 465897800,
              "status": "passed"
            },
            "line": 108,
            "name": "Verify the Sample Text on the text fields of the Medical Profile",
            "match": {
              "location": "MyDocSteps.validateMedProfSampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "Enter \u0027None\u0027 if no allergies"
                ],
                "line": 109
              },
              {
                "cells": [
                  "Medical Conditions",
                  "Enter \u0027None\u0027 if no medical conditions"
                ],
                "line": 110
              },
              {
                "cells": [
                  "Medications",
                  "Enter \u0027None\u0027 if no medications"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify User should be able to create the medical profile",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-create-the-medical-profile",
        "after": [
          {
            "result": {
              "duration": 54100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7564741000,
              "status": "passed"
            },
            "line": 114,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 117
              },
              {
                "cells": [
                  "EmergencyContact Name",
                  "Pulse QA"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 120
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1210220400,
              "status": "passed"
            },
            "line": 121,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 40400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 36600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7903116500,
              "status": "passed"
            },
            "line": 124,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 128
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 129
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 130
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 131
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 132
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 133
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 134
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 183008900,
              "status": "passed"
            },
            "line": 135,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 412378700,
              "status": "passed"
            },
            "line": 136,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 37800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Verify User should be able enter the card details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-enter-the-card-details",
        "after": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7694251100,
              "status": "passed"
            },
            "line": 140,
            "name": "I click on Add New Card button",
            "match": {
              "location": "MyDocSteps.clickAddNewCardButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2294577700,
              "status": "passed"
            },
            "line": 141,
            "name": "user verify add card details screen fields",
            "match": {
              "location": "MyDocSteps.userVerifyAddCardDetailsScreenFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pay with card"
                ],
                "line": 142
              },
              {
                "cells": [
                  "Card Number"
                ],
                "line": 143
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3057190000,
              "status": "passed"
            },
            "line": 144,
            "name": "I enter Card details as below",
            "match": {
              "location": "MyDocSteps.enterCardDetailsDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card Number",
                  "4111 1111 1111 1111"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Expiration Date",
                  "0822"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Card Number Android",
                  "4111 1111 1111 1111"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Expiration Date Android",
                  "08 / 22"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 891868200,
              "status": "passed"
            },
            "line": 149,
            "name": "I click on Confirm Payment Method button",
            "match": {
              "location": "MyDocSteps.clickConfirmPaymentMethodButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10008562400,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 152,
        "name": "Verify User should be able see the added card successfully",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-added-card-successfully",
        "after": [
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 27401391500,
              "status": "passed"
            },
            "line": 153,
            "name": "I verify the my card added successfully",
            "match": {
              "location": "MyDocSteps.iVerifyTheMyCardAddedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 27500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5980683400,
              "status": "passed"
            },
            "line": 156,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 157
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 158
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2290515200,
              "status": "passed"
            },
            "line": 159,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 160
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 161
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 162
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 163
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 164
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652215800,
              "status": "passed"
            },
            "line": 165,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 376325600,
              "status": "passed"
            },
            "line": 166,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5009536800,
              "status": "passed"
            },
            "line": 167,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4041439300,
              "status": "passed"
            },
            "line": 168,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 169
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 170
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 171
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 172
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 173
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5015082000,
              "status": "passed"
            },
            "line": 174,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 906730400,
              "status": "passed"
            },
            "line": 175,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1860166700,
              "status": "passed"
            },
            "line": 176,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 36000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5014487800,
              "status": "passed"
            },
            "line": 180,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13903500900,
              "status": "passed"
            },
            "line": 181,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60781978100,
              "status": "passed"
            },
            "line": 182,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6040664300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 183,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 184,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc functionality on Pulse Health",
    "description": "",
    "id": "verify-mydoc-functionality-on-pulse-health",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocEndToEndTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyDocEndToEndTest"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 41800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9893255900,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110600,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7943506300,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9925189000,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 284365300,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004847500,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30592489300,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16160226600,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7734461400,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2084631200,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10324056100,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 296353900,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8322799900,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5285203100,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1796627800,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1513305600,
              "status": "passed"
            },
            "line": 28,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22285786300,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able see all available documents in All My Files screen",
    "description": "",
    "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/PulseMyDocFileValidation.feature",
    "tags": [
      {
        "line": 1,
        "name": "@FileValidation"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 659868900,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:94)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor39.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 496100,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9591356900,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16537530500,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010638600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 219898900,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4999624000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7115043100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 354518900,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004346600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30975831500,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5014575900,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9792931000,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8502108600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 25,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 443536400,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5837157400,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 307097400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 29,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1335464700,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7024718500,
              "status": "passed"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1080278200,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8209321800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 35,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 462327800,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8643557300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 8a2d7472-3f76-4636-9eda-07347e0cd23b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:944)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/home/mycontent/MyContent.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 49,
                "value": "# And I click the continue button"
              }
            ],
            "line": 50,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@sanity"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyContentFirst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to navigate to Health channel page",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-channel-page",
        "after": [
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18115123800,
              "status": "passed"
            },
            "line": 59,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 405195800,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#  And User has pulse app"
              },
              {
                "line": 61,
                "value": "#  And I clicks on \"Content\" in app screen"
              }
            ],
            "line": 62,
            "name": "I clicks on \"Content\" in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "Content",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcons(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15013764400,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 830811100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 64,
                "value": "#   And I click the First Image in Health channel"
              },
              {
                "line": 65,
                "value": "#  Then I wait for 15 sec"
              }
            ],
            "line": 66,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 24500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6289572400,
              "status": "passed"
            },
            "line": 72,
            "name": "I read the Post count data in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.iReadThePostLikeCount()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5431426300,
              "status": "passed"
            },
            "line": 73,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5639502400,
              "status": "passed"
            },
            "line": 74,
            "name": "I read the Post cound after click the Like button",
            "match": {
              "location": "CustomerConnectSteps.iVerifyPostLikeCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5456111400,
              "status": "passed"
            },
            "line": 75,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 27300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5371412200,
              "status": "passed"
            },
            "line": 78,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6020774000,
              "status": "passed"
            },
            "line": 79,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 22100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5179651000,
              "status": "passed"
            },
            "line": 82,
            "name": "I read the Comment count in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostClick()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4621384200,
              "status": "passed"
            },
            "line": 83,
            "name": "I click the comment icon in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15220990700,
              "status": "passed"
            },
            "line": 84,
            "name": "I commented in the posts \"${Health.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${Health.topic.comment}",
                  "offset": 26
                }
              ],
              "location": "CustomerConnectSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5170635600,
              "status": "passed"
            },
            "line": 85,
            "name": "I read the Post count after click the comments button",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCount()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30228996300,
              "status": "passed"
            },
            "line": 89,
            "name": "I click on Covid-19  topic for details full view",
            "match": {
              "location": "CustomerConnectSteps.ClickFirstImagesIcons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14999893600,
              "status": "passed"
            },
            "line": 90,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000794000,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 94
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 96,
        "name": "Verify User should be able to Like the post- Full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post--full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 65400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5508832800,
              "status": "passed"
            },
            "line": 97,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5397870900,
              "status": "passed"
            },
            "line": 98,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12066848900,
              "status": "passed"
            },
            "line": 99,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify MyContent functionality on one pulse App",
    "description": "",
    "id": "verify-mycontent-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/home/mycontent/MyContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyContentFirst"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that No linked policies information message is displayed",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-no-linked-policies-information-message-is-displayed",
        "after": [
          {
            "result": {
              "duration": 30500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8822698700,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120800,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9092251100,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10015723600,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 317498500,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10020093900,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30753513300,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9246590600,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 517160400,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on \"My Policies\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "My Policies",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1870395200,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on Proceed button to accept the terms and conditions",
            "match": {
              "location": "MyPolicySteps.iClicksOnProceedButtonToAcceptTheTermsAndConditions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2208012700,
              "status": "passed"
            },
            "line": 19,
            "name": "User can see the list of linked policies",
            "match": {
              "location": "MyPolicySteps.userCanSeeTheListOfLinkedPolicies()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@OPUATRegressionSG"
          }
        ]
      }
    ],
    "name": "Verify that user can view his registered policies under My Policies",
    "description": "",
    "id": "verify-that-user-can-view-his-registered-policies-under-my-policies",
    "keyword": "Feature",
    "uri": "features/sg/home/mypolicies/MyPolicies.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@MyPolicies"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 32900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 26200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9408182800,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 108700,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9469095900,
              "status": "passed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11294621200,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 354173600,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10015772800,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30517460800,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14702985600,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 59200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4999218000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 746951400,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3681666000,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2438562700,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 30,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 27500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3002156400,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13518624200,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2344374800,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2364064300,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 31000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1279150200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 39,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1727197600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 41,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3542627500,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21475747900,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8018285200,
              "status": "passed"
            },
            "line": 49,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22831509800,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalsg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 7,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 8,
            "value": "#    When user enters credentials"
          },
          {
            "line": 9,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 10,
            "value": "#      | Password | Pas$1234      |"
          },
          {
            "line": 11,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 12,
            "value": "#    Then I wait for 40 sec"
          },
          {
            "line": 13,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 14,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 15,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 16,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          },
          {
            "line": 17,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 18,
            "value": "#    Then user navigate to account page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8966795200,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90300,
              "status": "passed"
            },
            "line": 22,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7676495500,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10461762400,
              "status": "passed"
            },
            "line": 24,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 26
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 364564700,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10010244500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30071495400,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9649479700,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5008941200,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 706450300,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3694754600,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3675919400,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2691543200,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 44200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4500451500,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9143660700,
              "status": "passed"
            },
            "line": 46,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4892988100,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 61400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3012245100,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4318096400,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3002997400,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3516151100,
              "status": "passed"
            },
            "line": 54,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8336052200,
              "status": "passed"
            },
            "line": 55,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8587556300,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9844364700,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3012256300,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 298107700,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify the following text \"Marketing Consent\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "Marketing Consent",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Marketing.Consent.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3539438600,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8296028300,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9066837200,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/sg/profile/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsSg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@Sanity1"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressioPH"
      },
      {
        "line": 1,
        "name": "@PhPersonalized"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 35800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9536336200,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7365013800,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1584700,
              "status": "passed"
            },
            "line": 8,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10488055400,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 289557000,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004809900,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32057836600,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14815567800,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 751385600,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to wealth screen",
            "match": {
              "location": "WealthSteps.iNavigateToWealthScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4416305600,
              "status": "passed"
            },
            "line": 19,
            "name": "I verify following wealth homepage options",
            "match": {
              "location": "WealthSteps.iVerifyFollowingWealthHomepageOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channel"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Wealth"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Care about your finances"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to see the wealth screen options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-wealth-screen-options",
        "after": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5350801000,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to wealth channel explore page",
            "match": {
              "location": "WealthSteps.iNavigateToWealthChannelExplorePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32641523300,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 29
              },
              {
                "comments": [
                  {
                    "line": 30,
                    "value": "# |Importance of Money Parenting |"
                  }
                ],
                "cells": [
                  "What should I as a Parent know?"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5626533800,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on \"Learn Investing Basics\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the story post Like, Share, Comment options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-story-post-like,-share,-comment-options",
        "after": [
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11464897700,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 59000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13982493300,
              "status": "passed"
            },
            "line": 43,
            "name": "I read the \"Learn Investing Basics\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6448692300,
              "status": "passed"
            },
            "line": 44,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5277822600,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify \"Learn Investing Basics\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5666532000,
              "status": "passed"
            },
            "line": 46,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5514777500,
              "status": "passed"
            },
            "line": 49,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6058400100,
              "status": "passed"
            },
            "line": 50,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 24300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5227149400,
              "status": "passed"
            },
            "line": 53,
            "name": "I read the \"Learn Investing Basics\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9344950800,
              "status": "passed"
            },
            "line": 54,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5889091100,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify \"Learn Investing Basics\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000080900,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on \"Learn Investing Basics\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010729900,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34381384900,
              "status": "passed"
            },
            "line": 62,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 92200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5544293400,
              "status": "passed"
            },
            "line": 67,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5533976600,
              "status": "passed"
            },
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 25500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6933056600,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10714081200,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 23017089400,
              "status": "passed"
            },
            "line": 75,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 28500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3706174700,
              "status": "passed"
            },
            "line": 78,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5465411500,
              "status": "passed"
            },
            "line": 79,
            "name": "I click on \"Learn Investing Basics\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5386236400,
              "status": "passed"
            },
            "line": 80,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@WealthChannelSG"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@05JulyTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 43800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9434825800,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16806726800,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 216304800,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2014674600,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 33200,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4868722100,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1564555500,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 34500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2266107200,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9880677100,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 269889600,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33720826100,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5012172600,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13970111800,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 19900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14178188700,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 32300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9025609900,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6847740900,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 31800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22277193600,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 33200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21848357500,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in OnePulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  }
]