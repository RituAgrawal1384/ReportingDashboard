[
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 105377900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 217984000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 161400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 41200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15327708700,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2360300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15143027800,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 259338000,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009611000,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96300,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4841602100,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2148877900,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 79900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2261954600,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10784723000,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 337721800,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5014544900,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30869950300,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14445971000,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify the Invalid Email id in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-invalid-email-id-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8041306900,
              "status": "passed"
            },
            "line": 26,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2015768900,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14244437900,
              "status": "passed"
            },
            "line": 28,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 221784700,
              "status": "passed"
            },
            "line": 29,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002832800,
              "status": "passed"
            },
            "line": 30,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4873511400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 32,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2015812000,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2296686500,
              "status": "passed"
            },
            "line": 34,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10373793100,
              "status": "passed"
            },
            "line": 35,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "t@gmai"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 37
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 226984400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "#    And I scroll down"
              }
            ],
            "line": 39,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 700392200,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "## need to check validation message"
              }
            ],
            "line": 41,
            "name": "verify invalid email message \"Email is required\"",
            "match": {
              "arguments": [
                {
                  "val": "Email is required",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 221813700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 42,
                "value": "#    Then verify invalid email message \"E-mail is invalid\""
              }
            ],
            "line": 43,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3590251300,
              "status": "passed"
            },
            "line": 44,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "t@gmai"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 694606000,
              "status": "passed"
            },
            "line": 46,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 862273600,
              "status": "passed"
            },
            "line": 47,
            "name": "verify invalid email message \"${email.invalid.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${email.invalid.text}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "Verify the User not registerd email in login screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-user-not-registerd-email-in-login-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5136900,
              "status": "passed"
            },
            "line": 50,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 199400,
              "status": "passed"
            },
            "line": 51,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "USER_NAME",
                  "taf-${RANDOM_NUMBER}@mailinator.com"
                ],
                "line": 52
              },
              {
                "cells": [
                  "USER_PASSWORD",
                  "Pas$1234"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7976409500,
              "status": "passed"
            },
            "line": 54,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15338995800,
              "status": "passed"
            },
            "line": 55,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 243319300,
              "status": "passed"
            },
            "line": 56,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009385900,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4904574400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 58,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 59,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002520300,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2298376000,
              "status": "passed"
            },
            "line": 61,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10472235700,
              "status": "passed"
            },
            "line": 62,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${USER_NAME}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Password",
                  "${USER_PASSWORD}"
                ],
                "line": 64
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4573824300,
              "status": "passed"
            },
            "line": 65,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 248999200,
              "status": "passed"
            },
            "line": 66,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1107258700,
              "status": "passed"
            },
            "line": 67,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 225187700,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on Forgot Password button",
            "match": {
              "location": "LoginSteps.clickForgotPasswordButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3057913100,
              "status": "passed"
            },
            "line": 69,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${USER_NAME}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 750630600,
              "status": "passed"
            },
            "line": 71,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1359816500,
              "status": "passed"
            },
            "line": 72,
            "name": "verify invalid email message \"${invalid.credential.message}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.credential.message}",
                  "offset": 30
                }
              ],
              "location": "LoginSteps.verifyInvalidEmailMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 75,
        "name": "User should be able to retrieve the reset password using forget password link",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;user-should-be-able-to-retrieve-the-reset-password-using-forget-password-link",
        "after": [
          {
            "result": {
              "duration": 51700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 111000,
              "status": "passed"
            },
            "line": 76,
            "name": "I assign \"${forgot.password.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${forgot.password.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3691643600,
              "status": "passed"
            },
            "line": 77,
            "name": "enter the email to request the new password",
            "match": {
              "location": "LoginSteps.enterForgotPasswordEmail(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 727726600,
              "status": "passed"
            },
            "line": 79,
            "name": "User clicks on Send button",
            "match": {
              "location": "LoginSteps.clickSendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 26587783200,
              "status": "passed"
            },
            "line": 80,
            "name": "I read the otp for emailid \"${PULSE_EMAIL}\" using mailsac api and store into a variable \"EMAIL_OTP\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 28
                },
                {
                  "val": "EMAIL_OTP",
                  "offset": 89
                }
              ],
              "location": "RegistrationSteps.readOTP(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5001885500,
              "status": "passed"
            },
            "line": 81,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1088558000,
              "status": "passed"
            },
            "line": 82,
            "name": "I enter \"${EMAIL_OTP}\" reset code",
            "match": {
              "arguments": [
                {
                  "val": "${EMAIL_OTP}",
                  "offset": 9
                }
              ],
              "location": "LoginSteps.enterResetOTP(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5011980900,
              "status": "passed"
            },
            "line": 83,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 121171900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 84,
                "value": "## password reset success message is not displaying in ios build"
              }
            ],
            "line": 85,
            "name": "Verify message: \"${password.reset.success.text}\" for Reset Password",
            "match": {
              "arguments": [
                {
                  "val": "${password.reset.success.text}",
                  "offset": 17
                }
              ],
              "location": "LoginSteps.verifyResetPasswordMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 87,
        "name": "Verify Account should be locked after entering more than 7 times incorrect passwords",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-account-should-be-locked-after-entering-more-than-7-times-incorrect-passwords",
        "after": [
          {
            "result": {
              "duration": 1596051200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 553200,
              "status": "passed"
            },
            "line": 88,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65500,
              "status": "passed"
            },
            "line": 89,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8044084900,
              "status": "passed"
            },
            "line": 90,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007216100,
              "status": "passed"
            },
            "line": 91,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14626113700,
              "status": "passed"
            },
            "line": 92,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218564900,
              "status": "passed"
            },
            "line": 93,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4999428400,
              "status": "passed"
            },
            "line": 94,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 119800,
              "status": "passed"
            },
            "line": 95,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008272500,
              "status": "passed"
            },
            "line": 96,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6137494200,
              "status": "passed"
            },
            "line": 97,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 98
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 101
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 349953400,
              "status": "passed"
            },
            "line": 102,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4865024400,
              "status": "passed"
            },
            "line": 103,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31413704700,
              "status": "passed"
            },
            "line": 104,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 65129013400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: ded65828-1b25-4254-abc0-267e0e7b285b\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/PulseLoginTest.feature:108)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 105,
                "value": "#    Then I wait for 10 sec"
              },
              {
                "line": 106,
                "value": "#    Then I click skip button"
              },
              {
                "line": 107,
                "value": "#    Then I wait for 5 sec"
              }
            ],
            "line": 108,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I enter invalid password on login screen and verify the error message",
            "match": {
              "location": "LoginSteps.verifyInvalidPasswordErrorMsg(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 120
              },
              {
                "cells": [
                  "Pas$123##${invalid.credential.message}"
                ],
                "line": 121
              },
              {
                "cells": [
                  "Pas$123##${account.locked.message}"
                ],
                "line": 122
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 144,
        "name": "Verify the Login Functionality using \"Continue with Facebook\"",
        "description": "",
        "id": "verify-login-functionality-on-one-pulse-app;verify-the-login-functionality-using-\"continue-with-facebook\"",
        "after": [
          {
            "result": {
              "duration": 46500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8120105400,
              "status": "passed"
            },
            "line": 145,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2015894000,
              "status": "passed"
            },
            "line": 146,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14259326100,
              "status": "passed"
            },
            "line": 147,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2018151800,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 245311900,
              "status": "passed"
            },
            "line": 149,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999248700,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1278344700,
              "status": "passed"
            },
            "line": 151,
            "name": "I navigate to pulse registration page and select the lang on toggle bar",
            "match": {
              "location": "RegistrationSteps.navigateToRegPageAndSelectTheLangUsingToggle()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 342138100,
              "status": "passed"
            },
            "line": 152,
            "name": "I click on connect with facebook button",
            "match": {
              "location": "RegistrationSteps.selectConnectWithFacebookBtn()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007921000,
              "status": "passed"
            },
            "line": 153,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2727776300,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the \"Email\" in Continue with Facebook",
            "match": {
              "arguments": [
                {
                  "val": "Email",
                  "offset": 13
                }
              ],
              "location": "LoginSteps.EnterFacebookLogin(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Emailid",
                  "${emailid.text}"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Password",
                  "${password.texts}"
                ],
                "line": 156
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9999881800,
              "status": "passed"
            },
            "line": 157,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13340110600,
              "status": "passed"
            },
            "line": 158,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9927000800,
              "status": "passed"
            },
            "line": 159,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify login functionality on One pulse App",
    "description": "",
    "id": "verify-login-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseLoginTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@onepulseLogins"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 30500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 32200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 675192500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 602500,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62500,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8127074000,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005756500,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14284852700,
              "status": "passed"
            },
            "line": 11,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2004797600,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 239196500,
              "status": "passed"
            },
            "line": 13,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2014036600,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 58900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 16,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2015695000,
              "status": "passed"
            },
            "line": 17,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7301927700,
              "status": "passed"
            },
            "line": 18,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 19
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 22
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 264852400,
              "status": "passed"
            },
            "line": 23,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2848969900,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30736154900,
              "status": "passed"
            },
            "line": 25,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000864200,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10517157500,
              "status": "passed"
            },
            "line": 27,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8056232400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 30,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5365545500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 32,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 354144100,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1972687400,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6282919800,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1022120600,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7910760100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 38,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 492207800,
              "status": "passed"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8305548700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: a5735b67-b36e-463b-b500-c31c668b035c\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/PulseRegistrationTest.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I answer as \"${option.yes.text}\" to \"Any Food allergies?\"",
            "match": {
              "arguments": [
                {
                  "val": "${option.yes.text}",
                  "offset": 13
                },
                {
                  "val": "Any Food allergies?",
                  "offset": 37
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on connect Later button",
            "match": {
              "location": "RegistrationSteps.clickOnConnectLaterBtn()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 48,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 49,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 50,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 51,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 53,
                "value": "#Specific for SG reg flow"
              }
            ],
            "line": 54,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 55,
                "value": "#And I click the continue button"
              }
            ],
            "line": 56,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "I click the sign out from pulse app",
            "match": {
              "location": "LoginSteps.Signout_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "user enters password credentials in sigin screen",
            "match": {
              "location": "LoginSteps.EnterPasswordRegister(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 63
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@regtst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 62400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 69,
        "name": "verify the field label on registration screen",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-field-label-on-registration-screen",
        "after": [
          {
            "result": {
              "duration": 45700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8369200400,
              "status": "passed"
            },
            "line": 70,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2012991300,
              "status": "passed"
            },
            "line": 71,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14474025500,
              "status": "passed"
            },
            "line": 72,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002602900,
              "status": "passed"
            },
            "line": 73,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 241838700,
              "status": "passed"
            },
            "line": 74,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003169100,
              "status": "passed"
            },
            "line": 75,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36300,
              "status": "passed"
            },
            "line": 76,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2013382600,
              "status": "passed"
            },
            "line": 77,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 770036700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 78,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 79,
            "name": "I verify following field label should be displayed on registration screen",
            "match": {
              "location": "RegistrationSteps.verifyRegistrationScreenFieldLabel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${firstname.label.text}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${lastname.label.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${email.text}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${password.text}"
                ],
                "line": 83
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 84,
            "value": "## below validation is not working in Android device"
          },
          {
            "line": 85,
            "value": "#      | ${country.text}         |"
          },
          {
            "line": 86,
            "value": "#      | ${language.text}        |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "verify the validation message for mandatory fields",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-for-mandatory-fields",
        "after": [
          {
            "result": {
              "duration": 36900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 221336900,
              "status": "passed"
            },
            "line": 90,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1360262000,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${firstname.mandatoryField.message}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "LastName",
                  "${lastname.mandatoryField.message}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Email",
                  "${email.mandatoryField.message}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 95
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "verify validation message when user enters Invalid password: Pulse@1 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;2",
        "after": [
          {
            "result": {
              "duration": 82900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 34000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2322148300,
              "status": "passed"
            },
            "line": 99,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse@1"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 355105200,
              "status": "passed"
            },
            "line": 101,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 780488300,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 113300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 58800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "verify validation message when user enters Invalid password: Pulse123 on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-validation-message-when-user-enters-invalid-password:-\u003cinvalid-password\u003e-on-registration-page;;3",
        "after": [
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1514138100,
              "status": "passed"
            },
            "line": 99,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "matchedColumns": [
              0
            ],
            "rows": [
              {
                "cells": [
                  "Password",
                  "Pulse123"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 199761400,
              "status": "passed"
            },
            "line": 101,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 784272800,
              "status": "passed"
            },
            "line": 102,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Password",
                  "${password.validation.message}"
                ],
                "line": 103
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@Registrations"
          },
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@sanityTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 60600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify the validation message when user enter already registered email id on registration page",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-validation-message-when-user-enter-already-registered-email-id-on-registration-page",
        "after": [
          {
            "result": {
              "duration": 40600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8316940100,
              "status": "passed"
            },
            "line": 111,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2005058500,
              "status": "passed"
            },
            "line": 112,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13706981700,
              "status": "passed"
            },
            "line": 113,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2003591300,
              "status": "passed"
            },
            "line": 114,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 219386100,
              "status": "passed"
            },
            "line": 115,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2012765100,
              "status": "passed"
            },
            "line": 116,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 117,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 118,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010782700,
              "status": "passed"
            },
            "line": 119,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7738036200,
              "status": "passed"
            },
            "line": 120,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 121
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Email",
                  "${login.email.id}"
                ],
                "line": 123
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 124
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 244209300,
              "status": "passed"
            },
            "line": 125,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1456094800,
              "status": "passed"
            },
            "line": 126,
            "name": "I verify the validation error message is displayed for following field on registration page",
            "match": {
              "location": "RegistrationSteps.verifyValidationMessage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Email",
                  "${user.exist.text}"
                ],
                "line": 127
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "Verify the mobile number screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-mobile-number-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 39100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 384900,
              "status": "passed"
            },
            "line": 131,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38400,
              "status": "passed"
            },
            "line": 132,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8230121900,
              "status": "passed"
            },
            "line": 133,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2007745200,
              "status": "passed"
            },
            "line": 134,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12916640200,
              "status": "passed"
            },
            "line": 135,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2014803800,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 275095300,
              "status": "passed"
            },
            "line": 137,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2004251600,
              "status": "passed"
            },
            "line": 138,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 139,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 140,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010630200,
              "status": "passed"
            },
            "line": 141,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7738906000,
              "status": "passed"
            },
            "line": 142,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "NewAutomation"
                ],
                "line": 143
              },
              {
                "cells": [
                  "LastName",
                  "NewAutomation"
                ],
                "line": 144
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 146
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 291352200,
              "status": "passed"
            },
            "line": 147,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4535505900,
              "status": "passed"
            },
            "line": 148,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30936960800,
              "status": "passed"
            },
            "line": 149,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10010611400,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 127058200,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify the country code should be displayed correctly on phone number screen",
            "match": {
              "location": "RegistrationSteps.verifyCountryCode()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10507461300,
              "status": "passed"
            },
            "line": 152,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "917670"
                ],
                "line": 153
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 858644300,
              "status": "passed"
            },
            "line": 154,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999424300,
              "status": "passed"
            },
            "line": 155,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 192989500,
              "status": "passed"
            },
            "line": 156,
            "name": "verify Again invalid Mobile message \"${invalid.mobile.text}\"",
            "match": {
              "arguments": [
                {
                  "val": "${invalid.mobile.text}",
                  "offset": 37
                }
              ],
              "location": "LoginSteps.verifyAgainInvalidMobilelMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 158,
            "value": "#Not adding to PH regression as the reg screen order keeps changing for the LBU"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 30200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "Verify the Registration screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-registration-screen-validation-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 607578500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11095570300,
              "status": "passed"
            },
            "line": 160,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "${registration.mobile.number}"
                ],
                "line": 161
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1007813500,
              "status": "passed"
            },
            "line": 162,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 875055800,
              "status": "passed"
            },
            "line": 163,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11784668400,
              "error_message": "java.lang.AssertionError: ${wellness.goal.alert.text} expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertTrue(Assert.java:42)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.verifyInvalidMsg(RegistrationSteps.java:384)\r\n\tat ✽.Then verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen(features/PulseRegistrationTest.feature:164)\r\n",
              "status": "failed"
            },
            "line": 164,
            "name": "verify validation message \"${wellness.goal.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${wellness.goal.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "verify validation message \"${dob.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${dob.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 173,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "verify validation message \"${gender.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${gender.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "verify BMI validation message \"${bmi.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${bmi.alert.text}",
                  "offset": 31
                }
              ],
              "location": "RegistrationSteps.verifyBMIMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "verify validation message \"${activity.level.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${activity.level.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "I wait for 1 sec",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 188,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "verify validation message \"${diet.preference.alert.text}\" on registration workflow screen",
            "match": {
              "arguments": [
                {
                  "val": "${diet.preference.alert.text}",
                  "offset": 27
                }
              ],
              "location": "RegistrationSteps.verifyInvalidMsg(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 273600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 144600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 192,
        "name": "Verify the resend OTP functionality on Enter OTP Screen using \"Continue with Email\"",
        "description": "",
        "id": "verify-registration-functionality-on-one-pulse-app;verify-the-resend-otp-functionality-on-enter-otp-screen-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 305000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 240700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 289200,
              "status": "passed"
            },
            "line": 193,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35200,
              "status": "passed"
            },
            "line": 194,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8240909900,
              "status": "passed"
            },
            "line": 195,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2007244400,
              "status": "passed"
            },
            "line": 196,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13695049100,
              "status": "passed"
            },
            "line": 197,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000786900,
              "status": "passed"
            },
            "line": 198,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 238160700,
              "status": "passed"
            },
            "line": 199,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2002169100,
              "status": "passed"
            },
            "line": 200,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 61100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 201,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 202,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2008251600,
              "status": "passed"
            },
            "line": 203,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6681030900,
              "status": "passed"
            },
            "line": 204,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 205
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 206
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 207
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 208
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 347740900,
              "status": "passed"
            },
            "line": 209,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4708853300,
              "status": "passed"
            },
            "line": 210,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 90000996200,
              "status": "passed"
            },
            "line": 211,
            "name": "I wait for 90 sec",
            "match": {
              "arguments": [
                {
                  "val": "90",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3575745500,
              "status": "passed"
            },
            "line": 212,
            "name": "I click the Resend button in OTP screen",
            "match": {
              "location": "RegistrationSteps.ClickResendButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30715562300,
              "status": "passed"
            },
            "line": 213,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012141300,
              "status": "passed"
            },
            "line": 214,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8494437300,
              "status": "passed"
            },
            "line": 215,
            "name": "I verify enter otp screen is not displayed",
            "match": {
              "location": "RegistrationSteps.ValidateEnterOtpScreen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 191,
            "name": "@otpreset_tst"
          }
        ]
      }
    ],
    "name": "Verify registration functionality on one pulse App",
    "description": "",
    "id": "verify-registration-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/PulseRegistrationTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Registrations"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanityTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 53100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 69200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8110479600,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110800,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.edit.profile}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 55
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16657341200,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 209075600,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000385200,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4856866900,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 82300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3618119100,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10348696300,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.edit}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 260298200,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4996308600,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29199284800,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14340278300,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5016226300,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 87000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 76300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to navigate to Edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 68700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12442750900,
              "status": "passed"
            },
            "line": 26,
            "name": "user navigate to account page",
            "match": {
              "location": "LoginSteps.userNavigateToAccountPage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4711876000,
              "status": "passed"
            },
            "line": 27,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4992962300,
              "status": "passed"
            },
            "line": 28,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 82800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 48500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify User should be able to change the profile picture in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-change-the-profile-picture-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 36500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 22143545700,
              "status": "passed"
            },
            "line": 31,
            "name": "I give manage profile camera permission",
            "match": {
              "location": "EditProfileSteps.iGiveCameraPermission()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9757532500,
              "status": "passed"
            },
            "line": 32,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 52300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify the email,country code and COR fields are non-editable in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-email,country-code-and-cor-fields-are-non-editable-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 30800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1646134600,
              "status": "passed"
            },
            "line": 35,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 713590800,
              "status": "passed"
            },
            "line": 36,
            "name": "verify country code field is non-editable and country code is \"${country.code}\"",
            "match": {
              "arguments": [
                {
                  "val": "${country.code}",
                  "offset": 63
                }
              ],
              "location": "EditProfileSteps.verifyNonEditableCountryCodeField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 548105200,
              "status": "passed"
            },
            "line": 37,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify user can able to change the details in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-change-the-details-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 440600,
              "status": "passed"
            },
            "line": 40,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45400,
              "status": "passed"
            },
            "line": 41,
            "name": "I assign value to following variables",
            "match": {
              "location": "ConfigvariableSteps.assignValueToVariables(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "First Name",
                  "Automation-${RANDOM_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Last Name",
                  "Testing-${RANDOM_NUMBER}"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3243657200,
              "status": "passed"
            },
            "line": 44,
            "name": "I update following profile details in edit profile screen",
            "match": {
              "location": "EditProfileSteps.updateUserProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 46
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12169754400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "#      | PhoneNumber | 81069586                    |"
              },
              {
                "line": 48,
                "value": "#      | Address     | Singapore                   |"
              },
              {
                "line": 49,
                "value": "#      | PostalCode  | 576612                      |"
              },
              {
                "line": 50,
                "value": "#      | DOB         | 13-January-2003             |"
              }
            ],
            "line": 51,
            "name": "I click on update button in edit profile screen",
            "match": {
              "location": "EditProfileSteps.clickOnUpdateBtn()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 53,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 54,
        "name": "Verify Details updated during pulse profile registration should be reflected in edit profile screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-details-updated-during-pulse-profile-registration-should-be-reflected-in-edit-profile-screen",
        "after": [
          {
            "result": {
              "duration": 1072530900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7752778500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d410bb25-abbb-47e8-9c52-d244fc19e6b1\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027years\u0027)]/following::android.view.ViewGroup[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.clickeditProfileLink(PulseManageProfileScreen.java:181)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.clickEditProfileLink(EditProfileSteps.java:37)\r\n\tat ✽.Given user click on Edit profile link(features/editProfile/PulseEditProfileTest.feature:55)\r\n",
              "status": "failed"
            },
            "line": 55,
            "name": "user click on Edit profile link",
            "match": {
              "location": "EditProfileSteps.clickEditProfileLink()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 56,
            "name": "I verify following values in edit profile screen",
            "match": {
              "location": "EditProfileSteps.verifyFieldValue(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 60
              },
              {
                "cells": [
                  "PhoneNumber",
                  "${pulse.edit.number}"
                ],
                "line": 61
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 63,
            "value": "##defect - PCAONEPULSE-22930"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 64,
        "name": "verify the user details should be correctly on babylon screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;verify-the-user-details-should-be-correctly-on-babylon-screen",
        "after": [
          {
            "result": {
              "duration": 852211800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4279543900,
              "status": "passed"
            },
            "line": 65,
            "name": "I navigate to Home page from edit profile screen",
            "match": {
              "location": "EditProfileSteps.navigateToHomeScreenFromEditProfile()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22545659100,
              "status": "passed"
            },
            "line": 66,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005977400,
              "status": "passed"
            },
            "line": 67,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 657125200,
              "error_message": "java.lang.AssertionError: actual value is Automation-43829061628 expected [Automation-69016079718] but found [Automation-43829061628]\r\n\tat org.testng.Assert.fail(Assert.java:94)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:513)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:135)\r\n\tat org.testng.Assert.assertEquals(Assert.java:116)\r\n\tat org.testng.Assert.assertEquals(Assert.java:190)\r\n\tat com.onepulse.app.screens.PulseManageProfileScreen.verifyDefaultValuesOnBabylonRegPage(PulseManageProfileScreen.java:518)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(EditProfileSteps.java:156)\r\n\tat ✽.Then I verify the default values in babylon registration page is updated as below(features/editProfile/PulseEditProfileTest.feature:68)\r\n",
              "status": "failed"
            },
            "line": 68,
            "name": "I verify the default values in babylon registration page is updated as below",
            "match": {
              "location": "EditProfileSteps.verifyDefaultValuesOnBabylonRegPage(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Gender",
                  "${pulse.edit.gender}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "FirstName",
                  "${First Name}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "LastName",
                  "${Last Name}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Email",
                  "${onepulse.login.edit.profile}"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "verify email field is non-editable",
            "match": {
              "location": "EditProfileSteps.verifyNonEditableEmailField()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 74,
            "name": "verify country of Residence is \"${country.name}\" and non-editable",
            "match": {
              "arguments": [
                {
                  "val": "${country.name}",
                  "offset": 32
                }
              ],
              "location": "EditProfileSteps.verifyCORField(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "navigate back to health screen",
        "description": "",
        "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app;navigate-back-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 76700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2978089900,
              "status": "passed"
            },
            "line": 77,
            "name": "I navigate to health page from babylon registration screen",
            "match": {
              "location": "BabylonSteps.navigateBackToHealthScreenFromBabylonReg()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5009329700,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Edit Profile functionality on Pulse Health \u0026 Wealth app",
    "description": "",
    "id": "verify-edit-profile-functionality-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/editProfile/PulseEditProfileTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@PulseEditProfile"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 35900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1571902900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 485600,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48700,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8445203400,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2015098100,
              "status": "passed"
            },
            "line": 8,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13452445000,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009312200,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 230800400,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2019818500,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 51900,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2017549300,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7490263300,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 260630900,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4621381900,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30887538600,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2010808800,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64653934500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c7e5f0e3-d43d-4c8a-9180-f1ee0caaad15\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/BabylonHRA_Registration.feature:24)\r\n",
              "status": "failed"
            },
            "line": 24,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 26,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "User should be able to Register for Babylon HRA",
        "description": "",
        "id": "verify-the-babylon-registration-via-hra-journey;user-should-be-able-to-register-for-babylon-hra",
        "after": [
          {
            "result": {
              "duration": 1127256400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28891272900,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 76392315600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: c7e5f0e3-d43d-4c8a-9180-f1ee0caaad15\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Continue\u0027]/preceding::android.view.ViewGroup[1]/android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.babylon.BabylonRegistrationScreen.navigateToBabylonHealthAssessment(BabylonRegistrationScreen.java:253)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition(BabylonSteps.java:319)\r\n\tat ✽.And I navigate to Babylon health Assessment and Accept TermsAndCondition(features/health/BabylonHRA_Registration.feature:30)\r\n",
              "status": "failed"
            },
            "line": 30,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I confirm the registration",
            "match": {
              "location": "BabylonSteps.clickOnCofirmButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on Babylon Health Assessment Get Started button",
            "match": {
              "location": "BabylonSteps.healthAssessmentGetStarted()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 33,
            "name": "I verify following options are present for assessment",
            "match": {
              "location": "BabylonSteps.verifyAssessmentOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Full Assessment"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Nutrition"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Activity"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Mood"
                ],
                "line": 37
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify the Babylon Registration via HRA journey",
    "description": "",
    "id": "verify-the-babylon-registration-via-hra-journey",
    "keyword": "Feature",
    "uri": "features/health/BabylonHRA_Registration.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_registration"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "# This feature will fail due to the defect PCAONEPULSE-21990"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 31600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8074165300,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 105200,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15980658300,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 219653200,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2001713100,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5331189700,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3472311600,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10345154200,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 227018700,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5019852400,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31609070200,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14570613800,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "User should be able to locate Hospitals using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-hospitals-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14239812700,
              "status": "passed"
            },
            "line": 25,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15197930100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#  This step may fail due to Location locator - the xpath has updated according to MyEnv in PCAONEPULSE-19412, which is passed during execution"
              }
            ],
            "line": 27,
            "name": "I clicks on Location button",
            "match": {
              "location": "LocationSteps.iClicksOnLocationButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13044917700,
              "status": "passed"
            },
            "line": 28,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1227066700,
              "status": "passed"
            },
            "line": 29,
            "name": "I clicks on \"Hospitals\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3730649000,
              "status": "passed"
            },
            "line": 30,
            "name": "User can see the list of \"Hospitals\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13588817200,
              "status": "passed"
            },
            "line": 31,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Hospitals\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 33600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "User can see details of listed hospitals in detail",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-details-of-listed-hospitals-in-detail",
        "after": [
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18922317100,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1876233800,
              "status": "passed"
            },
            "line": 35,
            "name": "I can see the \"Hospital\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Hospital",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 35600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "User can see the details in speciality tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-speciality-tab",
        "after": [
          {
            "result": {
              "duration": 27400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 523814800,
              "status": "passed"
            },
            "line": 38,
            "name": "I clicks on \"Speciality\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Speciality",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1900289500,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Speciality screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheSpecialityScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 54000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "User can see the details in doctor\u0027s tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-doctor\u0027s-tab",
        "after": [
          {
            "result": {
              "duration": 29400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 539779000,
              "status": "passed"
            },
            "line": 42,
            "name": "I clicks on \"Doctors\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Doctors",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2346014300,
              "status": "passed"
            },
            "line": 43,
            "name": "I verify the Doctors screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheDoctorsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 26300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 45,
        "name": "User can see the details in rooms  tab",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-see-the-details-in-rooms--tab",
        "after": [
          {
            "result": {
              "duration": 46500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 543551000,
              "status": "passed"
            },
            "line": 46,
            "name": "I clicks on \"Rooms\" tab",
            "match": {
              "arguments": [
                {
                  "val": "Rooms",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnTab(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3168494200,
              "status": "passed"
            },
            "line": 47,
            "name": "I verify the Rooms screen is displayed",
            "match": {
              "location": "LocationSteps.iVerifyTheRoomsScreenIsDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 49,
        "name": "User can navigate out of the hospital details screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-out-of-the-hospital-details-screen",
        "after": [
          {
            "result": {
              "duration": 28800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1003596000,
              "status": "passed"
            },
            "line": 50,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "User should be able to locate cli using PruShoppe location",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-should-be-able-to-locate-cli-using-prushoppe-location",
        "after": [
          {
            "result": {
              "duration": 31500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3489686700,
              "status": "passed"
            },
            "line": 54,
            "name": "I clicks on back button in \"Hospitals\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Hospitals",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12787993400,
              "status": "passed"
            },
            "line": 55,
            "name": "I clicks on Search here text field",
            "match": {
              "location": "LocationSteps.iClicksOnSearchHereTextField()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2684598900,
              "status": "passed"
            },
            "line": 56,
            "name": "I clicks on \"Clinics\" under Pulse Search",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 13
                }
              ],
              "location": "LocationSteps.iClicksOnUnderPulseSearch(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2435472800,
              "status": "passed"
            },
            "line": 57,
            "name": "User can see the list of \"Clinics\" near by to user\u0027s current location",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 26
                }
              ],
              "location": "LocationSteps.userCanSeeTheListOfNearByToUserSCurrentLocation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "User can verify the clinic page",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-verify-the-clinic-page",
        "after": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10579237100,
              "status": "passed"
            },
            "line": 60,
            "name": "User can see that Call, Navigate and See Details links are displayed under \"Clinics\" search results",
            "match": {
              "arguments": [
                {
                  "val": "Clinics",
                  "offset": 76
                }
              ],
              "location": "LocationSteps.userCanSeeThatCallNavigateAndSeeDetailsLinksAreDisplayedUnderSearchResults(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "User can view listed clinic details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-details",
        "after": [
          {
            "result": {
              "duration": 45500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18239257900,
              "status": "passed"
            },
            "line": 63,
            "name": "I clicks on See Details button on First result",
            "match": {
              "location": "LocationSteps.iClicksOnSeeDetailsButtonOnFirstResult()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "User can view listed clinic info",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info",
        "after": [
          {
            "result": {
              "duration": 28600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1881066500,
              "status": "passed"
            },
            "line": 66,
            "name": "I can see the \"Clinic\" Information screen with Navigate and Call Now buttons",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 15
                }
              ],
              "location": "LocationSteps.iCanSeeTheInformationScreenWithNavigateAndCallNowButtons(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "User can view listed clinic info details",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-view-listed-clinic-info-details",
        "after": [
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 412628500,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on back button in See Details screen",
            "match": {
              "location": "LocationSteps.iClicksOnBackButtonInSeeDetailsScreen()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "User can navigate back to clinics screen",
        "description": "",
        "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature;user-can-navigate-back-to-clinics-screen",
        "after": [
          {
            "result": {
              "duration": 29600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2150987600,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on back button in \"Clinic\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Clinic",
                  "offset": 28
                }
              ],
              "location": "LocationSteps.iClicksOnBackButtonInScreen(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify that user can locate near by Hospitals,clinics using PruShoppe Location feature",
    "description": "",
    "id": "verify-that-user-can-locate-near-by-hospitals,clinics-using-prushoppe-location-feature",
    "keyword": "Feature",
    "uri": "features/health/Hospital_Clinic_Locator.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@StoreLocator"
      },
      {
        "line": 1,
        "name": "@iOSdropDownTest"
      },
      {
        "line": 1,
        "name": "@18JunTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@18MayFailures"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 40400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 716878000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 487800,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42000,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8135527400,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16629922600,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006895300,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 243410100,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2007613300,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48300,
              "status": "passed"
            },
            "line": 13,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7075534800,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "medicine"
                ],
                "line": 15
              },
              {
                "cells": [
                  "LastName",
                  "reminder"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 273521000,
              "status": "passed"
            },
            "line": 19,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4751834500,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30928853500,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011120700,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64465776500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d557f08d-4162-434d-92ea-aeaf65714592\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/health/MedicineReminder.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 28,
        "name": "Verify User should be able to navigate to medical reminder page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-medical-reminder-page",
        "after": [
          {
            "result": {
              "duration": 59300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16819343100,
              "status": "passed"
            },
            "line": 29,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14812181300,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009073500,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69442361000,
              "status": "passed"
            },
            "line": 32,
            "name": "I clicks on click here icon in medical Reminder",
            "match": {
              "location": "DieticianSteps.ClickMedicalRemainder()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009274100,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "verify the static text on medicine reminder screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-the-static-text-on-medicine-reminder-screen",
        "after": [
          {
            "result": {
              "duration": 34700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1607639300,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.medicine.text}"
                ],
                "line": 37
              },
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${track.medicine.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${important.dose.text}"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 44700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "click on add reminder button",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;click-on-add-reminder-button",
        "after": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 404982000,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${add.new.reminder}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.new.reminder}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2009886000,
              "status": "passed"
            },
            "line": 44,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "verify add medicine screen is launched and user can enter the required info on medical info screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-launched-and-user-can-enter-the-required-info-on-medical-info-screen",
        "after": [
          {
            "result": {
              "duration": 29600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 568985900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 47,
                "value": "##defect PCAONEPULSE-20944"
              }
            ],
            "line": 48,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 49,
                    "value": "#      | ${add.medicine.text} |"
                  }
                ],
                "cells": [
                  "${medicine.info.field}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${schedule.field}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${more.setting.field}"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126000,
              "status": "passed"
            },
            "line": 53,
            "name": "I assign \"Paracetamol\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "Paracetamol",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 36
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7420468000,
              "status": "passed"
            },
            "line": 54,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 56
              },
              {
                "cells": [
                  "Quantity",
                  "2"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1357546600,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 85200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "verify user navigated to schedule screen and user can enter the required info",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-navigated-to-schedule-screen-and-user-can-enter-the-required-info",
        "after": [
          {
            "result": {
              "duration": 90900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1909390400,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${frequency.text}"
                ],
                "line": 62
              },
              {
                "cells": [
                  "${dosage.timing.text}"
                ],
                "line": 63
              },
              {
                "cells": [
                  "${start.date.text}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${end.date.text}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${dose.intake.text}"
                ],
                "line": 66
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104233800,
              "status": "passed"
            },
            "line": 67,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Once"
                ],
                "line": 68
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1011382600,
              "status": "passed"
            },
            "line": 69,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1936923600,
              "status": "passed"
            },
            "line": 70,
            "name": "I clicks on \"${before.meal.text}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${before.meal.text}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 469979900,
              "status": "passed"
            },
            "line": 71,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able to navigate to More Setting page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-more-setting-page",
        "after": [
          {
            "result": {
              "duration": 1081484100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2006020800,
              "status": "passed"
            },
            "line": 74,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18081878800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d557f08d-4162-434d-92ea-aeaf65714592\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027What are you taking this medication for?\u0027]/following::android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.enterDetailsInAddMedScreen(PulseHealthScreen.java:395)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MedicineReminderSteps.enterInfoInAddMedicineScreen(MedicineReminderSteps.java:30)\r\n\tat ✽.And I enter following details in add medicine screen(features/health/MedicineReminder.feature:75)\r\n",
              "status": "failed"
            },
            "line": 75,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "fever"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 77
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 79,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicine_Info} added successfully!"
                ],
                "line": 80
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 81,
            "value": "#      | ${add.another.med}                   |"
          },
          {
            "line": 82,
            "value": "#      | ${notNow.text}                       |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 44500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 84,
        "name": "verify Add medicine screen is displayed when user click on add new reminder on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-add-medicine-screen-is-displayed-when-user-click-on-add-new-reminder-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 763297200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 103379666200,
              "status": "passed"
            },
            "line": 85,
            "name": "I clicks on \"${add.another.med}\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "${add.another.med}",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145600,
              "status": "passed"
            },
            "line": 86,
            "name": "I assign \"cold\" to variable \"Medicine_Info\"",
            "match": {
              "arguments": [
                {
                  "val": "cold",
                  "offset": 10
                },
                {
                  "val": "Medicine_Info",
                  "offset": 29
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18808392000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d557f08d-4162-434d-92ea-aeaf65714592\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Medicine Info\u0027]/following::android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.enterDetailsInAddMedScreen(PulseHealthScreen.java:369)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MedicineReminderSteps.enterInfoInAddMedicineScreen(MedicineReminderSteps.java:30)\r\n\tat ✽.And I enter following details in add medicine screen(features/health/MedicineReminder.feature:87)\r\n",
              "status": "failed"
            },
            "line": 87,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medicine Info",
                  "${Medicine_Info}"
                ],
                "line": 88
              },
              {
                "cells": [
                  "Unit",
                  "Tablet (unit)"
                ],
                "line": 89
              },
              {
                "cells": [
                  "Quantity",
                  "5"
                ],
                "line": 90
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Frequency",
                  "Daily"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I clicks on Timing in Add medcine screen",
            "match": {
              "location": "DieticianSteps.clickTiming_Icon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "I clicks on \"After meal\" in app screens",
            "match": {
              "arguments": [
                {
                  "val": "After meal",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.clickDietician(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I clicks on Next icon in app screens",
            "match": {
              "location": "DieticianSteps.clickNextIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "I enter following details in add medicine screen",
            "match": {
              "location": "MedicineReminderSteps.enterInfoInAddMedicineScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medication For",
                  "Cold"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Medicine Stock",
                  "5"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 100,
            "name": "I clicks the Done button in Add medicine screen",
            "match": {
              "location": "DieticianSteps.ClickDoneButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 102,
        "name": "verify medicine reminder home screen is displayed when user click on not now button on success popup",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-medicine-reminder-home-screen-is-displayed-when-user-click-on-not-now-button-on-success-popup",
        "after": [
          {
            "result": {
              "duration": 913506500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 38853570400,
              "status": "passed"
            },
            "line": 103,
            "name": "I clicks on Not now icon in app screen",
            "match": {
              "location": "DieticianSteps.clickNotNowButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8538885600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tMedicine Reminder text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/health/MedicineReminder.feature:104)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 104,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 105
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 107,
        "name": "navigate to health screen",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;navigate-to-health-screen",
        "after": [
          {
            "result": {
              "duration": 955313400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8169477100,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d557f08d-4162-434d-92ea-aeaf65714592\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\u0027Medicine Reminder\u0027)]/preceding::android.widget.ImageView[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.DieticianScreen.SelectBack_Icon(DieticianScreen.java:424)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.DieticianSteps.Back_MedicalRemainder(DieticianSteps.java:197)\r\n\tat ✽.And I click the Back button in medical remainder(features/health/MedicineReminder.feature:108)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 108,
            "name": "I click the Back button in medical remainder",
            "match": {
              "location": "DieticianSteps.Back_MedicalRemainder()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 33400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 110,
        "name": "Verify User should be able to navigate to calendar page",
        "description": "",
        "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-calendar-page",
        "after": [
          {
            "result": {
              "duration": 718789000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 64500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2004116900,
              "status": "passed"
            },
            "line": 111,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4542940500,
              "status": "passed"
            },
            "line": 112,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22041698500,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d557f08d-4162-434d-92ea-aeaf65714592\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Click Here\u0027]//following::android.view.ViewGroup[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseHealthScreen.clickCalendarTile(PulseHealthScreen.java:295)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.LocationSteps.iClicksOnCalendarButton(LocationSteps.java:96)\r\n\tat ✽.Then I click on Calendar tile(features/health/MedicineReminder.feature:113)\r\n",
              "status": "failed"
            },
            "line": 113,
            "name": "I click on Calendar tile",
            "match": {
              "location": "LocationSteps.iClicksOnCalendarButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 114,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Medicalremainder.text}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${Medicine_Info}"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Medicine Reminder Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-medicine-reminder-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/health/MedicineReminder.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MedicineReminder"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 27700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8604000300,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 126500,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14946565700,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 217135700,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2010858900,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4840109700,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 26600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3551111100,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10357242900,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 252898400,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013618500,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30349291700,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14448539400,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 43400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 26200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2011734800,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21609389300,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013262900,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1725638800,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8534862400,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6122619100,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 20400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8548652100,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12770337300,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEvent"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 38500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 49000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8583845000,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17073817400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 7,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 227970300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3013857400,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4830001500,
              "status": "passed"
            },
            "line": 11,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 72600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 13,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 47300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 605200,
              "status": "passed"
            },
            "line": 14,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3642689200,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10518805700,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 244000500,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012298400,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31062619400,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14161616400,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to navigate to Health page",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-page",
        "after": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2008159600,
              "status": "passed"
            },
            "line": 25,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24188154200,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to Health Content screen",
            "match": {
              "location": "CustomerConnectSteps.iNavigateToWealthScreenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8003885100,
              "status": "passed"
            },
            "line": 27,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1013462300,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Health Channels"
                ],
                "line": 29
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18332193300,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Category"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Like"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#  Scenario: Verify User should be able to Like the post"
          },
          {
            "line": 37,
            "value": "#    And I read the \"Brisk Walking\" post like count"
          },
          {
            "line": 38,
            "value": "#    And I Like the post"
          },
          {
            "line": 39,
            "value": "#    Then I verify \"Brisk Walking\" post like count is increased"
          },
          {
            "line": 40,
            "value": "#    And I Like the post"
          },
          {
            "line": 42,
            "value": "#  Scenario: Verify User should be able to Share the post"
          },
          {
            "line": 43,
            "value": "#    And I share the post"
          },
          {
            "line": 44,
            "value": "#    Then I Verify the share with friends popup"
          },
          {
            "line": 46,
            "value": "#  Scenario: Verify User should be able to Comment the post"
          },
          {
            "line": 47,
            "value": "#    And I read the \"Health Channels\" post comment count"
          },
          {
            "line": 48,
            "value": "#    And I commented in the post \"${wealth.topic.comment}\""
          },
          {
            "line": 49,
            "value": "#    Then I verify \"Health Channels\" post comment count is increased"
          },
          {
            "line": 52,
            "value": "#  Scenario: Verify User should be able to view the story post"
          },
          {
            "line": 53,
            "value": "#    Then I click on \"Brisk Walking\" wealth channel topic"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 202000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7947772500,
              "status": "passed"
            },
            "line": 56,
            "name": "I click on \"Health Channels\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Health Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10001837500,
              "status": "passed"
            },
            "line": 57,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 59,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 26900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13339428100,
              "status": "passed"
            },
            "line": 60,
            "name": "I verify the following texts \"My Health Content\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My Health Content",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 61
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 62
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 37700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5501608300,
              "status": "passed"
            },
            "line": 66,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5591923700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "##Defect#PCAONEPULSE-22541"
              }
            ],
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5694338100,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11312322800,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User can navigate to Health homepage",
        "description": "",
        "id": "verify-my-health-content-functionality-on-one-pulse-app;verify-user-can-navigate-to-health-homepage",
        "after": [
          {
            "result": {
              "duration": 29000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4558280200,
              "status": "passed"
            },
            "line": 75,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify My Health Content functionality on One Pulse App",
    "description": "",
    "id": "verify-my-health-content-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/MyHealthContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@HealthChannel"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 43000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to register on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;user-should-be-able-to-register-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 644514000,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1168500,
              "status": "passed"
            },
            "line": 6,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 95300,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9405961400,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2001189600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14478520100,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005699600,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 222758700,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003096800,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34100,
              "status": "passed"
            },
            "line": 14,
            "name": "I navigate to pulse registration page and select the lang on toggle bar then click on continue with email button",
            "match": {
              "location": "RegistrationSteps.navigateToRegistrationPageAndChangeTheLang()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2009442100,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8151538300,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "testAutomation"
                ],
                "line": 17
              },
              {
                "cells": [
                  "LastName",
                  "testAutomation"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 20
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 299910600,
              "status": "passed"
            },
            "line": 21,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4465815000,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for otp screen after clicking on signup button",
            "match": {
              "location": "RegistrationSteps.verifyOTPScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30914036800,
              "status": "passed"
            },
            "line": 23,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999638000,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 63294448000,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b13c34ca-74e3-4a07-a5d9-7556ad6b88d5\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/home/NotificationCenter.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 4,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 30,
        "name": "Navigate to notification screen via home screen",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;navigate-to-notification-screen-via-home-screen",
        "after": [
          {
            "result": {
              "duration": 42200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17632320300,
              "status": "passed"
            },
            "line": 31,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 303616800,
              "status": "passed"
            },
            "line": 32,
            "name": "I navigate to notification screen from home page",
            "match": {
              "location": "ManageProfileSteps.navigateToNotificationScreenFromHomePage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2012167900,
              "status": "passed"
            },
            "line": 33,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 29,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 29,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 508720900,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${notification.msg}"
                ],
                "line": 38
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@OPUATRegressionMY"
          },
          {
            "line": 35,
            "name": "@NotificationCenter_my"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 39,
            "value": "#    And User verify following dynamic texts are displayed in My Notification screen"
          },
          {
            "line": 40,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Then I navigate back to home screen from Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;then-i-navigate-back-to-home-screen-from-notification-center",
        "after": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 149309100,
              "status": "passed"
            },
            "line": 44,
            "name": "I click on back button on notification screen to navigate to home screen",
            "match": {
              "location": "ManageProfileSteps.clickBackButtonInNotificationScreenViaHome()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 46,
        "name": "Verify User should be able navigate to Notification Center via My account",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center-via-my-account",
        "after": [
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2009361500,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8670303100,
              "status": "passed"
            },
            "line": 48,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 30600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify User should be able to see the Notification screen texts",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-notification-screen-texts",
        "after": [
          {
            "result": {
              "duration": 31300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1590662200,
              "status": "passed"
            },
            "line": 51,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 54,
            "value": "#      | ${completeprofile.notification} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 29800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to login using already registered credentials",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-already-registered-credentials",
        "after": [
          {
            "result": {
              "duration": 32500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9809847500,
              "status": "passed"
            },
            "line": 58,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15224682500,
              "status": "passed"
            },
            "line": 59,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 304591400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#    And I assign \"pulse67309064615@mailsac.com\" to variable \"PULSE_EMAIL\""
              }
            ],
            "line": 61,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3003839300,
              "status": "passed"
            },
            "line": 62,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4865495400,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3598377400,
              "status": "passed"
            },
            "line": 64,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9815664800,
              "status": "passed"
            },
            "line": 65,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 67
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 286094500,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2011398700,
              "status": "passed"
            },
            "line": 69,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31432908400,
              "status": "passed"
            },
            "line": 70,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14364765800,
              "status": "passed"
            },
            "line": 71,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 73,
        "name": "Verify User should be able navigate to Notification Center",
        "description": "",
        "id": "verify-notification-center-functionality-on-one-pulse-app;verify-user-should-be-able-navigate-to-notification-center",
        "after": [
          {
            "result": {
              "duration": 24100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9407477900,
              "status": "passed"
            },
            "line": 74,
            "name": "I navigate to notification center page",
            "match": {
              "location": "EditProfileSteps.iNavigateToNotificationCenterPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4011317000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 75,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 76,
                "value": "#    Then I handle the pulse mate popup"
              },
              {
                "line": 77,
                "value": "#    Then I navigate to notification center page"
              }
            ],
            "line": 78,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 487633500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 79,
                "value": "#    And user view the first notification from notification center"
              }
            ],
            "line": 80,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.notification.text}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${check.notification.section.text}"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Notification Center functionality on one pulse App",
    "description": "",
    "id": "verify-notification-center-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/NotificationCenter.feature",
    "tags": [
      {
        "line": 1,
        "name": "@NotificationCenter"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@notificationiOS"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 34400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8447580400,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16957812400,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163496600,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3002950500,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4850084000,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 409300,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3644746300,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10320922700,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 228744600,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10001064300,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30917210400,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14664425900,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify My Challenges texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;verify-my-challenges-texts",
        "after": [
          {
            "result": {
              "duration": 35500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12396413600,
              "status": "passed"
            },
            "line": 24,
            "name": "I click on My Challenges tile on one pulse app",
            "match": {
              "location": "LoginSteps.myChallengesTile()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 800904400,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${challenge.getstarted}"
                ],
                "line": 28
              },
              {
                "comments": [
                  {
                    "line": 29,
                    "value": "#      | ${my.challenges.text}     |"
                  }
                ],
                "cells": [
                  "${do.not.have.challenges}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4292981600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "#      | ${challenge.getstarted}   |"
              }
            ],
            "line": 32,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 34,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Click on All challenges and and verify texts",
        "description": "",
        "id": "verify--my-challenges-on-one-pulse-app;click-on-all-challenges-and-and-verify-texts",
        "after": [
          {
            "result": {
              "duration": 44200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 235419700,
              "status": "passed"
            },
            "line": 36,
            "name": "I clicks on \"${all.challenges.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${all.challenges.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9184699700,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the following texts \"My challenges\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "My challenges",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.challenges.text}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${all.challenges.text}"
                ],
                "line": 39
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 554646800,
              "status": "passed"
            },
            "line": 40,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${not.connected.wearable}"
                ],
                "line": 41
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify  My Challenges on One Pulse App",
    "description": "",
    "id": "verify--my-challenges-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mychallenges/PulseMyChallenges.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_challenges"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@pulse_my"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@my_challengesSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 23900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8683420800,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16453834900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "#    And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 218878500,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3005636600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4821474900,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 39200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 87200,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3621366500,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9312724600,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 224236800,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10009942200,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30807996000,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14652580600,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 48800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\" and Verify the Mycommunities screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"-and-verify-the-mycommunities-screen",
        "after": [
          {
            "result": {
              "duration": 29700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6014740400,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2365932700,
              "status": "passed"
            },
            "line": 25,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6014388800,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 6 sec",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 292991300,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8708725500,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 310107300,
              "status": "passed"
            },
            "line": 34,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5004105100,
              "status": "passed"
            },
            "line": 35,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6833601400,
              "status": "passed"
            },
            "line": 36,
            "name": "I leave all joined communities by clicking on three dots menu icon on my My communities screen",
            "match": {
              "location": "MyCommunitiesSteps.leaveAllJoinedCommunities()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 37,
            "value": "#    When I click on joined community three dots menu icon"
          },
          {
            "line": 38,
            "value": "#    And I click on leave button for joined community"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 41,
        "name": "Verify the All Communities Post screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-all-communities-post-screen",
        "after": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5007942900,
              "status": "passed"
            },
            "line": 42,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 881617400,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"${All.Communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3597764900,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Join button in Communties tab",
            "match": {
              "location": "MyCommunitiesSteps.Joinbuttons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4613773900,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the static Active icon in community screen",
            "match": {
              "location": "MyCommunitiesSteps.StaryActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16487106800,
              "status": "passed"
            },
            "line": 46,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2826776200,
              "status": "passed"
            },
            "line": 47,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3432983900,
              "status": "passed"
            },
            "line": 49,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 50
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 949586900,
              "status": "passed"
            },
            "line": 51,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2973342600,
              "status": "passed"
            },
            "line": 52,
            "name": "I verify the following text \"TEST1\" in post Screen",
            "match": {
              "arguments": [
                {
                  "val": "TEST1",
                  "offset": 29
                }
              ],
              "location": "MyCommunitiesSteps.verifypostscreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TEST1"
                ],
                "line": 53
              },
              {
                "cells": [
                  "welcome"
                ],
                "line": 54
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 24700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Likes and comments counts in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-likes-and-comments-counts-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8781179400,
              "status": "passed"
            },
            "line": 57,
            "name": "I click the Post icon in My communities",
            "match": {
              "location": "MyCommunitiesSteps.clickIcons()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5013483200,
              "status": "passed"
            },
            "line": 58,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8753625500,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the like button in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.Clicklikesbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9018685900,
              "status": "passed"
            },
            "line": 60,
            "name": "Verify the like count in Post screen \" 1 Likes\" likes",
            "match": {
              "arguments": [
                {
                  "val": " 1 Likes",
                  "offset": 38
                }
              ],
              "location": "MyCommunitiesSteps.verifyLikescountInFeeds(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3744102000,
              "status": "passed"
            },
            "line": 61,
            "name": "I click the Comment icon in feed screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCommentsbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2458872500,
              "status": "passed"
            },
            "line": 62,
            "name": "Enter the comments in Feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.FeedsComments(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Comments",
                  "TEST1"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 995491600,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the submit icon in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickfeedssubmitbutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7610897700,
              "status": "passed"
            },
            "line": 65,
            "name": "Verify the comments count in Feeds screen \" 0 Comments\" comments",
            "match": {
              "arguments": [
                {
                  "val": " 0 Comments",
                  "offset": 43
                }
              ],
              "location": "MyCommunitiesSteps.verifyCommentsscountInFeeds(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 34600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 19600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify the Share with Friends Functionality in All communities tab",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-share-with-friends-functionality-in-all-communities-tab",
        "after": [
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4862863500,
              "status": "passed"
            },
            "line": 68,
            "name": "I click the share icon in Post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickShareIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4090208100,
              "status": "passed"
            },
            "line": 69,
            "name": "Verify the pop up in \"Share with Friends\"",
            "match": {
              "arguments": [
                {
                  "val": "Share with Friends",
                  "offset": 22
                }
              ],
              "location": "MyCommunitiesSteps.VerifySharewithFriends(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4207453700,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the phone icon in share with friends",
            "match": {
              "location": "MyCommunitiesSteps.clickPhoneIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8366321600,
              "status": "passed"
            },
            "line": 71,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify the Post Functionality in All communities",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-post-functionality-in-all-communities",
        "after": [
          {
            "result": {
              "duration": 57400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 723055400,
              "status": "passed"
            },
            "line": 75,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2005278600,
              "status": "passed"
            },
            "line": 76,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 578297100,
              "status": "passed"
            },
            "line": 77,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3006417400,
              "status": "passed"
            },
            "line": 78,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15924457400,
              "status": "passed"
            },
            "line": 79,
            "name": "I click Edit icon in stay Active icon",
            "match": {
              "location": "MyCommunitiesSteps.clickEditiconstayActive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4367889100,
              "status": "passed"
            },
            "line": 80,
            "name": "I click the Camera icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.ClickCameraIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4184842800,
              "status": "passed"
            },
            "line": 81,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9696573700,
              "status": "passed"
            },
            "line": 82,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9883360800,
              "status": "passed"
            },
            "line": 83,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3130593900,
              "status": "passed"
            },
            "line": 84,
            "name": "Enter the post in community screen",
            "match": {
              "location": "MyCommunitiesSteps.enterNric(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "TEST1"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3658010100,
              "status": "passed"
            },
            "line": 86,
            "name": "Enter the post in community large text screen",
            "match": {
              "location": "MyCommunitiesSteps.enterlargeText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "POST",
                  "welcome"
                ],
                "line": 87
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271994800,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the Post icon in create post screen",
            "match": {
              "location": "MyCommunitiesSteps.clickPostIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify the Category list and search feature",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;verify-the-category-list-and-search-feature",
        "after": [
          {
            "result": {
              "duration": 20900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15014681300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   And I click the Back icon in Stay Active screen"
              }
            ],
            "line": 92,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 488426500,
              "status": "passed"
            },
            "line": 93,
            "name": "I clicks on \"${category.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${category.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16782682200,
              "status": "passed"
            },
            "line": 94,
            "name": "I verify the following texts \"Category\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "Category",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "COVID-19"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Fitness"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Global Awareness Days"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Mental Health"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 199395200,
              "status": "passed"
            },
            "line": 99,
            "name": "I clicks on \"${no.post.category}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${no.post.category}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 791497500,
              "status": "passed"
            },
            "line": 100,
            "name": "I clicks on \"${apply.button}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${apply.button}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2485947900,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${no.post.found.text}"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 104,
        "name": "User navigates back to the community screen",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;user-navigates-back-to-the-community-screen",
        "after": [
          {
            "result": {
              "duration": 48000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 603393700,
              "status": "passed"
            },
            "line": 105,
            "name": "I click the Back icon in Stay Active screen",
            "match": {
              "location": "MyCommunitiesSteps.Clickstarutton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5002516100,
              "status": "passed"
            },
            "line": 106,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 108,
        "name": "Leave the community if already joined",
        "description": "",
        "id": "verify-my-communities-on-one-pluse-app;leave-the-community-if-already-joined",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 773277400,
              "status": "passed"
            },
            "line": 109,
            "name": "I clicks on \"${my.communities.text}\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "${my.communities.text}",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4479125500,
              "status": "passed"
            },
            "line": 110,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 161855800,
              "status": "passed"
            },
            "line": 111,
            "name": "I click on joined community three dots menu icon",
            "match": {
              "location": "MyCommunitiesSteps.clickOnJoinedCommMenu()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1724173000,
              "status": "passed"
            },
            "line": 112,
            "name": "I click on leave button for joined community",
            "match": {
              "location": "MyCommunitiesSteps.leaveJoinedCommunity()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify My Communities on One Pluse App",
    "description": "",
    "id": "verify-my-communities-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 35600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8638569800,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17167705300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 6,
                "value": "# And Logout of pulse app if user is logged in"
              }
            ],
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 202209400,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3008810900,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4812991400,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "User should be able to login on app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 45900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 83700,
              "status": "passed"
            },
            "line": 13,
            "name": "I assign \"${mychannel.private.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${mychannel.private.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 50
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3513835200,
              "status": "passed"
            },
            "line": 14,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9781668000,
              "status": "passed"
            },
            "line": 15,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 235230300,
              "status": "passed"
            },
            "line": 18,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10011349000,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30204791600,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14647793200,
              "status": "passed"
            },
            "line": 21,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 170100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 80700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 23,
        "name": "Verify the My communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-my-communities-screen",
        "after": [
          {
            "result": {
              "duration": 55700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5357896600,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the MyCommunities icon",
            "match": {
              "location": "MyCommunitiesSteps.clickMyCommunities()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3005919900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#   Given User has pulse app"
              },
              {
                "line": 26,
                "value": "#   And I clicks on \"${my.communities.text}\" in app screen"
              },
              {
                "line": 27,
                "value": "#    And User should be verify \"${my.communities.text}\" tab in Home screen"
              }
            ],
            "line": 28,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 331164300,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${icon.communities}"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8706468400,
              "status": "passed"
            },
            "line": 31,
            "name": "I verify the following texts \"All Communities\" in Screen",
            "match": {
              "arguments": [
                {
                  "val": "All Communities",
                  "offset": 30
                }
              ],
              "location": "CustomerConnectSteps.isStaticTextDisplayedOncommunitiesScreen(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${my.communities.text}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${All.Communities.text}"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3001602700,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 35,
            "value": "#    And I verify the following texts \"Communities\" in Screen"
          },
          {
            "line": 36,
            "value": "#      | ${my.communities.text}  |"
          },
          {
            "line": 37,
            "value": "#      | ${All.Communities.text} |"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 44500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify the Private Communities in communities screen",
        "description": "",
        "id": "verify-private-my-communities-on-one-pulse-app;verify-the-private-communities-in-communities-screen",
        "after": [
          {
            "result": {
              "duration": 42100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4641524000,
              "status": "passed"
            },
            "line": 40,
            "name": "I click the Private \"${All.Communities.text}\" in Communties screen",
            "match": {
              "arguments": [
                {
                  "val": "${All.Communities.text}",
                  "offset": 21
                }
              ],
              "location": "MyCommunitiesSteps.Click_PrivateCommunties(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3291228700,
              "status": "passed"
            },
            "line": 41,
            "name": "I Enter the \"e.g. Be Healthy content, Challenges etc.\" in \"Test\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Be Healthy content, Challenges etc.",
                  "offset": 13
                },
                {
                  "val": "Test",
                  "offset": 59
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2688148100,
              "status": "passed"
            },
            "line": 42,
            "name": "I Enter the \"e.g. Healthy content, forum for celebrities etc.\" in \"2020\" in home new screen",
            "match": {
              "arguments": [
                {
                  "val": "e.g. Healthy content, forum for celebrities etc.",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 67
                }
              ],
              "location": "CustomerConnectSteps.EnterTextDescription(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 311545200,
              "status": "passed"
            },
            "line": 43,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4162202500,
              "status": "passed"
            },
            "line": 44,
            "name": "I click the Upload Image icon",
            "match": {
              "location": "MyCommunitiesSteps.clickUploadIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003132300,
              "status": "passed"
            },
            "line": 45,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11735272400,
              "status": "passed"
            },
            "line": 46,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3007012200,
              "status": "passed"
            },
            "line": 47,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4477332900,
              "status": "passed"
            },
            "line": 48,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 634592200,
              "status": "passed"
            },
            "line": 49,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1278170100,
              "status": "passed"
            },
            "line": 50,
            "name": "I click skip button in feeds screen",
            "match": {
              "location": "MyCommunitiesSteps.clickSkipbutton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3477839200,
              "status": "passed"
            },
            "line": 51,
            "name": "I clicks on \"OK\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "OK",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Private My Communities on One Pulse App",
    "description": "",
    "id": "verify-private-my-communities-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/home/mycommunities/PulseMyCommunities_private.feature",
    "tags": [
      {
        "line": 1,
        "name": "@my_communties_private"
      },
      {
        "line": 1,
        "name": "@pulse_sg"
      },
      {
        "line": 1,
        "name": "@pulse_regression"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 51200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8222886000,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 73200,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.events.user}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.events.user}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 48
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15874485700,
              "status": "passed"
            },
            "line": 7,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 238324700,
              "status": "passed"
            },
            "line": 8,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2000049500,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4847636700,
              "status": "passed"
            },
            "line": 10,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 12,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 24100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3488458200,
              "status": "passed"
            },
            "line": 13,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10401589500,
              "status": "passed"
            },
            "line": 14,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Password",
                  "${pulse.password}"
                ],
                "line": 16
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 253252700,
              "status": "passed"
            },
            "line": 17,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5018981000,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31225969800,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14290164600,
              "status": "passed"
            },
            "line": 20,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 22,
        "name": "Verify MyEvent Functionality in Home screen",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-myevent-functionality-in-home-screen",
        "after": [
          {
            "result": {
              "duration": 23500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20697141200,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the MyEvent icons",
            "match": {
              "location": "CustomerConnectSteps.clickMyEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40003871300,
              "status": "passed"
            },
            "line": 24,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 489386800,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events enrolled yet"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Please choose from the open events and get started"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify Events Archive tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-events-archive-tab",
        "after": [
          {
            "result": {
              "duration": 25400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8509498500,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the Events Archive icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyEventsArchive()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40007491800,
              "status": "passed"
            },
            "line": 31,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 291869100,
              "status": "passed"
            },
            "line": 32,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "You do not have any events in your archive."
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify Open Events tab",
        "description": "",
        "id": "verify-my-event-channel-functionality-on-one-pulse-app;verify-open-events-tab",
        "after": [
          {
            "result": {
              "duration": 88400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9353865200,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the Open Events icon",
            "match": {
              "location": "CustomerConnectSteps.clickMyOpenEvents()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40002478400,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 40 sec",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125658825700,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify either static text or available open events are displayed on screen",
            "match": {
              "location": "CustomerConnectSteps.verifyOpenEventsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "There are no events available at the moment"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Stay tuned for events on health and fitness"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MY Event channel functionality on one pulse App",
    "description": "",
    "id": "verify-my-event-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/ph/home/MyEvents.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyEventPH"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that user can view previous air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-previous-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 25000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9814256000,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 124900,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7924727800,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10468665400,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 331407100,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10013980000,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29908244300,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9153700500,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14355751000,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 62228220900,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on My Environment icon",
            "match": {
              "location": "MyEnvironmentSteps.iClicksOnMyEnvironmentIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 486177400,
              "status": "passed"
            },
            "line": 19,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1362490700,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on Previous Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnPreviousAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7232213200,
              "status": "passed"
            },
            "line": 21,
            "name": "User can view \"Previous\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5991763000,
              "status": "passed"
            },
            "line": 22,
            "name": "User clicks on \"Swipe Up for Details\" button to view the Previous day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewThePreviousDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2669366700,
              "status": "passed"
            },
            "line": 23,
            "name": "User can see the \"Previous\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Previous",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 746855300,
              "status": "passed"
            },
            "line": 24,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify that user can view Current air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-current-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1826877000,
              "status": "passed"
            },
            "line": 28,
            "name": "User clicks on \"Back\" icon from \"Previous Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Previous Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1612152500,
              "status": "passed"
            },
            "line": 29,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1180728400,
              "status": "passed"
            },
            "line": 30,
            "name": "User clicks on Current Air quality button",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnCurrentAirQualityButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5927040800,
              "status": "passed"
            },
            "line": 31,
            "name": "User can view \"Current\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5681617400,
              "status": "passed"
            },
            "line": 32,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3504557200,
              "status": "passed"
            },
            "line": 33,
            "name": "User can see the \"Current\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "Current",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 857206100,
              "status": "passed"
            },
            "line": 34,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify that user can view air quality details  for next few days under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-air-quality-details--for-next-few-days-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 43700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1052534700,
              "status": "passed"
            },
            "line": 38,
            "name": "User clicks on \"Back\" icon from \"Current Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Current Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2352046500,
              "status": "passed"
            },
            "line": 39,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1576868900,
              "status": "passed"
            },
            "line": 40,
            "name": "User clicks on \"How is my air quality over the next few days\" icon in Environments Home Page",
            "match": {
              "arguments": [
                {
                  "val": "How is my air quality over the next few days",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentsHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6628019200,
              "status": "passed"
            },
            "line": 41,
            "name": "User can view \"Forecast\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Forecast",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5581484300,
              "status": "passed"
            },
            "line": 42,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4348374300,
              "status": "passed"
            },
            "line": 43,
            "name": "User can see the \"ForeCast\" Air Quality Details",
            "match": {
              "arguments": [
                {
                  "val": "ForeCast",
                  "offset": 18
                }
              ],
              "location": "MyEnvironmentSteps.userCanSeeTheAirQualityDetails(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1639793900,
              "status": "passed"
            },
            "line": 44,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify that user can access and view Neighbourhood air quality details under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-neighbourhood-air-quality-details-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 40600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1033054500,
              "status": "passed"
            },
            "line": 48,
            "name": "User clicks on \"Back\" icon from \"Next Few Days Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Next Few Days Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1863722400,
              "status": "passed"
            },
            "line": 49,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1237639000,
              "status": "passed"
            },
            "line": 50,
            "name": "User clicks on My Neighbourhood air icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnMyNeighbourhoodAirIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6401710400,
              "status": "passed"
            },
            "line": 51,
            "name": "User can view \"Heat Map\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Heat Map",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 52,
            "value": "#    When User clicks on \"Swipe Up for Details\" button to view current day air quality details"
          },
          {
            "line": 53,
            "value": "#    Then User can see the \"Heat Map\" Air Quality Details"
          },
          {
            "line": 54,
            "value": "#    When User clicks on \"Swipes Down To Close\" button to close the details"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 19100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify that user can access and view Fires nearby under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-access-and-view-fires-nearby-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2113330700,
              "status": "passed"
            },
            "line": 58,
            "name": "User clicks on \"Back\" icon from \"Neighbourhood Air Quality\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Neighbourhood Air Quality",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2360593100,
              "status": "passed"
            },
            "line": 59,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 604824800,
              "status": "passed"
            },
            "line": 60,
            "name": "User clicks on Fires NearBy icon in Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userClicksOnFiresNearByIconInHomePage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5946381600,
              "status": "passed"
            },
            "line": 61,
            "name": "User can view \"Fires Nearby\" Air quality search screen",
            "match": {
              "arguments": [
                {
                  "val": "Fires Nearby",
                  "offset": 15
                }
              ],
              "location": "MyEnvironmentSteps.userCanViewAirQualitySearchScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5622629900,
              "status": "passed"
            },
            "line": 62,
            "name": "User clicks on \"Swipe Up for Details\" button to view current day air quality details",
            "match": {
              "arguments": [
                {
                  "val": "Swipe Up for Details",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToViewCurrentDayAirQualityDetails(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2451994000,
              "status": "passed"
            },
            "comments": [
              {
                "line": 63,
                "value": "#    Then User can see the \"Fires Nearby\" Air Quality Details"
              }
            ],
            "line": 64,
            "name": "User clicks on \"Swipes Down To Close\" button to close the details",
            "match": {
              "arguments": [
                {
                  "val": "Swipes Down To Close",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnButtonToCloseTheDetails(String)"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 31400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 67,
        "name": "Verify that user can view effects of the poor environment and upcoming activities under My Environment Home page",
        "description": "",
        "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen;verify-that-user-can-view-effects-of-the-poor-environment-and-upcoming-activities-under-my-environment-home-page",
        "after": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1106010500,
              "status": "passed"
            },
            "line": 68,
            "name": "User clicks on \"Back\" icon from \"Fires Nearby\" screen to move to My Environments HomePage",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                },
                {
                  "val": "Fires Nearby",
                  "offset": 33
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconFromScreenToMoveToMyEnvironmentsHomePage(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1884312700,
              "status": "passed"
            },
            "line": 69,
            "name": "User must be landed in My Environment Home Page",
            "match": {
              "location": "MyEnvironmentSteps.userMustBeLandedInMyEnvironmentHomePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15848318500,
              "status": "passed"
            },
            "line": 70,
            "name": "User clicks on \"Why is it important to monitor my environment\" icon in environment Home Page",
            "match": {
              "arguments": [
                {
                  "val": "Why is it important to monitor my environment",
                  "offset": 16
                }
              ],
              "location": "MyEnvironmentSteps.userClicksOnIconInEnvironmentHomePage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3181359100,
              "status": "passed"
            },
            "line": 71,
            "name": "User can view short term and long term effects screen",
            "match": {
              "location": "MyEnvironmentSteps.userCanViewShortTermAndLongTermEffectsScreen()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify that user can view air quality details under My Environment screen",
    "description": "",
    "id": "verify-that-user-can-view-air-quality-details-under-my-environment-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/MyEnvironments.feature",
    "tags": [
      {
        "line": 1,
        "name": "@sg_myenvironment"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 5,
            "value": "#  User who has completed the Nutrition Assessment"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 22200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8796975400,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76200,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${hra.report.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${hra.report.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 47
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17913796600,
              "status": "passed"
            },
            "line": 9,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 219870700,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5010343200,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4852065400,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 14,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 64100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3563629000,
              "status": "passed"
            },
            "line": 15,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9880884700,
              "status": "passed"
            },
            "line": 16,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Password",
                  "${hra.password}"
                ],
                "line": 18
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 250082700,
              "status": "passed"
            },
            "line": 19,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5009526600,
              "status": "passed"
            },
            "line": 20,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30177993700,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14775932200,
              "status": "passed"
            },
            "line": 22,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13333346300,
              "status": "passed"
            },
            "line": 23,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40393843600,
              "status": "passed"
            },
            "line": 24,
            "name": "I navigate to Babylon health Assessment and Accept TermsAndCondition",
            "match": {
              "location": "BabylonSteps.navigateToBabylonHealthAssessmentAndAcceptTermsAndCondition()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 70400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "User should be able to access Babylon Health Risk Assessment Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-health-risk-assessment-report",
        "after": [
          {
            "result": {
              "duration": 23700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5340861900,
              "status": "passed"
            },
            "line": 27,
            "name": "I click on \"Report\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Report",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5518527600,
              "status": "passed"
            },
            "line": 28,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.report.title}"
                ],
                "line": 29
              },
              {
                "cells": [
                  "${babylon.hraReport.report.subTitle}"
                ],
                "line": 30
              },
              {
                "cells": [
                  "${babylon.hraReport.report.percentage}"
                ],
                "line": 31
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement1}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement2}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${babylon.hraReport.report.statement3}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 20600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13264552000,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.title}"
                ],
                "line": 38
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.description}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRiskDescription}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement1}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement2}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement3}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.diseaseRisk.statement4}"
                ],
                "line": 45
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 25700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify the HRA Activity Summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 25600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4091013600,
              "status": "passed"
            },
            "line": 48,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.title}"
                ],
                "line": 49
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organDescription}"
                ],
                "line": 50
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement1}"
                ],
                "line": 51
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement2}"
                ],
                "line": 52
              },
              {
                "cells": [
                  "${babylon.hraReport.summary.organ.statement3}"
                ],
                "line": 53
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 55,
        "name": "Verify the HRA Activity summary",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-activity-summary",
        "after": [
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3964957200,
              "status": "passed"
            },
            "line": 56,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.title}"
                ],
                "line": 57
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 58
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement1}"
                ],
                "line": 59
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.statement2}"
                ],
                "line": 60
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify the HRA Nutrition Report",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-nutrition-report",
        "after": [
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16393491700,
              "status": "passed"
            },
            "line": 63,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.title}"
                ],
                "line": 64
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.subTitle}"
                ],
                "line": 65
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement1}"
                ],
                "line": 66
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement2}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement3}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement4}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement5}"
                ],
                "line": 70
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement6}"
                ],
                "line": 71
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement7}"
                ],
                "line": 72
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement8}"
                ],
                "line": 73
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.statement9}"
                ],
                "line": 74
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 76,
        "name": "Verify the HRA Report - Keep It Up sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---keep-it-up-sub-section",
        "after": [
          {
            "result": {
              "duration": 40700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13272635900,
              "status": "passed"
            },
            "line": 77,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.keepItUp}"
                ],
                "line": 78
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat}"
                ],
                "line": 79
              },
              {
                "cells": [
                  "${babylon.hraReport.lowFat.description}"
                ],
                "line": 80
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol}"
                ],
                "line": 81
              },
              {
                "cells": [
                  "${babylon.hraReport.lowAlcohol.description}"
                ],
                "line": 82
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine}"
                ],
                "line": 83
              },
              {
                "cells": [
                  "${babylon.hraReport.lowCaffeine.description}"
                ],
                "line": 84
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids}"
                ],
                "line": 85
              },
              {
                "cells": [
                  "${babylon.hraReport.fluids.description}"
                ],
                "line": 86
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 89,
        "name": "Verify the HRA Report - Make a Change sub-section",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;verify-the-hra-report---make-a-change-sub-section",
        "after": [
          {
            "result": {
              "duration": 20300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5492164900,
              "status": "passed"
            },
            "line": 90,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.makeAChange}"
                ],
                "line": 91
              },
              {
                "cells": [
                  "${babylon.hraReport.change1}"
                ],
                "line": 92
              },
              {
                "cells": [
                  "${babylon.hraReport.change2}"
                ],
                "line": 93
              },
              {
                "cells": [
                  "${babylon.hraReport.change3}"
                ],
                "line": 94
              },
              {
                "cells": [
                  "${babylon.hraReport.change4}"
                ],
                "line": 95
              },
              {
                "cells": [
                  "${babylon.hraReport.change5}"
                ],
                "line": 96
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 98,
        "name": "User should be able to access Babylon HRA - Healthcheck - Body",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---body",
        "after": [
          {
            "result": {
              "duration": 24400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5832266500,
              "status": "passed"
            },
            "line": 99,
            "name": "I click on \"Healthcheck\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Healthcheck",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2373433400,
              "status": "passed"
            },
            "line": 100,
            "name": "I click on \"Body\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Body",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 755214600,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.bodyButtton}"
                ],
                "line": 102
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3674579200,
              "status": "passed"
            },
            "line": 103,
            "name": "I verify following text is displayed on HRA report",
            "match": {
              "location": "BabylonSteps.verifyHRAStaticText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.body.bones}"
                ],
                "line": 104
              },
              {
                "cells": [
                  "${babylon.hraReport.body.heart}"
                ],
                "line": 105
              },
              {
                "cells": [
                  "${babylon.hraReport.body.brain}"
                ],
                "line": 106
              },
              {
                "cells": [
                  "${babylon.hraReport.body.liver}"
                ],
                "line": 107
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 26000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2363089900,
              "status": "passed"
            },
            "line": 110,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 112,
        "name": "User should be able to access Babylon HRA - Healthcheck - Nutrition",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---nutrition",
        "after": [
          {
            "result": {
              "duration": 21300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2413990300,
              "status": "passed"
            },
            "line": 113,
            "name": "I click on \"Nutrition\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Nutrition",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 808109000,
              "status": "passed"
            },
            "line": 114,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition}"
                ],
                "line": 115
              },
              {
                "cells": [
                  "${babylon.hraReport.nutrition.description}"
                ],
                "line": 116
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31506018500,
              "status": "passed"
            },
            "line": 117,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 348461700,
              "status": "passed"
            },
            "line": 118,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.nutrition.retake}"
                ],
                "line": 119
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 121,
        "name": "Navigate back to nutrition screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-nutrition-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 20200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2310095800,
              "status": "passed"
            },
            "line": 122,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1502071000,
              "status": "passed"
            },
            "line": 123,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 124
              },
              {
                "cells": [
                  "${babylon.hraReport.about.nutrition.description}"
                ],
                "line": 125
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 127,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 57100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2364806600,
              "status": "passed"
            },
            "line": 128,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 47300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 130,
        "name": "User should be able to access Babylon HRA - Healthcheck - Activity",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---activity",
        "after": [
          {
            "result": {
              "duration": 39400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2354133600,
              "status": "passed"
            },
            "line": 131,
            "name": "I click on \"Activity\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Activity",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1041879300,
              "status": "passed"
            },
            "line": 132,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity}"
                ],
                "line": 133
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.subTitle}"
                ],
                "line": 134
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5484241900,
              "status": "passed"
            },
            "line": 135,
            "name": "I click on \"Retake Assessment\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Retake Assessment",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 528767200,
              "status": "passed"
            },
            "line": 136,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.activity.retake}"
                ],
                "line": 137
              },
              {
                "cells": [
                  "${babylon.hraReport.activity.retake2}"
                ],
                "line": 138
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 140,
        "name": "Navigate back to Activity screen and validate the static text",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-activity-screen-and-validate-the-static-text",
        "after": [
          {
            "result": {
              "duration": 67300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2760226800,
              "status": "passed"
            },
            "line": 141,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 987912000,
              "status": "passed"
            },
            "line": 142,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.aboutDisease}"
                ],
                "line": 143
              },
              {
                "cells": [
                  "${babylon.hraReport.about.activity.description}"
                ],
                "line": 144
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 146,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 23300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2285700000,
              "status": "passed"
            },
            "line": 147,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "User should be able to access Babylon HRA - Healthcheck - Mood",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;user-should-be-able-to-access-babylon-hra---healthcheck---mood",
        "after": [
          {
            "result": {
              "duration": 19300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2745988500,
              "status": "passed"
            },
            "line": 150,
            "name": "I click on \"Mood\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Mood",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 516119500,
              "status": "passed"
            },
            "line": 151,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood}"
                ],
                "line": 152
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.duration}"
                ],
                "line": 153
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 240065800,
              "status": "passed"
            },
            "line": 154,
            "name": "I start the assessment",
            "match": {
              "location": "BabylonSteps.clickOnStartAssessmnet()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3455437900,
              "status": "passed"
            },
            "line": 155,
            "name": "I verify the HRA Results are displayed",
            "match": {
              "location": "BabylonSteps.verifyHRAResult(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment}"
                ],
                "line": 156
              },
              {
                "cells": [
                  "${babylon.hraReport.mood.assessment2}"
                ],
                "line": 157
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 159,
        "name": "navigate back to digital twin screen",
        "description": "",
        "id": "verify-the-babylon-hra-report---nutrition,-body,-activity;navigate-back-to-digital-twin-screen",
        "after": [
          {
            "result": {
              "duration": 55400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2281203400,
              "status": "passed"
            },
            "line": 160,
            "name": "I click on \"Back\" link on digital twin screen",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 12
                }
              ],
              "location": "BabylonSteps.clickOnDigitalTwin(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify the BabyLon HRA Report - Nutrition, Body, Activity",
    "description": "",
    "id": "verify-the-babylon-hra-report---nutrition,-body,-activity",
    "keyword": "Feature",
    "uri": "features/sg/health/babylon/BabylonHRA_Report.feature",
    "tags": [
      {
        "line": 1,
        "name": "@babylon_hra_report_sg"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 61600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 38400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 711303700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 833700,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55300,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8803270000,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17160437000,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013811600,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 229265500,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5003629000,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6691182300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#  Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 369875900,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003582300,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29951325900,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5006085500,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64150036400,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b04eed69-d56b-405c-b7c4-d8088349d725\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_NegativeFlow.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dietician_Negative"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#    Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 30,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 18500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 1994372300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17561883000,
              "status": "passed"
            },
            "line": 33,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14457535400,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18069575000,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8744992700,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b04eed69-d56b-405c-b7c4-d8088349d725\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Doctor\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Doctor\" in app screen(features/sg/health/dietician/Dietician_NegativeFlow.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "124-12-2025"
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 46,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 1999689400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8430101200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b04eed69-d56b-405c-b7c4-d8088349d725\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"General Physician\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"General Physician\" in app screen(features/sg/health/dietician/Dietician_NegativeFlow.feature:49)\r\n",
              "status": "failed"
            },
            "line": 49,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 53
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 55
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 57
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    And Enter the year Name in Eductaion Details Screen"
              },
              {
                "line": 60,
                "value": "#      | ServiceNumber | 2020 |"
              }
            ],
            "line": 61,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 62
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "202020"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 67,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 68,
            "value": "#"
          },
          {
            "line": 69,
            "value": "#"
          },
          {
            "line": 70,
            "value": "#    # Valid Failure -Issue id - PCAONEPULSE-21033"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 72,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 1901084300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18357034900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: b04eed69-d56b-405c-b7c4-d8088349d725\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText[contains(@text,\"Enter Hospital/Clinic Name\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.Enternames(CustomerConnectScreen.java:1841)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.i_Enter_the_in_in_home_screen(CustomerConnectSteps.java:567)\r\n\tat ✽.And I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen(features/sg/health/dietician/Dietician_NegativeFlow.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I Enter the \"Start Date\" in \"2030\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I Enter the \"End Date\" in \"2010\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 82,
            "name": "verify Add Experience message \"Add Experience\"",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 31
                }
              ],
              "location": "DieticianSteps.VerifyServiceOffered(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify Dietician Negative Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-negative-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_NegativeFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dietician_Negative"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 61,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 709698500,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 693600,
              "status": "passed"
            },
            "line": 7,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34800,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10309971100,
              "status": "passed"
            },
            "line": 9,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17244817300,
              "status": "passed"
            },
            "line": 10,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006200700,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 236463200,
              "status": "passed"
            },
            "line": 12,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5007448100,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7032099700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 14,
                "value": "#    Then I change the language as required on registration page"
              }
            ],
            "line": 15,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 16
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 330173400,
              "status": "passed"
            },
            "line": 20,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10003582200,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30280488300,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5010634600,
              "status": "passed"
            },
            "line": 23,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 64585967300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 220d8b30-56b5-4a43-8ae1-002d4de12e06\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickSkipButton(PulseRegistrationScreen.java:1131)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iClickSkipButton(RegistrationSteps.java:377)\r\n\tat ✽.Then I click skip button(features/sg/health/dietician/Dietician_PositiveFlow.feature:55)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I enter the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 25,
                "value": "#      | mobileNumber | 98678419 |"
              },
              {
                "line": 26,
                "value": "#    And I click the continue button"
              },
              {
                "line": 27,
                "value": "#    And I choose my wellness goals under wellness plan screen"
              },
              {
                "line": 28,
                "value": "#    And I click the continue button"
              },
              {
                "line": 29,
                "value": "#    And I click the date in Date of Birth field"
              },
              {
                "line": 30,
                "value": "#    And I click the Done icon"
              },
              {
                "line": 31,
                "value": "#    And I click the continue button"
              },
              {
                "line": 32,
                "value": "#    And I select the  Male icon"
              },
              {
                "line": 33,
                "value": "#    And I click the continue button"
              },
              {
                "line": 34,
                "value": "#    Then I wait for 5 sec"
              },
              {
                "line": 35,
                "value": "#    And I enter my height and weight details"
              },
              {
                "line": 36,
                "value": "#    And I click the continue button"
              },
              {
                "line": 37,
                "value": "#    And I click on Calculate BMI button"
              },
              {
                "line": 38,
                "value": "#    And I click the continue button"
              },
              {
                "line": 39,
                "value": "#    And I select the \"How active are you?\" in doing exercise"
              },
              {
                "line": 40,
                "value": "#    And I click the continue button"
              },
              {
                "line": 41,
                "value": "#    And I select my favorite food dietary"
              },
              {
                "line": 42,
                "value": "#    And I click the continue button"
              },
              {
                "line": 43,
                "value": "#    And I answer as \"Yes\" to \"Any Food allergies?\""
              },
              {
                "line": 44,
                "value": "#    And I click the continue button"
              },
              {
                "line": 45,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 46,
                "value": "#    And I verify that \"Tracking your activity is trending\" is displayed"
              },
              {
                "line": 47,
                "value": "#    And I click the continue button"
              },
              {
                "line": 48,
                "value": "#    And I see that \"Welcome to Pulse\" text is displayed"
              },
              {
                "line": 49,
                "value": "#    And I click the continue button"
              },
              {
                "line": 50,
                "value": "#    And I see that fitness subscription exclusive offers screen is displayed"
              },
              {
                "line": 51,
                "value": "#    And I click on close icon"
              },
              {
                "line": 52,
                "value": "#    And I enter NRIC number last 4 digits \"122F\""
              },
              {
                "line": 53,
                "value": "#   # And I click the continue button"
              },
              {
                "line": 54,
                "value": "#    Then I click skip buttons"
              }
            ],
            "line": 55,
            "name": "I click skip button",
            "match": {
              "location": "RegistrationSteps.iClickSkipButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I wait for 4 sec",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@Dieticians_positive"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 64,
            "value": "###"
          },
          {
            "line": 65,
            "value": "#  Scenario: User should be able to login on app with correct credentials using \"Continue with Gmail\""
          },
          {
            "line": 66,
            "value": "#    Given User has pulse app"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 14300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 68,
        "name": "Verify User should be able to navigate to Dietician page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-dietician-page",
        "after": [
          {
            "result": {
              "duration": 34900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19278585300,
              "status": "passed"
            },
            "line": 69,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16536132000,
              "status": "passed"
            },
            "line": 70,
            "name": "I click the Health icon in Home screen",
            "match": {
              "location": "CustomerConnectSteps.Healthicons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18272995300,
              "status": "passed"
            },
            "line": 71,
            "name": "I click the Dietician in Health Screen",
            "match": {
              "location": "DieticianSteps.Dietician()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2684277600,
              "status": "passed"
            },
            "line": 72,
            "name": "I clicks on \"Doctor\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Doctor",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 365220300,
              "status": "passed"
            },
            "line": 73,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2821738100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 74,
                "value": "#    Then I wait for 3 sec"
              },
              {
                "line": 75,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 76,
                "value": "#      | What is your service number?                                 |"
              },
              {
                "line": 77,
                "value": "#      | To start getting appointments please complete these details. |"
              },
              {
                "line": 78,
                "value": "#      | Service Number                                               |"
              },
              {
                "line": 79,
                "value": "#      | Issuing Organisation                                         |"
              },
              {
                "line": 80,
                "value": "#      | Valid Till                                                   |"
              }
            ],
            "line": 81,
            "name": "Enter the Service Number in Service Number Screen",
            "match": {
              "location": "DieticianSteps.ServiceNumber(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "05"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4796926400,
              "status": "passed"
            },
            "line": 83,
            "name": "Enter the Issue Organization in Service Number Screen",
            "match": {
              "location": "DieticianSteps.IssueOrganization(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "07"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2172960200,
              "status": "passed"
            },
            "line": 85,
            "name": "Enter the Valid Till im Service Number Screen",
            "match": {
              "location": "DieticianSteps.ValidTillDate(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "12"
                ],
                "line": 86
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 788161000,
              "status": "passed"
            },
            "line": 87,
            "name": "I clicks on \"What is your service number?\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "What is your service number?",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1116680600,
              "status": "passed"
            },
            "line": 88,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to navigate to specialisation page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-specialisation-page",
        "after": [
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1544866300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 91,
                "value": "#   Then I wait for 3 sec"
              },
              {
                "line": 92,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 93,
                "value": "#      | What is your specialisation? |"
              },
              {
                "line": 94,
                "value": "#      | Ear Nose Throat              |"
              },
              {
                "line": 95,
                "value": "#      | Dentists                     |"
              },
              {
                "line": 96,
                "value": "#      | Psychologist                 |"
              },
              {
                "line": 97,
                "value": "#      | Orthopedician                |"
              },
              {
                "line": 98,
                "value": "#      | Paediatrician                |"
              }
            ],
            "line": 99,
            "name": "I clicks on \"General Physician\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "General Physician",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1035465700,
              "status": "passed"
            },
            "line": 100,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 849621000,
              "status": "passed"
            },
            "line": 101,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Add Super Specialisation"
                ],
                "line": 102
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2053875300,
              "status": "passed"
            },
            "line": 103,
            "name": "Enter the Add Super Specialization Till im pulse for Experts Screen",
            "match": {
              "location": "DieticianSteps.Addsuper_specialisation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 104
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 787608600,
              "status": "passed"
            },
            "comments": [
              {
                "line": 105,
                "value": "# And I click the continue button"
              }
            ],
            "line": 106,
            "name": "I clicks on \"Add Super Specialisation\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Super Specialisation",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1323360800,
              "status": "passed"
            },
            "line": 107,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 109,
        "name": "Verify User should be able to navigate to Educational Details page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-educational-details-page",
        "after": [
          {
            "result": {
              "duration": 28000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 758888800,
              "status": "passed"
            },
            "line": 110,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Educational Details"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2643809200,
              "status": "passed"
            },
            "line": 112,
            "name": "Enter the Degree Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_DegreeName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "MBBS"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3012539500,
              "status": "passed"
            },
            "line": 114,
            "name": "Enter the study Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_StudyName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "Denist"
                ],
                "line": 115
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 796861300,
              "status": "passed"
            },
            "line": 116,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3388943800,
              "status": "passed"
            },
            "line": 117,
            "name": "Enter the year Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_year(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2012"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1203362900,
              "status": "passed"
            },
            "line": 119,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3312117200,
              "status": "passed"
            },
            "line": 120,
            "name": "Enter the university Name in Eductaion Details Screen",
            "match": {
              "location": "DieticianSteps.Enter_UniversityName(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ServiceNumber",
                  "2020"
                ],
                "line": 121
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 823361500,
              "status": "passed"
            },
            "line": 122,
            "name": "I clicks on \"Educational Details\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Educational Details",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2020679100,
              "status": "passed"
            },
            "line": 123,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1989412600,
              "status": "passed"
            },
            "line": 124,
            "name": "I Enter the \"Enter Hospital/Clinic Name\" in \"Test University\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Hospital/Clinic Name",
                  "offset": 13
                },
                {
                  "val": "Test University",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1818172900,
              "status": "passed"
            },
            "line": 125,
            "name": "I Enter the \"Enter Location\" in \"Singapore\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "Singapore",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3421088500,
              "status": "passed"
            },
            "line": 126,
            "name": "I Enter the \"Start Date\" in \"10\" in dynamic start date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterstartDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1373591500,
              "status": "passed"
            },
            "line": 127,
            "name": "I Enter the \"End Date\" in \"10\" in dynamic End date Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "10",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndDate(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1840440500,
              "status": "passed"
            },
            "line": 128,
            "name": "I Enter the \"Start Date\" in \"2010\" in dynamic start years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "Start Date",
                  "offset": 13
                },
                {
                  "val": "2010",
                  "offset": 29
                }
              ],
              "location": "CustomerConnectSteps.EnterStartYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2704626000,
              "status": "passed"
            },
            "line": 129,
            "name": "I Enter the \"End Date\" in \"2030\" in dynamic End years Experience screen",
            "match": {
              "arguments": [
                {
                  "val": "End Date",
                  "offset": 13
                },
                {
                  "val": "2030",
                  "offset": 27
                }
              ],
              "location": "CustomerConnectSteps.EnterEndYear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652437300,
              "status": "passed"
            },
            "line": 130,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1328577700,
              "status": "passed"
            },
            "line": 131,
            "name": "I Enter the \"Enter profile title if any\" in \"MBBSDOCTOR\" in Doctor profile screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter profile title if any",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 45
                }
              ],
              "location": "CustomerConnectSteps.EnterDoctprProfile(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 746093300,
              "status": "passed"
            },
            "line": 132,
            "name": "I clicks on \"Add Experience\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Add Experience",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 503076000,
              "status": "passed"
            },
            "line": 133,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 135,
        "name": "Verify User should be able to navigate to Services Offered page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-services-offered-page",
        "after": [
          {
            "result": {
              "duration": 1515052900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3005697400,
              "status": "passed"
            },
            "line": 136,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8330548700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tServices Offered text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.VerifyAddMedicine(MyDocSteps.java:885)\r\n\tat ✽.And I verify following text displayed in Add medicine screen(features/sg/health/dietician/Dietician_PositiveFlow.feature:137)\r\n",
              "status": "failed"
            },
            "line": 137,
            "name": "I verify following text displayed in Add medicine screen",
            "match": {
              "location": "MyDocSteps.VerifyAddMedicine(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Services Offered"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I Enter the \"Services Offered\" in \"MBBSDOCTOR\" in service offered screen",
            "match": {
              "arguments": [
                {
                  "val": "Services Offered",
                  "offset": 13
                },
                {
                  "val": "MBBSDOCTOR",
                  "offset": 35
                }
              ],
              "location": "CustomerConnectSteps.EnterServiceOffered(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Achievements \u0026 Awards"
                ],
                "line": 142
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 143,
            "name": "I Enter the \"Enter title of the award\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter title of the award",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 43
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 144,
            "name": "I Enter the \"Enter organisation name (Awarded by)\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter organisation name (Awarded by)",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 55
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 145,
            "name": "I Enter the \"Year\" in \"2020\" in Achievement Award screen",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterAchievemnetyear(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 146,
            "name": "I clicks on \"Add seminar details whether you attended as a participant or as a speaker.\" in close keyboard screen",
            "match": {
              "arguments": [
                {
                  "val": "Add seminar details whether you attended as a participant or as a speaker.",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickClosekeyboard(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 147,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 149,
        "name": "Verify User should be able to navigate to Seminar(s) Attended page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-seminar(s)-attended-page",
        "after": [
          {
            "result": {
              "duration": 1554151500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001897800,
              "status": "passed"
            },
            "line": 150,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8134411700,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tSeminar(s) Attended text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/dietician/Dietician_PositiveFlow.feature:151)\r\n",
              "status": "failed"
            },
            "line": 151,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Seminar(s) Attended"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "I Enter the \"Enter seminar title\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter seminar title",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 38
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 155,
                "value": "#  And I Enter the \"Year\" in \"2020\" in home screen"
              }
            ],
            "line": 156,
            "name": "I Enter the \"Year\" in \"2020\" in seminars Attended",
            "match": {
              "arguments": [
                {
                  "val": "Year",
                  "offset": 13
                },
                {
                  "val": "2020",
                  "offset": 23
                }
              ],
              "location": "CustomerConnectSteps.EnterYear_Semainar(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 157,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "I Enter the \"Enter name of the Clinic/ Hospital\" in \"TEST TITLE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter name of the Clinic/ Hospital",
                  "offset": 13
                },
                {
                  "val": "TEST TITLE",
                  "offset": 53
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I Enter the \"Enter Location\" in \"SINGAPORE\" in home screen",
            "match": {
              "arguments": [
                {
                  "val": "Enter Location",
                  "offset": 13
                },
                {
                  "val": "SINGAPORE",
                  "offset": 33
                }
              ],
              "location": "CustomerConnectSteps.i_Enter_the_in_in_home_screen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 160,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 162,
        "name": "Verify User should be able to navigate to Take a Picture page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-take-a-picture-page",
        "after": [
          {
            "result": {
              "duration": 1574107800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8514777600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 220d8b30-56b5-4a43-8ae1-002d4de12e06\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Take a Picture\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Take a Picture\" in app screen(features/sg/health/dietician/Dietician_PositiveFlow.feature:167)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 163,
                "value": "# Then I wait for 3 sec"
              },
              {
                "line": 164,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 165,
                "value": "#      | About You     |"
              },
              {
                "line": 166,
                "value": "#      | Profile Photo |"
              }
            ],
            "line": 167,
            "name": "I clicks on \"Take a Picture\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Take a Picture",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I give camera permission",
            "match": {
              "location": "BaseSteps.giveCameraPermission()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "I take picture from Camera",
            "match": {
              "location": "EditProfileSteps.iTakePictureFromCamera()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 172,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 173,
                "value": "#      | Confirm Details! |"
              },
              {
                "line": 174,
                "value": "#      | MBBS-2020-2020   |"
              },
              {
                "line": 175,
                "value": "#      | MBBSDOCTOR       |"
              },
              {
                "line": 176,
                "value": "#      | MBBS             |"
              },
              {
                "line": 177,
                "value": "#      | TEST TITLE       |"
              }
            ],
            "line": 178,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I click Agree button \"Terms and Conditions\" confirm screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 22
                }
              ],
              "location": "DieticianSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 181,
            "name": "I clicks on \"Terms and Conditions\" text in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Terms and Conditions",
                  "offset": 13
                }
              ],
              "location": "DieticianSteps.ClickConfirmTexts(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 183,
        "name": "Verify User should be able to navigate to schedule Calendar page",
        "description": "",
        "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-schedule-calendar-page",
        "after": [
          {
            "result": {
              "duration": 1642368600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5004322000,
              "status": "passed"
            },
            "line": 184,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8890096300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 220d8b30-56b5-4a43-8ae1-002d4de12e06\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[contains(@text,\"Schedule Calendar\")]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.CustomerConnectScreen.clickButton(CustomerConnectScreen.java:1741)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.CustomerConnectSteps.clickUploadIcon(CustomerConnectSteps.java:534)\r\n\tat ✽.And I clicks on \"Schedule Calendar\" in app screen(features/sg/health/dietician/Dietician_PositiveFlow.feature:188)\r\n",
              "status": "failed"
            },
            "comments": [
              {
                "line": 185,
                "value": "#    And I verify following texts are displayed"
              },
              {
                "line": 186,
                "value": "#      | Conversation History              |"
              },
              {
                "line": 187,
                "value": "#      | Click To Manage Your Availability |"
              }
            ],
            "line": 188,
            "name": "I clicks on \"Schedule Calendar\" in app screen",
            "match": {
              "arguments": [
                {
                  "val": "Schedule Calendar",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcon(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Calendar"
                ],
                "line": 190
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 191,
            "name": "I Select the Date in calendar field",
            "match": {
              "location": "DieticianSteps.Select_Date_Field()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify Dietician Positive Flow functionality on one pulse App",
    "description": "",
    "id": "verify-dietician-positive-flow-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/health/dietician/Dietician_PositiveFlow.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Dieticians_positive"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 30100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10042563000,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66400,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8481671000,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10728199001,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 326356899,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10015066000,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31203823801,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14765652901,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6637729700,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2464398300,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10321913200,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 992446301,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6022727201,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8744798400,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8007003900,
              "status": "passed"
            },
            "line": 26,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 408313700,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 917063500,
              "status": "passed"
            },
            "line": 29,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 31
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 39300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 34,
        "name": "Verify User should be able to download eMC Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-emc-document",
        "after": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 359794500,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on emc attachment",
            "match": {
              "location": "MyDocSteps.clickEmcAttachment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8683647000,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5049862900,
              "status": "passed"
            },
            "line": 37,
            "name": "I download \"${EMC_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 22000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 39,
        "name": "Verify User should be able to verify the eMC details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-emc-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 984658900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47013801,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/eMC-11th-January-2021-13980.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I verify following details are displayed in PDF File \"${EMC_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${EMC_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Medical Certificate"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 42
              },
              {
                "cells": [
                  "${DOCTOR_NAME}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 44
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 45,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 35300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 29200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 47,
        "name": "Verify User should be able to download Prescription Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-prescription-document",
        "after": [
          {
            "result": {
              "duration": 81300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4404145800,
              "status": "passed"
            },
            "line": 48,
            "name": "I open the Prescription",
            "match": {
              "location": "MyDocSteps.openPrescription()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13488433700,
              "status": "passed"
            },
            "line": 49,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5046516799,
              "status": "passed"
            },
            "line": 50,
            "name": "I download \"${PRE_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 23600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to verify the Prescription details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-prescription-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 1066074700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 697300,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Prescription-11th-January-2021-KJRYHM3H2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:53)\r\n",
              "status": "failed"
            },
            "line": 53,
            "name": "I verify following details are displayed in PDF File \"${PRE_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PRE_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${FIRST_NAME}"
                ],
                "line": 54
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 55
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 56
              },
              {
                "cells": [
                  "${PRESCRPTION_NUMBER}"
                ],
                "line": 57
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 58,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 55300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to download the Referral Document",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-download-the-referral-document",
        "after": [
          {
            "result": {
              "duration": 40299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6257504400,
              "status": "passed"
            },
            "line": 61,
            "name": "I open the referral",
            "match": {
              "location": "MyDocSteps.openReferral()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12931897100,
              "status": "passed"
            },
            "line": 62,
            "name": "I click on download button for attachments",
            "match": {
              "location": "MyDocSteps.clickDownloadButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5033715901,
              "status": "passed"
            },
            "line": 63,
            "name": "I download \"${REF_FILE_NAME}\" pdf file from phone to local machine",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 12
                }
              ],
              "location": "MyDocSteps.openPDFFileDownloaded(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 20299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 65,
        "name": "Verify User should be able to verify the Referral details in downloaded PDF file",
        "description": "",
        "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.;verify-user-should-be-able-to-verify-the-referral-details-in-downloaded-pdf-file",
        "after": [
          {
            "result": {
              "duration": 1065107700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 899500,
              "error_message": "com.prudential.tap.exception.TapException: IO Exception while processing file [C:\\Users\\manishkumar.gidwani\\Automation env setup\\pca-onepulse-app-tests/src/test/resources/reports/summary/Referral-11th-January-2021-KJRYIP3Q2BRB.pdf]\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDfDocument(PdfFileUtil.java:24)\r\n\tat com.prudential.tap.filehandling.PdfFileUtil.getPDFText(PdfFileUtil.java:39)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.verifyPDFText(MyDocConsultationSummary.java:760)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyEMCDetailsInPDF(MyDocSteps.java:504)\r\n\tat ✽.Then I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"(features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "I verify following details are displayed in PDF File \"${REF_FILE_NAME}\"",
            "match": {
              "arguments": [
                {
                  "val": "${REF_FILE_NAME}",
                  "offset": 54
                }
              ],
              "location": "MyDocSteps.verifyEMCDetailsInPDF(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${EPISODE ID}"
                ],
                "line": 67
              },
              {
                "cells": [
                  "${NRIC_NUMBER}"
                ],
                "line": 68
              },
              {
                "cells": [
                  "${PRESCRIPTION_DOCTOR_NAME}"
                ],
                "line": 69
              },
              {
                "cells": [
                  "${REFERRAL_NUMBER}"
                ],
                "line": 70
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I close the file attachment",
            "match": {
              "location": "MyDocSteps.closeEmc()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 73,
            "name": "I logout from onepulse app",
            "match": {
              "location": "WealthSteps.iLogoutFromOnepulseApp()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able to Download as PDF Files \u0026 Validate the details in downloaded Mydoc Documents.",
    "description": "",
    "id": "verify-user-should-be-able-to-download-as-pdf-files-\u0026-validate-the-details-in-downloaded-mydoc-documents.",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocAllAttachmentsFromDoctor.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MydocDocsDownload"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 17400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 7,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 58499,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8870179300,
              "status": "passed"
            },
            "line": 8,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60600,
              "status": "passed"
            },
            "line": 9,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7999192400,
              "status": "passed"
            },
            "line": 10,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10216770100,
              "status": "passed"
            },
            "line": 11,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 339948500,
              "status": "passed"
            },
            "line": 14,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10012782999,
              "status": "passed"
            },
            "line": 15,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30235788701,
              "status": "passed"
            },
            "line": 16,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13908090099,
              "status": "passed"
            },
            "line": 17,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6909923700,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2013996000,
              "status": "passed"
            },
            "line": 19,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 20
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 21
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10348979000,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 206456901,
              "status": "passed"
            },
            "line": 23,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7800365701,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32301,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 27,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 28601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8827137400,
              "status": "passed"
            },
            "line": 28,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 326162300,
              "status": "passed"
            },
            "line": 29,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 959777299,
              "status": "passed"
            },
            "line": 31,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${REF_FILE_NAME}"
                ],
                "line": 32
              },
              {
                "cells": [
                  "${PRE_FILE_NAME}"
                ],
                "line": 33
              },
              {
                "cells": [
                  "${mc.file.name}"
                ],
                "line": 34
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20121351501,
              "status": "passed"
            },
            "line": 35,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4596950200,
              "status": "passed"
            },
            "line": 36,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5011117500,
              "status": "passed"
            },
            "line": 37,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4604938001,
              "status": "passed"
            },
            "line": 38,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5013490300,
              "status": "passed"
            },
            "line": 39,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4609605800,
              "status": "passed"
            },
            "line": 40,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4196572101,
              "status": "passed"
            },
            "line": 41,
            "name": "I navigate to online consultation screen for mydoc registration",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreenForMydocRegistration()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 43,
        "name": "Verify User should be presented with the Mydoc Chat bot questions log",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-presented-with-the-mydoc-chat-bot-questions-log",
        "after": [
          {
            "result": {
              "duration": 2376746201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 7900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 91139344600,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tChoking text is displayed on page  expected [true] but found [false],\n\tBreathing difficulty text is displayed on page  expected [true] but found [false],\n\tChest pain text is displayed on page  expected [true] but found [false],\n\tWeakness in arms or legs text is displayed on page  expected [true] but found [false],\n\tSpeech difficulty text is displayed on page  expected [true] but found [false],\n\tLoss of consciousness text is displayed on page  expected [true] but found [false],\n\tSuicidal or homicidal thoughts text is displayed on page  expected [true] but found [false],\n\tSeizures text is displayed on page  expected [true] but found [false],\n\tBleeding text is displayed on page  expected [true] but found [false],\n\tSevere pain text is displayed on page  expected [true] but found [false],\n\tConfusion and/or hallucinations text is displayed on page  expected [true] but found [false],\n\tBroken bones text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:44)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 44,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 52
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 53
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 54
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 55
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User can able to chat with Mydoc Chat bot",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-can-able-to-chat-with-mydoc-chat-bot",
        "after": [
          {
            "result": {
              "duration": 2433678800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13042506601,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0143f523-4168-401a-8f23-c2a187351e49\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027None of the above\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.handleEmergencySymptomQues(MyDocMedicalProfileScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.handleEmergencySymptomQues(MyDocSteps.java:179)\r\n\tat ✽.When Handle Emergency symptoms questions for doctor consult(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 60,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 62,
        "name": "Verify User should be able to update the medical profile for registered user",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-update-the-medical-profile-for-registered-user",
        "after": [
          {
            "result": {
              "duration": 2476582200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19715283599,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0143f523-4168-401a-8f23-c2a187351e49\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.enterMedicalProfile(MyDocMedicalProfileScreen.java:83)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterMedicalProfileDetails(MyDocSteps.java:186)\r\n\tat ✽.When I enter Medical Profile details as below(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:63)\r\n",
              "status": "failed"
            },
            "line": 63,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 65
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 66
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 68
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 69,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 45501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 2154871300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 78221259100,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:72)\r\n",
              "status": "failed"
            },
            "line": 72,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 73
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 74
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 75
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 76
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 77
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 78
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 79
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 80
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 81
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 82
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 84,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 86,
        "name": "Verify User should be able to select payment with existing added card",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-select-payment-with-existing-added-card",
        "after": [
          {
            "result": {
              "duration": 2096325599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10013895800,
              "status": "passed"
            },
            "line": 87,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 35262586101,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0143f523-4168-401a-8f23-c2a187351e49\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Visa\u0027]/following::android.widget.Image[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyPaymentUsingExistingAddedCard(MyDocPaymentDetailsScreen.java:155)\r\n\tat com.onepulse.app.stepdefinitions.mydocuisteps.MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard(MyDocUiSteps.java:158)\r\n\tat ✽.When I select the confirm payment using already added card(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:88)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 88,
            "name": "I select the confirm payment using already added card",
            "match": {
              "location": "MyDocUiSteps.iSelectTheConfirmPaymentUsingAlreadyAddedCard()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 90,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 2102037400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 25177382199,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0143f523-4168-401a-8f23-c2a187351e49\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.EditText}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:73)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:91)\r\n",
              "status": "failed"
            },
            "line": 91,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 92
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 93
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 96
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 99
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 104
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 105
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 106
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 107
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 108
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 111,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 112
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 114,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 2314227900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 58101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5006391500,
              "status": "passed"
            },
            "line": 115,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 91286086200,
              "status": "passed"
            },
            "line": 116,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74687324701,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 0143f523-4168-401a-8f23-c2a187351e49\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.ScrollView/android.view.ViewGroup/android.view.ViewGroup[3]/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:142)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/sg/health/mydoc/MyDocConsultationSummaryTest.feature:117)\r\n",
              "status": "failed"
            },
            "line": 117,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 118,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 119,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc doctor consultation Summary on Pulse Health \u0026 Wealth app",
    "description": "1. Verify Consultation History Screen\r\n2. Verify All My Files Documents\r\n3. Verify User able to Complete Mydoc Journey Without Mydoc Registration (Existing user)",
    "id": "verify-mydoc-doctor-consultation-summary-on-pulse-health-\u0026-wealth-app",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocConsultationSummaryTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@MydocConsultationSummary"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 13101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 53,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 888684300,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 30501,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 388200,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27000,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9215456999,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17027655801,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7659442400,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 10
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 13
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 252812700,
              "status": "passed"
            },
            "line": 14,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10004553900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 15,
                "value": "# Then I wait for 45 sec"
              }
            ],
            "line": 16,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31735768200,
              "status": "passed"
            },
            "line": 17,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000341000,
              "status": "passed"
            },
            "line": 18,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10867210300,
              "status": "passed"
            },
            "line": 19,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "81069586"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8365698201,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 22,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427650699,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5885210200,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 257896500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 25,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 26,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 27,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1342015300,
              "status": "passed"
            },
            "line": 28,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5321160100,
              "status": "passed"
            },
            "line": 29,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1103175099,
              "status": "passed"
            },
            "line": 30,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8762815900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 31,
                "value": "# And I enter my height and weight details"
              }
            ],
            "line": 32,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 552745601,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8303421600,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/health/mydoc/MyDocEndToEndTest.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I click \"${reg.tracker.connect}\" button on the app",
            "match": {
              "arguments": [
                {
                  "val": "${reg.tracker.connect}",
                  "offset": 9
                }
              ],
              "location": "WealthSteps.iClickButtonOnTheApp(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 46,
                "value": "#And I click the continue button"
              }
            ],
            "line": 47,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyDocEndToEndTest"
          },
          {
            "line": 1,
            "name": "@OnepulseRegression"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 104000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 91099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the online consultation screen user fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields",
        "after": [
          {
            "result": {
              "duration": 68000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17488926100,
              "status": "passed"
            },
            "line": 57,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13775516000,
              "status": "passed"
            },
            "line": 58,
            "name": "I clicks on Health button",
            "match": {
              "location": "MyDocUiSteps.iClicksOnHealthButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45704102300,
              "status": "passed"
            },
            "line": 59,
            "name": "I navigate to online consultation screen",
            "match": {
              "location": "MyDocUiSteps.iNavigateToOnlineConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4813997200,
              "status": "passed"
            },
            "line": 60,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 61,
                    "value": "##Gender and DOB validation in below step is not covered for IOS due to locator issue"
                  }
                ],
                "cells": [
                  "Online Consultation"
                ],
                "line": 62
              },
              {
                "cells": [
                  "First Name / Given Name"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Last Name / Family Name"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Email"
                ],
                "line": 65
              },
              {
                "cells": [
                  "County of Residence"
                ],
                "line": 66
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4477242699,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "#  Then I select gender and date of birth for newly registered user"
              }
            ],
            "line": 68,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify the online consultation screen user fields after swipe down",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-the-online-consultation-screen-user-fields-after-swipe-down",
        "after": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4515375600,
              "status": "passed"
            },
            "line": 72,
            "name": "I scroll down",
            "match": {
              "location": "BaseSteps.scrollDown()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1402274999,
              "status": "passed"
            },
            "line": 73,
            "name": "user verify the following texts are displayed on \"Online Consultation\" registration page",
            "match": {
              "arguments": [
                {
                  "val": "Online Consultation",
                  "offset": 50
                }
              ],
              "location": "MyDocUiSteps.userVerifyTheFollowingTextsAreDisplayedOnRegistrationPage(String,DataTable)"
            },
            "rows": [
              {
                "comments": [
                  {
                    "line": 74,
                    "value": "# |Address (city)          |"
                  }
                ],
                "cells": [
                  "Address (zipcode)"
                ],
                "line": 75
              },
              {
                "cells": [
                  "NRIC/FIN"
                ],
                "line": 76
              },
              {
                "cells": [
                  "NRIC/FIN Image"
                ],
                "line": 77
              },
              {
                "cells": [
                  "Phone"
                ],
                "line": 78
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 42100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 80,
        "name": "Verify User should be able to enter address and zipcode",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-enter-address-and-zipcode",
        "after": [
          {
            "result": {
              "duration": 70600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8528978100,
              "status": "passed"
            },
            "line": 81,
            "name": "I enter \"${address}\" and \"${zipcode}\"",
            "match": {
              "arguments": [
                {
                  "val": "${address}",
                  "offset": 9
                },
                {
                  "val": "${zipcode}",
                  "offset": 26
                }
              ],
              "location": "MyDocUiSteps.iEnterAnd(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 110601,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 83,
        "name": "Verify User should be able to upload NRIC Image in Online Consultation screen",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-upload-nric-image-in-online-consultation-screen",
        "after": [
          {
            "result": {
              "duration": 41801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 8200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5011973700,
              "status": "passed"
            },
            "line": 84,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 45015535299,
              "status": "passed"
            },
            "line": 85,
            "name": "I enter the mandatory fields \"${NRIC}\"",
            "match": {
              "arguments": [
                {
                  "val": "${NRIC}",
                  "offset": 30
                }
              ],
              "location": "MyDocUiSteps.iEnterTheMandatoryFields(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41279680599,
              "status": "passed"
            },
            "line": 86,
            "name": "I verify the \"${phonenumber}\" and proceed with \"${otp}\"",
            "match": {
              "arguments": [
                {
                  "val": "${phonenumber}",
                  "offset": 14
                },
                {
                  "val": "${otp}",
                  "offset": 48
                }
              ],
              "location": "MyDocUiSteps.iVerifyTheAndProceedWith(String,String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 28999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be presented with the symptoms checker questions log",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-symptoms-checker-questions-log",
        "after": [
          {
            "result": {
              "duration": 1192607999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 97190247200,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tChoking text is displayed on page  expected [true] but found [false],\n\tBreathing difficulty text is displayed on page  expected [true] but found [false],\n\tChest pain text is displayed on page  expected [true] but found [false],\n\tWeakness in arms or legs text is displayed on page  expected [true] but found [false],\n\tSpeech difficulty text is displayed on page  expected [true] but found [false],\n\tLoss of consciousness text is displayed on page  expected [true] but found [false],\n\tSuicidal or homicidal thoughts text is displayed on page  expected [true] but found [false],\n\tSeizures text is displayed on page  expected [true] but found [false],\n\tBleeding text is displayed on page  expected [true] but found [false],\n\tSevere pain text is displayed on page  expected [true] but found [false],\n\tConfusion and/or hallucinations text is displayed on page  expected [true] but found [false],\n\tBroken bones text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocEndToEndTest.feature:89)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 89,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Choking"
                ],
                "line": 90
              },
              {
                "cells": [
                  "Breathing difficulty"
                ],
                "line": 91
              },
              {
                "cells": [
                  "Chest pain"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Weakness in arms or legs"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Speech difficulty"
                ],
                "line": 94
              },
              {
                "cells": [
                  "Loss of consciousness"
                ],
                "line": 95
              },
              {
                "cells": [
                  "Suicidal or homicidal thoughts"
                ],
                "line": 96
              },
              {
                "cells": [
                  "Seizures"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Bleeding"
                ],
                "line": 98
              },
              {
                "cells": [
                  "Severe pain"
                ],
                "line": 99
              },
              {
                "cells": [
                  "Confusion and/or hallucinations"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Broken bones"
                ],
                "line": 101
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 103,
        "name": "Verify User can able to chat with chatbot symptoms checker",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-can-able-to-chat-with-chatbot-symptoms-checker",
        "after": [
          {
            "result": {
              "duration": 992654699,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13827592900,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027None of the above\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.handleEmergencySymptomQues(MyDocMedicalProfileScreen.java:54)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.handleEmergencySymptomQues(MyDocSteps.java:179)\r\n\tat ✽.When Handle Emergency symptoms questions for doctor consult(features/sg/health/mydoc/MyDocEndToEndTest.feature:104)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 104,
            "name": "Handle Emergency symptoms questions for doctor consult",
            "match": {
              "location": "MyDocSteps.handleEmergencySymptomQues()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14801,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 106,
        "name": "Verify User should be presented with the sample text on the Medical Profile screen as a first time user",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-presented-with-the-sample-text-on-the-medical-profile-screen-as-a-first-time-user",
        "after": [
          {
            "result": {
              "duration": 1248213700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8303308699,
              "status": "passed"
            },
            "line": 107,
            "name": "Verify Medical Profile screen is displayed",
            "match": {
              "location": "MyDocSteps.verifyMedicalProfileScreenDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2643370800,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.onepulse.app.screens.TestBasePage.getElementText(TestBasePage.java:254)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.validateMedProfSampleText(MyDocMedicalProfileScreen.java:171)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.validateMedProfSampleText(MyDocSteps.java:671)\r\n\tat ✽.And Verify the Sample Text on the text fields of the Medical Profile(features/sg/health/mydoc/MyDocEndToEndTest.feature:108)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 108,
            "name": "Verify the Sample Text on the text fields of the Medical Profile",
            "match": {
              "location": "MyDocSteps.validateMedProfSampleText(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "Enter \u0027None\u0027 if no allergies"
                ],
                "line": 109
              },
              {
                "cells": [
                  "Medical Conditions",
                  "Enter \u0027None\u0027 if no medical conditions"
                ],
                "line": 110
              },
              {
                "cells": [
                  "Medications",
                  "Enter \u0027None\u0027 if no medications"
                ],
                "line": 111
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 113,
        "name": "Verify User should be able to create the medical profile",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-create-the-medical-profile",
        "after": [
          {
            "result": {
              "duration": 1003195001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18507471200,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Allergies\u0027]/following::android.widget.EditText[1]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$16.executeCommand(Commands.java:148)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:260)\r\n\tat com.onepulse.app.screens.mydoc.MyDocMedicalProfileScreen.enterMedicalProfile(MyDocMedicalProfileScreen.java:83)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterMedicalProfileDetails(MyDocSteps.java:186)\r\n\tat ✽.When I enter Medical Profile details as below(features/sg/health/mydoc/MyDocEndToEndTest.feature:114)\r\n",
              "status": "failed"
            },
            "line": 114,
            "name": "I enter Medical Profile details as below",
            "match": {
              "location": "MyDocSteps.enterMedicalProfileDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Allergies",
                  "None"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Medical Conditions",
                  "None"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Medications",
                  "None"
                ],
                "line": 117
              },
              {
                "cells": [
                  "EmergencyContact Name",
                  "Pulse QA"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Emergency Contact Name",
                  "Pulse"
                ],
                "line": 119
              },
              {
                "cells": [
                  "Emergency Contact Number",
                  "98066613"
                ],
                "line": 120
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 121,
            "name": "I click on Medical Profile Continue button",
            "match": {
              "location": "MyDocSteps.clickContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 123,
        "name": "Verify User should be able to see the payment screen fields",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-see-the-payment-screen-fields",
        "after": [
          {
            "result": {
              "duration": 1042969700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 84256276000,
              "error_message": "java.lang.AssertionError: The following asserts failed:\n\tPayment text is displayed on page  expected [true] but found [false],\n\tTeleconsultation text is displayed on page  expected [true] but found [false],\n\tPayment Method text is displayed on page  expected [true] but found [false],\n\tCredit/Debit Card text is displayed on page  expected [true] but found [false],\n\tVoucher text is displayed on page  expected [true] but found [false],\n\tThe fee covers a video consultation.. text is displayed on page  expected [true] but found [false],\n\tThe cost of medication is not included. text is displayed on page  expected [true] but found [false],\n\tWhen will I be charged? text is displayed on page  expected [true] but found [false],\n\tThe amount will be charged to your card after the video consultation concludes. text is displayed on page  expected [true] but found [false],\n\tTotal Amount text is displayed on page  expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.verifyTextsOnScreen(MyDocSteps.java:717)\r\n\tat ✽.And I verify following texts are displayed(features/sg/health/mydoc/MyDocEndToEndTest.feature:124)\r\n",
              "status": "failed"
            },
            "line": 124,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Payment"
                ],
                "line": 125
              },
              {
                "cells": [
                  "Teleconsultation"
                ],
                "line": 126
              },
              {
                "cells": [
                  "Payment Method"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Credit/Debit Card"
                ],
                "line": 128
              },
              {
                "cells": [
                  "Voucher"
                ],
                "line": 129
              },
              {
                "cells": [
                  "The fee covers a video consultation.."
                ],
                "line": 130
              },
              {
                "cells": [
                  "The cost of medication is not included."
                ],
                "line": 131
              },
              {
                "cells": [
                  "When will I be charged?"
                ],
                "line": 132
              },
              {
                "cells": [
                  "The amount will be charged to your card after the video consultation concludes."
                ],
                "line": 133
              },
              {
                "cells": [
                  "Total Amount"
                ],
                "line": 134
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I read the amount and stored into variable \"PAYMENT_AMOUNT\"",
            "match": {
              "arguments": [
                {
                  "val": "PAYMENT_AMOUNT",
                  "offset": 44
                }
              ],
              "location": "MyDocUiSteps.iReadTheAmountAndStoredIntoVariable(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "line": 136,
            "name": "I click on Continue button",
            "match": {
              "location": "MyDocUiSteps.iClickOnContinueButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 138,
        "name": "Verify User should be able enter the card details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-enter-the-card-details",
        "after": [
          {
            "result": {
              "duration": 1021964900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8039887300,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Add new cards\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.clickAddNewCardButton(MyDocPaymentDetailsScreen.java:92)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.clickAddNewCardButton(MyDocSteps.java:308)\r\n\tat ✽.When I click on Add New Card button(features/sg/health/mydoc/MyDocEndToEndTest.feature:140)\r\n",
              "status": "failed"
            },
            "line": 140,
            "name": "I click on Add New Card button",
            "match": {
              "location": "MyDocSteps.clickAddNewCardButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "user verify add card details screen fields",
            "match": {
              "location": "MyDocSteps.userVerifyAddCardDetailsScreenFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Pay with card"
                ],
                "line": 142
              },
              {
                "cells": [
                  "Card Number"
                ],
                "line": 143
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 144,
            "name": "I enter Card details as below",
            "match": {
              "location": "MyDocSteps.enterCardDetailsDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card Number",
                  "4111 1111 1111 1111"
                ],
                "line": 145
              },
              {
                "cells": [
                  "Expiration Date",
                  "0822"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Card Number Android",
                  "4111 1111 1111 1111"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Expiration Date Android",
                  "08 / 22"
                ],
                "line": 148
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "I click on Confirm Payment Method button",
            "match": {
              "location": "MyDocSteps.clickConfirmPaymentMethodButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 150,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 19200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 152,
        "name": "Verify User should be able see the added card successfully",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-added-card-successfully",
        "after": [
          {
            "result": {
              "duration": 997175201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8112821301,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.view.View[@text\u003d\u0027Online Video Consultation\u0027]/preceding::android.view.ViewGroup[2]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPaymentDetailsScreen.verifyAddedCard(MyDocPaymentDetailsScreen.java:139)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.iVerifyTheMyCardAddedSuccessfully(MyDocSteps.java:819)\r\n\tat ✽.Then I verify the my card added successfully(features/sg/health/mydoc/MyDocEndToEndTest.feature:153)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "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",
                "mime_type": "image/png"
              }
            ],
            "line": 153,
            "name": "I verify the my card added successfully",
            "match": {
              "location": "MyDocSteps.iVerifyTheMyCardAddedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 155,
        "name": "Verify User should be able to start online pre consultation",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-to-start-online-pre-consultation",
        "after": [
          {
            "result": {
              "duration": 1482892201,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1311402800,
              "error_message": "org.openqa.selenium.InvalidElementStateException: Cannot set the element to \u0027Feverish\u0027. Did you interact with the correct element?\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)\r\n\tat io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45)\r\n\tat io.appium.java_client.MobileElement.execute(MobileElement.java:1)\r\n\tat io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:100)\r\n\tat com.prudential.tap.selenium.Commands$12.executeCommand(Commands.java:116)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.setTextWithTab(TestBasePage.java:261)\r\n\tat com.onepulse.app.screens.mydoc.MyDocPreConsultationScreen.fillPreconsultationForm(MyDocPreConsultationScreen.java:73)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.enterDetailsForPreConsulationForm(MyDocSteps.java:247)\r\n\tat ✽.And I response to the pre consultation questions(features/sg/health/mydoc/MyDocEndToEndTest.feature:156)\r\n",
              "status": "failed"
            },
            "line": 156,
            "name": "I response to the pre consultation questions",
            "match": {
              "location": "MyDocSteps.enterDetailsForPreConsulationForm(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "firstResponse",
                  "Feverish"
                ],
                "line": 157
              },
              {
                "cells": [
                  "secondResponse",
                  "Couple of days"
                ],
                "line": 158
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "What concerns or questions do you have for the doctor?"
                ],
                "line": 160
              },
              {
                "cells": [
                  "Feverish"
                ],
                "line": 161
              },
              {
                "cells": [
                  "How long has this been a concern?"
                ],
                "line": 162
              },
              {
                "cells": [
                  "Couple of days"
                ],
                "line": 163
              },
              {
                "cells": [
                  "Any further details you would like to add?"
                ],
                "line": 164
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "verify user should be prompted to select No or Yes options to type further details",
            "match": {
              "location": "MyDocSteps.verifyPresenceOfButtonsOnPreConsultationScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I click on No button",
            "match": {
              "location": "MyDocSteps.clickNoButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Please Note"
                ],
                "line": 169
              },
              {
                "cells": [
                  "Make sure you are in an area where your device has good internet connectivity."
                ],
                "line": 170
              },
              {
                "cells": [
                  "Once the request for consultation is sent, it cannot be recalled or cancelled."
                ],
                "line": 171
              },
              {
                "cells": [
                  "The Average wait time for a consultation to start is 10-20 minutes."
                ],
                "line": 172
              },
              {
                "cells": [
                  "Please ensure that the notification function is switched on to ensure you get appointment confirmation, reminder and alerts from the doctor and medical concierge."
                ],
                "line": 173
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 174,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I click on submit button",
            "match": {
              "location": "MyDocSteps.clickSubmitButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "line": 176,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Request sent! We will notify you when your doctor confirms the request."
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12701,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 179,
        "name": "Verify User should be able see the allocated doctor details",
        "description": "",
        "id": "verify-mydoc-functionality-on-pulse-health;verify-user-should-be-able-see-the-allocated-doctor-details",
        "after": [
          {
            "result": {
              "duration": 1026258900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4999384801,
              "status": "passed"
            },
            "line": 180,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 88596326300,
              "status": "passed"
            },
            "line": 181,
            "name": "I click on MyDoc Back button",
            "match": {
              "location": "MyDocSteps.clickMyDocBackButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76171820999,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: d5bfbd50-eab2-4e86-9be2-b0d6e6a0cdf4\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.ScrollView/android.view.ViewGroup/android.view.ViewGroup[3]/android.view.ViewGroup/android.view.ViewGroup/android.view.ViewGroup}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.mydoc.MyDocConsultationSummary.naviGateToMyDocConsultationSummary(MyDocConsultationSummary.java:142)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.MyDocSteps.naviGateToMyDocConsultationSummary(MyDocSteps.java:361)\r\n\tat ✽.When I access health Consultation Summary(features/sg/health/mydoc/MyDocEndToEndTest.feature:182)\r\n",
              "status": "failed"
            },
            "line": 182,
            "name": "I access health Consultation Summary",
            "match": {
              "location": "MyDocSteps.naviGateToMyDocConsultationSummary()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d",
                "mime_type": "image/png"
              }
            ],
            "comments": [
              {
                "line": 183,
                "value": "#Assigned doctor name validation in below step is not covered for IOS due to locator issue"
              }
            ],
            "line": 184,
            "name": "I click on Consultation History and get assigned doctor name into variable \"DOCTOR_NAME\"",
            "match": {
              "arguments": [
                {
                  "val": "DOCTOR_NAME",
                  "offset": 76
                }
              ],
              "location": "MyDocSteps.clickConsultationHistoryAndGetAssignedDoctor(String)"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MyDoc functionality on Pulse Health",
    "description": "",
    "id": "verify-mydoc-functionality-on-pulse-health",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/MyDocEndToEndTest.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyDocEndToEndTest"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10001,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to navigate to Consultation Summary and see all available Files",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-navigate-to-consultation-summary-and-see-all-available-files",
        "after": [
          {
            "result": {
              "duration": 73299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8554603600,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72300,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.id.mydoc}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.id.mydoc}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 51
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8964726200,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10693388500,
              "status": "passed"
            },
            "line": 8,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 9
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 295525401,
              "status": "passed"
            },
            "line": 11,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10007927301,
              "status": "passed"
            },
            "line": 12,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31045631800,
              "status": "passed"
            },
            "line": 13,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14531126200,
              "status": "passed"
            },
            "line": 14,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6995331400,
              "status": "passed"
            },
            "line": 15,
            "name": "I navigate to medical records screen",
            "match": {
              "location": "MyDocSteps.iNavigateToMedicalRecordsScreen()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1926811899,
              "status": "passed"
            },
            "line": 16,
            "name": "User verify following texts are displayed in medical records screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingTextsAreDisplayedInMedicalRecordsScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 17
              },
              {
                "cells": [
                  "All My Files"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10298010600,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on Consultation History link",
            "match": {
              "location": "MyDocSteps.clickConsultHistory()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 268727800,
              "status": "passed"
            },
            "line": 20,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Consultation History"
                ],
                "line": 21
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9972220700,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on Consultation History screen back button",
            "match": {
              "location": "MyDocSteps.iClickOnConsultationHistoryScreenBackButton()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 24,
        "name": "Verify User should be able to see the Referral,Prescription and eMC Documents",
        "description": "",
        "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen;verify-user-should-be-able-to-see-the-referral,prescription-and-emc-documents",
        "after": [
          {
            "result": {
              "duration": 24200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7697714401,
              "status": "passed"
            },
            "line": 25,
            "name": "I click on All My Files link",
            "match": {
              "location": "MyDocSteps.clickAllMyFiles()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 332415200,
              "status": "passed"
            },
            "line": 26,
            "name": "I verify following texts are displayed",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "All My Files"
                ],
                "line": 27
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998499101,
              "status": "passed"
            },
            "line": 28,
            "name": "User verify following documents are displayed in All My Files Screen",
            "match": {
              "location": "MyDocSteps.userVerifyFollowingDocumentsAreDisplayedInAllMyFilesScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Referral-11th-January-2021-KJRYIP3Q2BRB.pdf"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Prescription-11th-January-2021-KJRYHM3H2BRB.pdf"
                ],
                "line": 30
              },
              {
                "cells": [
                  "eMC-11th-January-2021-13980.pdf"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19859030601,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on Consultation Summary back button",
            "match": {
              "location": "MyDocSteps.clickOnBackButton()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify User should be able see all available documents in All My Files screen",
    "description": "",
    "id": "verify-user-should-be-able-see-all-available-documents-in-all-my-files-screen",
    "keyword": "Feature",
    "uri": "features/sg/health/mydoc/PulseMyDocFileValidation.feature",
    "tags": [
      {
        "line": 1,
        "name": "@FileValidation"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 16400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 56,
        "name": "Verify the Home screen validation using \"Continue with Email\"",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-the-home-screen-validation-using-\"continue-with-email\";;2",
        "after": [
          {
            "result": {
              "duration": 682519700,
              "error_message": "com.prudential.tap.exception.TapException: Failed to take screenshot of \r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.takeScreenshotOfFailedTestCases(CucumberHook.java:95)\r\n\tat com.onepulse.app.cucumberhooks.CucumberHook.afterTest(CucumberHook.java:72)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)\r\n\tat cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)\r\n\tat cucumber.runtime.Runtime.runHooks(Runtime.java:212)\r\n\tat cucumber.runtime.Runtime.runAfterHooks(Runtime.java:206)\r\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)\r\n\tat cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)\r\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\r\n\tat cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)\r\n\tat com.onepulse.app.runner.CucumberRunner.feature(CucumberRunner.java:95)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\r\n\tat org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\r\n\tat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\r\n\tat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:782)\r\n\tat org.testng.TestRunner.run(TestRunner.java:632)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:268)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\r\n\tat org.testng.TestNG.run(TestNG.java:1064)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109)\r\n",
              "status": "failed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 437400,
              "status": "passed"
            },
            "line": 5,
            "name": "I generate random number and assign to variable \"RANDOM_NUMBER\"",
            "match": {
              "arguments": [
                {
                  "val": "RANDOM_NUMBER",
                  "offset": 49
                }
              ],
              "location": "ConfigvariableSteps.generateRandomNumberAndAssignToVariable(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"pulse${RANDOM_NUMBER}@mailsac.com\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "pulse${RANDOM_NUMBER}@mailsac.com",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 58
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8756666299,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17305689400,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2005448299,
              "status": "passed"
            },
            "line": 9,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 456561500,
              "status": "passed"
            },
            "line": 10,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4993882600,
              "status": "passed"
            },
            "line": 11,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7632267001,
              "status": "passed"
            },
            "comments": [
              {
                "line": 12,
                "value": "#   Then I change the language as required on registration page"
              }
            ],
            "line": 13,
            "name": "user enters registration details",
            "match": {
              "location": "RegistrationSteps.enterRegistrationDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "FirstName",
                  "Diet"
                ],
                "line": 14
              },
              {
                "cells": [
                  "LastName",
                  "Test"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Email",
                  "${PULSE_EMAIL}"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Password",
                  "Pas$1234"
                ],
                "line": 17
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 310645100,
              "status": "passed"
            },
            "line": 18,
            "name": "taps on continue \"Sign_Up\" button",
            "match": {
              "arguments": [
                {
                  "val": "Sign_Up",
                  "offset": 18
                }
              ],
              "location": "RegistrationSteps.clickOnContinue(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9994814400,
              "status": "passed"
            },
            "line": 19,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30519347900,
              "status": "passed"
            },
            "line": 20,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5005309601,
              "status": "passed"
            },
            "line": 21,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10226608400,
              "status": "passed"
            },
            "line": 22,
            "name": "I enter the \"mobile number\" in welcome to pulse",
            "match": {
              "arguments": [
                {
                  "val": "mobile number",
                  "offset": 13
                }
              ],
              "location": "RegistrationSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8444129500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 24,
                "value": "#    And I click the continue button"
              }
            ],
            "line": 25,
            "name": "I choose my wellness goals under wellness plan screen",
            "match": {
              "location": "RegistrationSteps.iChooseMyWellnessGoalsUnderWellnessPlanScreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422587201,
              "status": "passed"
            },
            "line": 26,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5862105800,
              "status": "passed"
            },
            "line": 27,
            "name": "I click the date in Date of Birth field",
            "match": {
              "location": "RegistrationSteps.enterDateOfBirth()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 270549300,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#    And I Select the \"mobile number\" in welcome to pulse"
              },
              {
                "line": 29,
                "value": "#      | mobileNumber | 13 |"
              }
            ],
            "line": 30,
            "name": "I click the Done icon",
            "match": {
              "location": "RegistrationSteps.doneButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1296659300,
              "status": "passed"
            },
            "line": 31,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5907354801,
              "status": "passed"
            },
            "line": 32,
            "name": "I select the  Male icon",
            "match": {
              "location": "RegistrationSteps.MaleImage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1044862600,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8329655900,
              "status": "passed"
            },
            "comments": [
              {
                "line": 34,
                "value": "#  And I enter my height and weight details"
              }
            ],
            "line": 35,
            "name": "I click on Calculate BMI button",
            "match": {
              "location": "RegistrationSteps.iClickOnCalculateBMIButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 460351501,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8431282699,
              "error_message": "org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.12.0\u0027, revision: \u00277c6e0b3\u0027, time: \u00272018-05-08T14:04:26.12Z\u0027\nSystem info: host: \u0027TM003LSIN\u0027, ip: \u0027192.168.1.124\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.2\u0027\nDriver info: io.appium.java_client.android.AndroidDriver\nCapabilities {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, databaseEnabled: false, desired: {appActivity: com.prudential.pulse.MainAc..., appPackage: com.prudential.pulse.uat, autoDismissAlerts: true, automationName: UiAutomator2, deviceName: Android-Test, newCommandTimeout: 10000, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 5, deviceName: 0C241FDD40043P, deviceScreenDensity: 440, deviceScreenSize: 1080x2340, deviceUDID: 0C241FDD40043P, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, newCommandTimeout: 10000, noReset: true, pixelRatio: 2.75, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 145, takesScreenshot: true, viewportRect: {height: 2015, left: 0, top: 145, width: 1080}, warnings: {}, webStorageEnabled: false}\nSession ID: 01d351ff-38a1-45d0-a2c2-201025d7c271\n*** Element info: {Using\u003dxpath, value\u003d//android.widget.TextView[@text\u003d\u0027Light Exercise\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor24.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:231)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)\r\n\tat io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElementByXPath(DefaultGenericMobileDriver.java:152)\r\n\tat io.appium.java_client.AppiumDriver.findElementByXPath(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElementByXPath(AndroidDriver.java:1)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309)\r\n\tat io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)\r\n\tat io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)\r\n\tat io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)\r\n\tat com.prudential.tap.selenium.Commands$15.executeCommand(Commands.java:141)\r\n\tat com.prudential.tap.selenium.ExecuteCommand.executeCommand(ExecuteCommand.java:19)\r\n\tat com.onepulse.app.screens.TestBasePage.clickButton(TestBasePage.java:163)\r\n\tat com.onepulse.app.screens.PulseRegistrationScreen.clickLightExercise(PulseRegistrationScreen.java:943)\r\n\tat com.onepulse.app.stepdefinitions.mobilesteps.RegistrationSteps.iSelectTheInDoingExercise(RegistrationSteps.java:216)\r\n\tat ✽.And I select the \"How active are you?\" in doing exercise(features/sg/home/mycontent/MyContent.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "I select the \"How active are you?\" in doing exercise",
            "match": {
              "arguments": [
                {
                  "val": "How active are you?",
                  "offset": 14
                }
              ],
              "location": "RegistrationSteps.iSelectTheInDoingExercise(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I select my favorite food dietary",
            "match": {
              "location": "RegistrationSteps.iSelectMyFavoriteFoodDietary()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I answer as \"Yes\" to \"Food Allergies are common?\"",
            "match": {
              "arguments": [
                {
                  "val": "Yes",
                  "offset": 13
                },
                {
                  "val": "Food Allergies are common?",
                  "offset": 22
                }
              ],
              "location": "RegistrationSteps.iAnswerAsTo(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I verify that \"Tracking your activity is trending\" is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Tracking your activity is trending",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.iVerifyThatIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I click the continue button",
            "match": {
              "location": "RegistrationSteps.continueButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I see that \"Welcome to Pulse\" text is displayed",
            "match": {
              "arguments": [
                {
                  "val": "Welcome to Pulse",
                  "offset": 12
                }
              ],
              "location": "RegistrationSteps.iSeeThatTextIsDisplayed(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I see that fitness subscription exclusive offers screen is displayed",
            "match": {
              "location": "RegistrationSteps.iSeeThatFitnessSubscriptionExclusiveOffersScreenIsDisplayed()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I click on close icon",
            "match": {
              "location": "RegistrationSteps.iClickOnCloseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I enter NRIC number last 4 digits \"122F\"",
            "match": {
              "arguments": [
                {
                  "val": "4",
                  "offset": 25
                },
                {
                  "val": "122F",
                  "offset": 35
                }
              ],
              "location": "RegistrationSteps.iEnterNRICNumberLastDigits(int,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 49,
                "value": "# And I click the continue button"
              }
            ],
            "line": 50,
            "name": "I click skip buttons",
            "match": {
              "location": "LoginSteps.iClickSkipsButton()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@pulseRegression"
          },
          {
            "line": 1,
            "name": "@sanity"
          },
          {
            "line": 1,
            "name": "@OnePulseRegression"
          },
          {
            "line": 1,
            "name": "@OPUATRegressionSG"
          },
          {
            "line": 1,
            "name": "@MyContentFirst"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9899,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify User should be able to navigate to Health channel page",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-health-channel-page",
        "after": [
          {
            "result": {
              "duration": 25200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17721925999,
              "status": "passed"
            },
            "line": 59,
            "name": "I relaunch the app on registration failure",
            "match": {
              "location": "RegistrationSteps.iRelaunchTheAppOnRegistrationFailure()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 332947700,
              "status": "passed"
            },
            "comments": [
              {
                "line": 60,
                "value": "#  And User has pulse app"
              },
              {
                "line": 61,
                "value": "#  And I clicks on \"Content\" in app screen"
              }
            ],
            "line": 62,
            "name": "I clicks on \"Content\" in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "Content",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.clickUploadIcons(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15016655299,
              "status": "passed"
            },
            "line": 63,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1514480701,
              "status": "passed"
            },
            "comments": [
              {
                "line": 64,
                "value": "#   And I click the First Image in Health channel"
              },
              {
                "line": 65,
                "value": "#  Then I wait for 15 sec"
              }
            ],
            "line": 66,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 71,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 51500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5455344300,
              "status": "passed"
            },
            "line": 72,
            "name": "I read the Post count data in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.iReadThePostLikeCount()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5467135900,
              "status": "passed"
            },
            "line": 73,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5185473999,
              "status": "passed"
            },
            "line": 74,
            "name": "I read the Post cound after click the Like button",
            "match": {
              "location": "CustomerConnectSteps.iVerifyPostLikeCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5483052899,
              "status": "passed"
            },
            "line": 75,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41299,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 28399,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 26100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5432634200,
              "status": "passed"
            },
            "line": 78,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5503818601,
              "status": "passed"
            },
            "line": 79,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12799,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 81,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 20500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5151011000,
              "status": "passed"
            },
            "line": 82,
            "name": "I read the Comment count in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostClick()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4619041200,
              "status": "passed"
            },
            "line": 83,
            "name": "I click the comment icon in Covid-19 screen",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCountIsIncreased()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13966330399,
              "status": "passed"
            },
            "line": 84,
            "name": "I commented in the posts \"${Health.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${Health.topic.comment}",
                  "offset": 26
                }
              ],
              "location": "CustomerConnectSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5184270200,
              "status": "passed"
            },
            "line": 85,
            "name": "I read the Post count after click the comments button",
            "match": {
              "location": "CustomerConnectSteps.VerifyCommentPostCount()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 88,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 20700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30025835601,
              "status": "passed"
            },
            "line": 89,
            "name": "I click on Covid-19  topic for details full view",
            "match": {
              "location": "CustomerConnectSteps.ClickFirstImagesIcons()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14999533999,
              "status": "passed"
            },
            "line": 90,
            "name": "I wait for 15 sec",
            "match": {
              "arguments": [
                {
                  "val": "15",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1468589999,
              "status": "passed"
            },
            "line": 91,
            "name": "I verify following text are displayed in health channel",
            "match": {
              "location": "MyDocSteps.verifyTextsOnScreens(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 92
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 93
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 94
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 96,
        "name": "Verify User should be able to Like the post- Full page article post",
        "description": "",
        "id": "verify-mycontent-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post--full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 54101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5369358000,
              "status": "passed"
            },
            "line": 97,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5323546701,
              "status": "passed"
            },
            "line": 98,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10649415401,
              "status": "passed"
            },
            "line": 99,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify MyContent functionality on one pulse App",
    "description": "",
    "id": "verify-mycontent-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/home/mycontent/MyContent.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MyContentFirst"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@sanity"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 6,
        "name": "Verify that No linked policies information message is displayed",
        "description": "",
        "id": "verify-that-user-can-view-his-registered-policies-under-my-policies;verify-that-no-linked-policies-information-message-is-displayed",
        "after": [
          {
            "result": {
              "duration": 23400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8550029499,
              "status": "passed"
            },
            "line": 7,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69699,
              "status": "passed"
            },
            "line": 8,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8007700300,
              "status": "passed"
            },
            "line": 9,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10712402799,
              "status": "passed"
            },
            "line": 10,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 274813200,
              "status": "passed"
            },
            "line": 13,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000844100,
              "status": "passed"
            },
            "line": 14,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30801051700,
              "status": "passed"
            },
            "line": 15,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9187828899,
              "status": "passed"
            },
            "line": 16,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1406195700,
              "status": "passed"
            },
            "line": 17,
            "name": "I clicks on \"My Policies\" icon in Home screen",
            "match": {
              "arguments": [
                {
                  "val": "My Policies",
                  "offset": 13
                }
              ],
              "location": "MyPolicySteps.iClicksOnIconInHomeScreen(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1552945100,
              "status": "passed"
            },
            "line": 18,
            "name": "I clicks on Proceed button to accept the terms and conditions",
            "match": {
              "location": "MyPolicySteps.iClicksOnProceedButtonToAcceptTheTermsAndConditions()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2946807100,
              "status": "passed"
            },
            "line": 19,
            "name": "User can see the list of linked policies",
            "match": {
              "location": "MyPolicySteps.userCanSeeTheListOfLinkedPolicies()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@OPUATRegressionSG"
          }
        ]
      }
    ],
    "name": "Verify that user can view his registered policies under My Policies",
    "description": "",
    "id": "verify-that-user-can-view-his-registered-policies-under-my-policies",
    "keyword": "Feature",
    "uri": "features/sg/home/mypolicies/MyPolicies.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@MyPolicies"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 19700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 30700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8562721900,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64200,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7307713499,
              "status": "passed"
            },
            "line": 8,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10047489400,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 293181700,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10006857000,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30495449500,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13932328000,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 16,
            "value": "#    And I click the pulsemate pop up in Customerconnect screen"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "Verify the Terms and condition should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-terms-and-condition-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 17700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 2700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5010132100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 21,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 766027501,
              "status": "passed"
            },
            "line": 23,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3696555901,
              "status": "passed"
            },
            "line": 24,
            "name": "I click the Legacy and Privacy in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickLegalandLegacy()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2604966100,
              "status": "passed"
            },
            "line": 25,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Terms.conditions.text}"
                ],
                "line": 26
              },
              {
                "cells": [
                  "${Privacy.Notice.text}"
                ],
                "line": 27
              },
              {
                "cells": [
                  "${Regulatory.text}"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 29,
            "value": "#   | ${Appversion.text}       |"
          },
          {
            "line": 30,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 13100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 31,
        "name": "Verify the Privacy screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-privacy-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 38100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2326055499,
              "status": "passed"
            },
            "line": 32,
            "name": "I click the Privacy icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickprivacyIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13598446201,
              "status": "passed"
            },
            "line": 33,
            "name": "I click the pulse icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickpulseIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2391330901,
              "status": "passed"
            },
            "line": 34,
            "name": "I click the Back icon in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3431027500,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Back icon in Privacy Notice",
            "match": {
              "location": "CustomerConnectSteps.clickBackbuttonPrivacy()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "comments": [
          {
            "line": 36,
            "value": "#"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 28200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 37,
        "name": "Verify the Regulator screen should be displayed",
        "description": "",
        "id": "verify-legal-and-legacy-on-one-pluse-app;verify-the-regulator-screen-should-be-displayed",
        "after": [
          {
            "result": {
              "duration": 30300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 298734500,
              "status": "passed"
            },
            "comments": [
              {
                "line": 38,
                "value": "# And I click the pulsemate pop up in Customerconnect screen"
              }
            ],
            "line": 39,
            "name": "I click the Regulatory icon in legal screen",
            "match": {
              "location": "CustomerConnectSteps.clickRegulatory()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1706875701,
              "status": "passed"
            },
            "comments": [
              {
                "line": 40,
                "value": "#  And I click the clinical safety icon in Account screen"
              }
            ],
            "line": 41,
            "name": "I click the Babylons  icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickBabylon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3002288400,
              "status": "passed"
            },
            "line": 42,
            "name": "I verify following texts are displayed in terms and condition screen",
            "match": {
              "location": "DieticianSteps.VerifyTermsandCondition(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Clinicalsafety.text}"
                ],
                "line": 43
              },
              {
                "cells": [
                  "${AI.in.Healthcare.text}"
                ],
                "line": 44
              },
              {
                "cells": [
                  "${Localisation.text}"
                ],
                "line": 45
              },
              {
                "cells": [
                  "${Privacy.Data.Protection.text}"
                ],
                "line": 46
              },
              {
                "cells": [
                  "${Raising.Concerns}"
                ],
                "line": 47
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20692660399,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the clinical safety icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickClinical()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8014926000,
              "status": "passed"
            },
            "line": 49,
            "name": "I wait for 8 sec",
            "match": {
              "arguments": [
                {
                  "val": "8",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20832192700,
              "status": "passed"
            },
            "line": 50,
            "name": "I click the Back icons in pulse screen",
            "match": {
              "location": "CustomerConnectSteps.ClickBackBabylons()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify legal and legacy on One Pluse App",
    "description": "",
    "id": "verify-legal-and-legacy-on-one-pluse-app",
    "keyword": "Feature",
    "uri": "features/sg/profile/LegalAndLegacy.feature",
    "tags": [
      {
        "line": 1,
        "name": "@Legalsg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionPH"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "comments": [
          {
            "line": 4,
            "value": "#  Scenario: Verify User should be able to navigate to Edit profile screen and should be able to change the profile on app"
          },
          {
            "line": 5,
            "value": "#    Given User has pulse app"
          },
          {
            "line": 6,
            "value": "#    And I assign \"${onepulse.login.edit.profile}\" to variable \"PULSE_EMAIL\""
          },
          {
            "line": 7,
            "value": "#    When I navigate to login page"
          },
          {
            "line": 8,
            "value": "#    When user enters credentials"
          },
          {
            "line": 9,
            "value": "#      | UserName | ${PULSE_EMAIL} |"
          },
          {
            "line": 10,
            "value": "#      | Password | Pas$1234      |"
          },
          {
            "line": 11,
            "value": "#    And User clicks on signin button"
          },
          {
            "line": 12,
            "value": "#    Then I wait for 40 sec"
          },
          {
            "line": 13,
            "value": "#    Given I create connection for api service"
          },
          {
            "line": 14,
            "value": "#    And I set endpoint url for reading email as \"https://mailsac.com/api/addresses/${PULSE_EMAIL}/messages/\""
          },
          {
            "line": 15,
            "value": "#    And I send request to \"get\" the otp with \"https://mailsac.com/api/raw/${PULSE_EMAIL}/\" stored into variable \"EMAIL_OTP\""
          },
          {
            "line": 16,
            "value": "#    And I enter \"${EMAIL_OTP}\" OTP"
          },
          {
            "line": 17,
            "value": "#    Then user should be landed to \"Home\" screen"
          },
          {
            "line": 18,
            "value": "#    Then user navigate to account page"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 17401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 20,
        "name": "User should be able to login on app with correct credentials using \"Continue with Gmail\"",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;user-should-be-able-to-login-on-app-with-correct-credentials-using-\"continue-with-gmail\"",
        "after": [
          {
            "result": {
              "duration": 29500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4599,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8764951799,
              "status": "passed"
            },
            "line": 21,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 112300,
              "status": "passed"
            },
            "line": 22,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9282474701,
              "status": "passed"
            },
            "line": 23,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9968621400,
              "status": "passed"
            },
            "line": 24,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Password",
                  "${Password.text}"
                ],
                "line": 26
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 299470499,
              "status": "passed"
            },
            "line": 27,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9998016100,
              "status": "passed"
            },
            "comments": [
              {
                "line": 28,
                "value": "#  Then I wait for 59 sec"
              }
            ],
            "line": 29,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 31966422400,
              "status": "passed"
            },
            "line": 30,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10092483099,
              "status": "passed"
            },
            "line": 31,
            "name": "user should be landed home screen",
            "match": {
              "location": "RegistrationSteps.isHomePageDisplayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 24999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify the My Feedback screen in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-my-feedback-screen-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 24401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5007557499,
              "status": "passed"
            },
            "line": 34,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 859169000,
              "status": "passed"
            },
            "line": 35,
            "name": "I click the Account icon in Home screen",
            "match": {
              "location": "RegistrationSteps.accountButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3756868700,
              "status": "passed"
            },
            "line": 36,
            "name": "I click the My Feedback icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickMyFeedback()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4481180900,
              "status": "passed"
            },
            "line": 37,
            "name": "I click the Feedback start icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.clickstartIcon()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1775701000,
              "status": "passed"
            },
            "line": 38,
            "name": "I verify following texts are Displayed",
            "match": {
              "location": "DieticianSteps.verifyTextsOnScreen(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${HealthArticles.text}"
                ],
                "line": 39
              },
              {
                "cells": [
                  "${BMI.text}"
                ],
                "line": 40
              },
              {
                "cells": [
                  "${Wrinkle.text}"
                ],
                "line": 41
              },
              {
                "cells": [
                  "${Health.Assessment.text}"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 44,
        "name": "Verify the submit functionality in My feedback screen",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-submit-functionality-in-my-feedback-screen",
        "after": [
          {
            "result": {
              "duration": 24401,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4199,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4480897800,
              "status": "passed"
            },
            "line": 45,
            "name": "I click the Health Articles icon in Account screen",
            "match": {
              "location": "CustomerConnectSteps.ClickHealthArticles()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9127383200,
              "status": "passed"
            },
            "line": 46,
            "name": "I enter the \"Feedback\" in welcome to Feedback Screen",
            "match": {
              "arguments": [
                {
                  "val": "Feedback",
                  "offset": 13
                }
              ],
              "location": "CustomerConnectSteps.enterMobileNumber(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "mobileNumber",
                  "98678419"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4875361200,
              "status": "passed"
            },
            "line": 48,
            "name": "I click the Submit icon in Feedback Screen",
            "match": {
              "location": "CustomerConnectSteps.clickSubmitFeedbackIcon()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15099,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 50,
        "name": "Verify the Pulse Personalised tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-pulse-personalised-tab",
        "after": [
          {
            "result": {
              "duration": 33101,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3999,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3001628400,
              "status": "passed"
            },
            "line": 51,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5067622100,
              "status": "passed"
            },
            "line": 52,
            "name": "I click the Pulse by Personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickpulsePersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3005850899,
              "status": "passed"
            },
            "line": 53,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3563331100,
              "status": "passed"
            },
            "line": 54,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8340354200,
              "status": "passed"
            },
            "line": 55,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8517299401,
              "status": "passed"
            },
            "line": 56,
            "name": "I click the Back icon in pulse personalised screen",
            "match": {
              "location": "CustomerConnectSteps.clickBackpersonalisedScreen()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 58,
        "name": "Verify the Marketing Consent in Account tab",
        "description": "",
        "id": "verify-mysettings-functionality-in-account-screen;verify-the-marketing-consent-in-account-tab",
        "after": [
          {
            "result": {
              "duration": 38000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8809217001,
              "status": "passed"
            },
            "line": 59,
            "name": "I click the Marketing content",
            "match": {
              "location": "CustomerConnectSteps.clickMarketContent()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3004745300,
              "status": "passed"
            },
            "line": 60,
            "name": "I wait for 3 sec",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 254910500,
              "status": "passed"
            },
            "line": 61,
            "name": "I verify the following text \"Marketing Consent\" Screens",
            "match": {
              "arguments": [
                {
                  "val": "Marketing Consent",
                  "offset": 29
                }
              ],
              "location": "DieticianSteps.isStaticTextDisplayedOncommunitiesScreens(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "${Marketing.Consent.text}"
                ],
                "line": 62
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3573055200,
              "status": "passed"
            },
            "line": 63,
            "name": "I click the save button in pulse personalised icons",
            "match": {
              "location": "CustomerConnectSteps.clickSavebuttonpersonalized()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8326146700,
              "status": "passed"
            },
            "line": 64,
            "name": "I click the Ok button in pulse personlised screen",
            "match": {
              "location": "CustomerConnectSteps.clickpersonalisedscreen()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8722692600,
              "status": "passed"
            },
            "line": 65,
            "name": "I click the Back icon in pulse Marketing Consent",
            "match": {
              "location": "CustomerConnectSteps.ClickBackMarketConsent()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Verify MySettings functionality in Account screen",
    "description": "",
    "id": "verify-mysettings-functionality-in-account-screen",
    "keyword": "Feature",
    "uri": "features/sg/profile/PulseMySettings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@MySettingsSg"
      },
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@Sanity"
      },
      {
        "line": 1,
        "name": "@Sanity1"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressioPH"
      },
      {
        "line": 1,
        "name": "@PhPersonalized"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 15200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 4,
        "name": "Verify User should be able to login using email account",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-login-using-email-account",
        "after": [
          {
            "result": {
              "duration": 25100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8738330200,
              "status": "passed"
            },
            "line": 5,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72300,
              "status": "passed"
            },
            "line": 6,
            "name": "I assign \"${onepulse.login.global.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${onepulse.login.global.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 52
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8276793900,
              "status": "passed"
            },
            "line": 7,
            "name": "I navigate to login page",
            "match": {
              "location": "LoginSteps.iNavigateToLoginPage()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1652200,
              "status": "passed"
            },
            "line": 8,
            "name": "I create connection for api service",
            "match": {
              "location": "APISteps.createConnection()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9449140500,
              "status": "passed"
            },
            "line": 9,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 10
              },
              {
                "cells": [
                  "Password",
                  "Pulse@123"
                ],
                "line": 11
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 272554600,
              "status": "passed"
            },
            "line": 12,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000904700,
              "status": "passed"
            },
            "line": 13,
            "name": "I wait for 10 sec",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30262369100,
              "status": "passed"
            },
            "line": 14,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14433514100,
              "status": "passed"
            },
            "line": 15,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 17,
        "name": "Verify User should be able to navigate to wealth page",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-navigate-to-wealth-page",
        "after": [
          {
            "result": {
              "duration": 22500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 869227300,
              "status": "passed"
            },
            "line": 18,
            "name": "I navigate to wealth screen",
            "match": {
              "location": "WealthSteps.iNavigateToWealthScreen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4483638900,
              "status": "passed"
            },
            "line": 19,
            "name": "I verify following wealth homepage options",
            "match": {
              "location": "WealthSteps.iVerifyFollowingWealthHomepageOptions(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channel"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Wealth"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Care about your finances"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 22700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 25,
        "name": "Verify User should be able to see the wealth screen options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-wealth-screen-options",
        "after": [
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5401737300,
              "status": "passed"
            },
            "line": 26,
            "name": "I navigate to wealth channel explore page",
            "match": {
              "location": "WealthSteps.iNavigateToWealthChannelExplorePage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 32533595200,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Wealth Channels"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Learn Investing Basics"
                ],
                "line": 29
              },
              {
                "comments": [
                  {
                    "line": 30,
                    "value": "# |Importance of Money Parenting |"
                  }
                ],
                "cells": [
                  "What should I as a Parent know?"
                ],
                "line": 31
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 33,
        "name": "Verify User should be able to view the story post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-story-post",
        "after": [
          {
            "result": {
              "duration": 17900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5575961700,
              "status": "passed"
            },
            "line": 34,
            "name": "I click on \"Learn Investing Basics\" wealth channel topic",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnWealthChannelTopic(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 36,
        "name": "Verify User should be able to see the story post Like, Share, Comment options",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-story-post-like,-share,-comment-options",
        "after": [
          {
            "result": {
              "duration": 22800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11397618200,
              "status": "passed"
            },
            "line": 37,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 32100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 15100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 42,
        "name": "Verify User should be able to Like the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post",
        "after": [
          {
            "result": {
              "duration": 35100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13513010200,
              "status": "passed"
            },
            "line": 43,
            "name": "I read the \"Learn Investing Basics\" post like count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostLikeCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5607166000,
              "status": "passed"
            },
            "line": 44,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5254708400,
              "status": "passed"
            },
            "line": 45,
            "name": "I verify \"Learn Investing Basics\" post like count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostLikeCountIsIncreased(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5584605600,
              "status": "passed"
            },
            "line": 46,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 21500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 18600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 48,
        "name": "Verify User should be able to Share the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post",
        "after": [
          {
            "result": {
              "duration": 28600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5452075500,
              "status": "passed"
            },
            "line": 49,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6077607100,
              "status": "passed"
            },
            "line": 50,
            "name": "I Verify the share with friends popup",
            "match": {
              "location": "WealthSteps.iVerifyTheShareWithFriendsPopup()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 52,
        "name": "Verify User should be able to Comment the post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post",
        "after": [
          {
            "result": {
              "duration": 22600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5243495200,
              "status": "passed"
            },
            "line": 53,
            "name": "I read the \"Learn Investing Basics\" post comment count",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iReadThePostCommentCount(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8474122800,
              "status": "passed"
            },
            "line": 54,
            "name": "I commented in the post \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 25
                }
              ],
              "location": "WealthSteps.iCommentedInThePost(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5276206600,
              "status": "passed"
            },
            "line": 55,
            "name": "I verify \"Learn Investing Basics\" post comment count is increased",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 10
                }
              ],
              "location": "WealthSteps.iVerifyPostCommentCountIsIncreased(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 23000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 57,
        "name": "Verify User should be able to view the full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-view-the-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 31100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8411812100,
              "status": "passed"
            },
            "line": 58,
            "name": "I click on \"Learn Investing Basics\" topic for details full view",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnTopicForDetailsFullView(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 9900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 60,
        "name": "Verify User should be able to see the Like, Share, Comment options on full page article post",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-see-the-like,-share,-comment-options-on-full-page-article-post",
        "after": [
          {
            "result": {
              "duration": 67100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5017340800,
              "status": "passed"
            },
            "line": 61,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34171883300,
              "status": "passed"
            },
            "line": 62,
            "name": "I verify following social cite options are displayed",
            "match": {
              "location": "WealthSteps.iVerifyFollowingSocialCiteOptionsAreDisplayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Like"
                ],
                "line": 63
              },
              {
                "cells": [
                  "Share"
                ],
                "line": 64
              },
              {
                "cells": [
                  "Comment"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 66,
        "name": "Verify User should be able to Like the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-like-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 23100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3500,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5530926800,
              "status": "passed"
            },
            "line": 67,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5560728100,
              "status": "passed"
            },
            "line": 68,
            "name": "I Like the post",
            "match": {
              "location": "WealthSteps.iLikeThePost()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 70,
        "name": "Verify User should be able to Share the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-share-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 56200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5571814500,
              "status": "passed"
            },
            "line": 71,
            "name": "I share the post",
            "match": {
              "location": "WealthSteps.iShareThePost()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10696709500,
              "status": "passed"
            },
            "line": 72,
            "name": "I navigate back to previous page",
            "match": {
              "location": "WealthSteps.iNavigateBackToPreviousPage()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 41200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 31200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 74,
        "name": "Verify User should be able to Comment the post in full article view screen",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-should-be-able-to-comment-the-post-in-full-article-view-screen",
        "after": [
          {
            "result": {
              "duration": 26400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 24269559100,
              "status": "passed"
            },
            "line": 75,
            "name": "I comment in full view post article \"${wealth.topic.comment}\"",
            "match": {
              "arguments": [
                {
                  "val": "${wealth.topic.comment}",
                  "offset": 37
                }
              ],
              "location": "WealthSteps.iCommentInFullViewPostArticle(String)"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 77,
        "name": "Verify User can navigate to wealth homepage",
        "description": "",
        "id": "verify-wealth-channel-functionality-on-one-pulse-app;verify-user-can-navigate-to-wealth-homepage",
        "after": [
          {
            "result": {
              "duration": 25900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4571942000,
              "status": "passed"
            },
            "line": 78,
            "name": "I navigate to story post page",
            "match": {
              "location": "WealthSteps.iNavigateToStoryPostPage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8538759600,
              "status": "passed"
            },
            "line": 79,
            "name": "I click on \"Learn Investing Basics\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Learn Investing Basics",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5385098200,
              "status": "passed"
            },
            "line": 80,
            "name": "I click on \"Wealth Channels\" back button",
            "match": {
              "arguments": [
                {
                  "val": "Wealth Channels",
                  "offset": 12
                }
              ],
              "location": "WealthSteps.iClickOnBackButton(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify wealth channel functionality on one pulse App",
    "description": "",
    "id": "verify-wealth-channel-functionality-on-one-pulse-app",
    "keyword": "Feature",
    "uri": "features/sg/wealth/WealthChannel.feature",
    "tags": [
      {
        "line": 1,
        "name": "@WealthChannelSG"
      },
      {
        "line": 1,
        "name": "@OnePulseRegression"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@05JulyTest"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      }
    ]
  },
  {
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 18200,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 16400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 5,
        "name": "Launch the app and select the country as per specified lbu",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;launch-the-app-and-select-the-country-as-per-specified-lbu",
        "after": [
          {
            "result": {
              "duration": 22900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9682437900,
              "status": "passed"
            },
            "line": 6,
            "name": "User has pulse app",
            "match": {
              "location": "BaseSteps.userHasPulseAppGeneric()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69000,
              "status": "passed"
            },
            "line": 7,
            "name": "I assign \"${login.email.id}\" to variable \"PULSE_EMAIL\"",
            "match": {
              "arguments": [
                {
                  "val": "${login.email.id}",
                  "offset": 10
                },
                {
                  "val": "PULSE_EMAIL",
                  "offset": 42
                }
              ],
              "location": "ConfigvariableSteps.assignValueToVariable(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17964548700,
              "status": "passed"
            },
            "line": 8,
            "name": "user click on \"CONTINUE WITH EMAIL\" with Email button",
            "match": {
              "arguments": [
                {
                  "val": "CONTINUE WITH EMAIL",
                  "offset": 15
                }
              ],
              "location": "RegistrationSteps.clickRegisterWithEmail(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 229230300,
              "status": "passed"
            },
            "line": 9,
            "name": "I change the country as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheCountry()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1999943000,
              "status": "passed"
            },
            "line": 10,
            "name": "I wait for 2 sec",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21600,
              "status": "passed"
            },
            "line": 11,
            "name": "I change the language as required on registration page",
            "match": {
              "location": "RegistrationSteps.iSelectTheLanguage()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4847337800,
              "status": "passed"
            },
            "line": 12,
            "name": "I click the Sign in link",
            "match": {
              "location": "LoginSteps.clickSignIns_InSignUp()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1567530900,
              "status": "passed"
            },
            "line": 13,
            "name": "I verify below language options on toggle bar as per specified lbu on login page",
            "match": {
              "location": "RegistrationSteps.verifyTheLanguageOptions()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 27900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 13600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 15,
        "name": "login to the app with correct credentials using \"Continue with Email\"",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;login-to-the-app-with-correct-credentials-using-\"continue-with-email\"",
        "after": [
          {
            "result": {
              "duration": 26800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2255023900,
              "status": "passed"
            },
            "line": 16,
            "name": "I select the language option on toggle bar as required on login page",
            "match": {
              "location": "RegistrationSteps.selectTheLangOption()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9591051800,
              "status": "passed"
            },
            "line": 17,
            "name": "user enters credentials",
            "match": {
              "location": "LoginSteps.userEntersCredentials(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "UserName",
                  "${PULSE_EMAIL}"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Password",
                  "${login.password}"
                ],
                "line": 19
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 246519200,
              "status": "passed"
            },
            "line": 20,
            "name": "User clicks on signin button",
            "match": {
              "location": "LoginSteps.clickSignInButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34496664100,
              "status": "passed"
            },
            "line": 21,
            "name": "I enter OTP in one pulse app for user email \"${PULSE_EMAIL}\"",
            "match": {
              "arguments": [
                {
                  "val": "${PULSE_EMAIL}",
                  "offset": 45
                }
              ],
              "location": "RegistrationSteps.enterOTPInPulse(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5008315000,
              "status": "passed"
            },
            "line": 22,
            "name": "I wait for 5 sec",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 11
                }
              ],
              "location": "BaseSteps.waitTime(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14605238600,
              "status": "passed"
            },
            "line": 23,
            "name": "user should be landed to \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 26
                }
              ],
              "location": "LoginSteps.landingPageValidation(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 11400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 26,
        "name": "Verify User should be able to share the link with Whatsapp",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-whatsapp",
        "after": [
          {
            "result": {
              "duration": 61600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13611520600,
              "status": "passed"
            },
            "line": 27,
            "name": "I verify the share with friends links",
            "match": {
              "location": "LoginSteps.iVerifyTheShareWithFriendsLinks()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 38900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 27800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 29,
        "name": "Verify User should be able to share the link with Contacts app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-contacts-app",
        "after": [
          {
            "result": {
              "duration": 33100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 6000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9728520400,
              "status": "passed"
            },
            "line": 30,
            "name": "I verify the contacts share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheContactsShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 32,
        "name": "Verify User should be able to share the link with Messenger app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-messenger-app",
        "after": [
          {
            "result": {
              "duration": 46700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 5400,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7421636700,
              "status": "passed"
            },
            "line": 33,
            "name": "I verify the fb messenger share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheFbMessengerShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 12100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 35,
        "name": "Verify User should be able to share the link with Viber app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-viber-app",
        "after": [
          {
            "result": {
              "duration": 20800,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 3900,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21997463600,
              "status": "passed"
            },
            "line": 36,
            "name": "I verify the Viber share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheViberShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14100,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.checkReporterRunning(Scenario)"
            }
          },
          {
            "result": {
              "duration": 10600,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.initializeFramework()"
            }
          }
        ],
        "line": 38,
        "name": "Verify User should be able to share the link with Line app",
        "description": "",
        "id": "verify-share-with-friends-functionality-in-onepulse-app;verify-user-should-be-able-to-share-the-link-with-line-app",
        "after": [
          {
            "result": {
              "duration": 28300,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.afterTest(Scenario)"
            }
          },
          {
            "result": {
              "duration": 4700,
              "status": "passed"
            },
            "match": {
              "location": "CucumberHook.baseState()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21963737400,
              "status": "passed"
            },
            "line": 39,
            "name": "I verify the Line share icon",
            "match": {
              "location": "LoginSteps.iVerifyTheLineShareIcon()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Verify share with friends functionality in OnePulse app",
    "description": "",
    "id": "verify-share-with-friends-functionality-in-onepulse-app",
    "keyword": "Feature",
    "uri": "features/share/ShareWithFriends.feature",
    "tags": [
      {
        "line": 1,
        "name": "@OnepulseRegression"
      },
      {
        "line": 1,
        "name": "@ShareWithFriendsE2E"
      },
      {
        "line": 1,
        "name": "@pulseRegression"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionSG"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionMY"
      },
      {
        "line": 1,
        "name": "@shareWithFriends"
      },
      {
        "line": 1,
        "name": "@OPUATRegressionTH"
      }
    ]
  }
]